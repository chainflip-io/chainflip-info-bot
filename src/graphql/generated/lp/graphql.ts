/* eslint-disable */
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** A floating point number that requires more precision than IEEE 754 binary 64 */
  BigFloat: { input: `${number}`; output: `${number}`; }
  /**
   * A signed eight-byte integer. The upper big integer values are greater than the
   * max value for a JavaScript number. Therefore all big integers will be output as
   * strings and not numbers.
   */
  BigInt: { input: `${number}`; output: `${number}`; }
  /** A location in a connection that can be used for resuming pagination. */
  Cursor: { input: any; output: any; }
  /**
   * A point in time as described by the [ISO
   * 8601](https://en.wikipedia.org/wiki/ISO_8601) standard. May or may not include a timezone.
   */
  Datetime: { input: string; output: string; }
};

export type Account = Node & {
  __typename?: 'Account';
  /** Reads and enables pagination through a set of `BoostLiquidityBalanceChange`. */
  boostLiquidityBalanceChangesByLiquidityProviderId: BoostLiquidityBalanceChangesConnection;
  /** Reads and enables pagination through a set of `BoostShare`. */
  boostSharesByLiquidityProviderId: BoostSharesConnection;
  /** Reads and enables pagination through a set of `DepositChannel`. */
  depositChannelsByBrokerId: DepositChannelsConnection;
  /** Reads and enables pagination through a set of `DepositChannel`. */
  depositChannelsByLiquidityProviderId: DepositChannelsConnection;
  id: Scalars['Int']['output'];
  idSs58: Scalars['String']['output'];
  /** Reads and enables pagination through a set of `LimitOrderFill`. */
  limitOrderFillsByLiquidityProviderId: LimitOrderFillsConnection;
  /** Reads and enables pagination through a set of `LiquidityProviderBoostPoolSummary`. */
  liquidityProviderBoostPoolSummariesByLiquidityProviderId: LiquidityProviderBoostPoolSummariesConnection;
  /** Reads and enables pagination through a set of `LiquiditySnapshot`. */
  liquiditySnapshotsByLiquidityProviderId: LiquiditySnapshotsConnection;
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  /** Reads and enables pagination through a set of `PendingBoostLiquidityWithdrawal`. */
  pendingBoostLiquidityWithdrawalsByLiquidityProviderId: PendingBoostLiquidityWithdrawalsConnection;
  /** Reads and enables pagination through a set of `PoolOrder`. */
  poolOrdersByLiquidityProviderId: PoolOrdersConnection;
  /** Reads and enables pagination through a set of `RangeOrderFill`. */
  rangeOrderFillsByLiquidityProviderId: RangeOrderFillsConnection;
  /** Reads and enables pagination through a set of `TradingStrategy`. */
  tradingStrategiesByOwnerAccountId: TradingStrategiesConnection;
  /** Reads and enables pagination through a set of `TradingStrategy`. */
  tradingStrategiesByStrategyAccountId: TradingStrategiesConnection;
  type: AccountType;
};


export type AccountBoostLiquidityBalanceChangesByLiquidityProviderIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BoostLiquidityBalanceChangeCondition>;
  filter?: InputMaybe<BoostLiquidityBalanceChangeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BoostLiquidityBalanceChangesOrderBy>>;
};


export type AccountBoostSharesByLiquidityProviderIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BoostShareCondition>;
  filter?: InputMaybe<BoostShareFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BoostSharesOrderBy>>;
};


export type AccountDepositChannelsByBrokerIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<DepositChannelCondition>;
  filter?: InputMaybe<DepositChannelFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DepositChannelsOrderBy>>;
};


export type AccountDepositChannelsByLiquidityProviderIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<DepositChannelCondition>;
  filter?: InputMaybe<DepositChannelFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DepositChannelsOrderBy>>;
};


export type AccountLimitOrderFillsByLiquidityProviderIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<LimitOrderFillCondition>;
  filter?: InputMaybe<LimitOrderFillFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LimitOrderFillsOrderBy>>;
};


export type AccountLiquidityProviderBoostPoolSummariesByLiquidityProviderIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<LiquidityProviderBoostPoolSummaryCondition>;
  filter?: InputMaybe<LiquidityProviderBoostPoolSummaryFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LiquidityProviderBoostPoolSummariesOrderBy>>;
};


export type AccountLiquiditySnapshotsByLiquidityProviderIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<LiquiditySnapshotCondition>;
  filter?: InputMaybe<LiquiditySnapshotFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LiquiditySnapshotsOrderBy>>;
};


export type AccountPendingBoostLiquidityWithdrawalsByLiquidityProviderIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<PendingBoostLiquidityWithdrawalCondition>;
  filter?: InputMaybe<PendingBoostLiquidityWithdrawalFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PendingBoostLiquidityWithdrawalsOrderBy>>;
};


export type AccountPoolOrdersByLiquidityProviderIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<PoolOrderCondition>;
  filter?: InputMaybe<PoolOrderFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PoolOrdersOrderBy>>;
};


export type AccountRangeOrderFillsByLiquidityProviderIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<RangeOrderFillCondition>;
  filter?: InputMaybe<RangeOrderFillFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RangeOrderFillsOrderBy>>;
};


export type AccountTradingStrategiesByOwnerAccountIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<TradingStrategyCondition>;
  filter?: InputMaybe<TradingStrategyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TradingStrategiesOrderBy>>;
};


export type AccountTradingStrategiesByStrategyAccountIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<TradingStrategyCondition>;
  filter?: InputMaybe<TradingStrategyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TradingStrategiesOrderBy>>;
};

export type AccountAggregates = {
  __typename?: 'AccountAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<AccountAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<AccountDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<AccountMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<AccountMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<AccountStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<AccountStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<AccountSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<AccountVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<AccountVarianceSampleAggregates>;
};

export type AccountAverageAggregates = {
  __typename?: 'AccountAverageAggregates';
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

/** A condition to be used against `Account` object types. All fields are tested for equality and combined with a logical ‘and.’ */
export type AccountCondition = {
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `idSs58` field. */
  idSs58?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `type` field. */
  type?: InputMaybe<AccountType>;
};

export type AccountDistinctCountAggregates = {
  __typename?: 'AccountDistinctCountAggregates';
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of idSs58 across the matching connection */
  idSs58?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of type across the matching connection */
  type?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `Account` object types. All fields are combined with a logical ‘and.’ */
export type AccountFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<AccountFilter>>;
  /** Filter by the object’s `boostLiquidityBalanceChangesByLiquidityProviderId` relation. */
  boostLiquidityBalanceChangesByLiquidityProviderId?: InputMaybe<AccountToManyBoostLiquidityBalanceChangeFilter>;
  /** Some related `boostLiquidityBalanceChangesByLiquidityProviderId` exist. */
  boostLiquidityBalanceChangesByLiquidityProviderIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `boostSharesByLiquidityProviderId` relation. */
  boostSharesByLiquidityProviderId?: InputMaybe<AccountToManyBoostShareFilter>;
  /** Some related `boostSharesByLiquidityProviderId` exist. */
  boostSharesByLiquidityProviderIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `depositChannelsByBrokerId` relation. */
  depositChannelsByBrokerId?: InputMaybe<AccountToManyDepositChannelFilter>;
  /** Some related `depositChannelsByBrokerId` exist. */
  depositChannelsByBrokerIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `depositChannelsByLiquidityProviderId` relation. */
  depositChannelsByLiquidityProviderId?: InputMaybe<AccountToManyDepositChannelFilter>;
  /** Some related `depositChannelsByLiquidityProviderId` exist. */
  depositChannelsByLiquidityProviderIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Filter by the object’s `idSs58` field. */
  idSs58?: InputMaybe<StringFilter>;
  /** Filter by the object’s `limitOrderFillsByLiquidityProviderId` relation. */
  limitOrderFillsByLiquidityProviderId?: InputMaybe<AccountToManyLimitOrderFillFilter>;
  /** Some related `limitOrderFillsByLiquidityProviderId` exist. */
  limitOrderFillsByLiquidityProviderIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `liquidityProviderBoostPoolSummariesByLiquidityProviderId` relation. */
  liquidityProviderBoostPoolSummariesByLiquidityProviderId?: InputMaybe<AccountToManyLiquidityProviderBoostPoolSummaryFilter>;
  /** Some related `liquidityProviderBoostPoolSummariesByLiquidityProviderId` exist. */
  liquidityProviderBoostPoolSummariesByLiquidityProviderIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `liquiditySnapshotsByLiquidityProviderId` relation. */
  liquiditySnapshotsByLiquidityProviderId?: InputMaybe<AccountToManyLiquiditySnapshotFilter>;
  /** Some related `liquiditySnapshotsByLiquidityProviderId` exist. */
  liquiditySnapshotsByLiquidityProviderIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Negates the expression. */
  not?: InputMaybe<AccountFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<AccountFilter>>;
  /** Filter by the object’s `pendingBoostLiquidityWithdrawalsByLiquidityProviderId` relation. */
  pendingBoostLiquidityWithdrawalsByLiquidityProviderId?: InputMaybe<AccountToManyPendingBoostLiquidityWithdrawalFilter>;
  /** Some related `pendingBoostLiquidityWithdrawalsByLiquidityProviderId` exist. */
  pendingBoostLiquidityWithdrawalsByLiquidityProviderIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `poolOrdersByLiquidityProviderId` relation. */
  poolOrdersByLiquidityProviderId?: InputMaybe<AccountToManyPoolOrderFilter>;
  /** Some related `poolOrdersByLiquidityProviderId` exist. */
  poolOrdersByLiquidityProviderIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `rangeOrderFillsByLiquidityProviderId` relation. */
  rangeOrderFillsByLiquidityProviderId?: InputMaybe<AccountToManyRangeOrderFillFilter>;
  /** Some related `rangeOrderFillsByLiquidityProviderId` exist. */
  rangeOrderFillsByLiquidityProviderIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `tradingStrategiesByOwnerAccountId` relation. */
  tradingStrategiesByOwnerAccountId?: InputMaybe<AccountToManyTradingStrategyFilter>;
  /** Some related `tradingStrategiesByOwnerAccountId` exist. */
  tradingStrategiesByOwnerAccountIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `tradingStrategiesByStrategyAccountId` relation. */
  tradingStrategiesByStrategyAccountId?: InputMaybe<AccountToManyTradingStrategyFilter>;
  /** Some related `tradingStrategiesByStrategyAccountId` exist. */
  tradingStrategiesByStrategyAccountIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `type` field. */
  type?: InputMaybe<AccountTypeFilter>;
};

/** Grouping methods for `Account` for usage during aggregation. */
export type AccountGroupBy =
  | 'TYPE';

export type AccountHavingAverageInput = {
  id?: InputMaybe<HavingIntFilter>;
};

export type AccountHavingDistinctCountInput = {
  id?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `Account` aggregates. */
export type AccountHavingInput = {
  AND?: InputMaybe<Array<AccountHavingInput>>;
  OR?: InputMaybe<Array<AccountHavingInput>>;
  average?: InputMaybe<AccountHavingAverageInput>;
  distinctCount?: InputMaybe<AccountHavingDistinctCountInput>;
  max?: InputMaybe<AccountHavingMaxInput>;
  min?: InputMaybe<AccountHavingMinInput>;
  stddevPopulation?: InputMaybe<AccountHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<AccountHavingStddevSampleInput>;
  sum?: InputMaybe<AccountHavingSumInput>;
  variancePopulation?: InputMaybe<AccountHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<AccountHavingVarianceSampleInput>;
};

export type AccountHavingMaxInput = {
  id?: InputMaybe<HavingIntFilter>;
};

export type AccountHavingMinInput = {
  id?: InputMaybe<HavingIntFilter>;
};

export type AccountHavingStddevPopulationInput = {
  id?: InputMaybe<HavingIntFilter>;
};

export type AccountHavingStddevSampleInput = {
  id?: InputMaybe<HavingIntFilter>;
};

export type AccountHavingSumInput = {
  id?: InputMaybe<HavingIntFilter>;
};

export type AccountHavingVariancePopulationInput = {
  id?: InputMaybe<HavingIntFilter>;
};

export type AccountHavingVarianceSampleInput = {
  id?: InputMaybe<HavingIntFilter>;
};

export type AccountMaxAggregates = {
  __typename?: 'AccountMaxAggregates';
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
};

export type AccountMinAggregates = {
  __typename?: 'AccountMinAggregates';
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
};

export type AccountStddevPopulationAggregates = {
  __typename?: 'AccountStddevPopulationAggregates';
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type AccountStddevSampleAggregates = {
  __typename?: 'AccountStddevSampleAggregates';
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type AccountSumAggregates = {
  __typename?: 'AccountSumAggregates';
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
};

/** A filter to be used against many `BoostLiquidityBalanceChange` object types. All fields are combined with a logical ‘and.’ */
export type AccountToManyBoostLiquidityBalanceChangeFilter = {
  /** Aggregates across related `BoostLiquidityBalanceChange` match the filter criteria. */
  aggregates?: InputMaybe<BoostLiquidityBalanceChangeAggregatesFilter>;
  /** Every related `BoostLiquidityBalanceChange` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<BoostLiquidityBalanceChangeFilter>;
  /** No related `BoostLiquidityBalanceChange` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<BoostLiquidityBalanceChangeFilter>;
  /** Some related `BoostLiquidityBalanceChange` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<BoostLiquidityBalanceChangeFilter>;
};

/** A filter to be used against many `BoostShare` object types. All fields are combined with a logical ‘and.’ */
export type AccountToManyBoostShareFilter = {
  /** Aggregates across related `BoostShare` match the filter criteria. */
  aggregates?: InputMaybe<BoostShareAggregatesFilter>;
  /** Every related `BoostShare` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<BoostShareFilter>;
  /** No related `BoostShare` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<BoostShareFilter>;
  /** Some related `BoostShare` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<BoostShareFilter>;
};

/** A filter to be used against many `DepositChannel` object types. All fields are combined with a logical ‘and.’ */
export type AccountToManyDepositChannelFilter = {
  /** Aggregates across related `DepositChannel` match the filter criteria. */
  aggregates?: InputMaybe<DepositChannelAggregatesFilter>;
  /** Every related `DepositChannel` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<DepositChannelFilter>;
  /** No related `DepositChannel` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<DepositChannelFilter>;
  /** Some related `DepositChannel` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<DepositChannelFilter>;
};

/** A filter to be used against many `LimitOrderFill` object types. All fields are combined with a logical ‘and.’ */
export type AccountToManyLimitOrderFillFilter = {
  /** Aggregates across related `LimitOrderFill` match the filter criteria. */
  aggregates?: InputMaybe<LimitOrderFillAggregatesFilter>;
  /** Every related `LimitOrderFill` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<LimitOrderFillFilter>;
  /** No related `LimitOrderFill` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<LimitOrderFillFilter>;
  /** Some related `LimitOrderFill` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<LimitOrderFillFilter>;
};

/** A filter to be used against many `LiquidityProviderBoostPoolSummary` object types. All fields are combined with a logical ‘and.’ */
export type AccountToManyLiquidityProviderBoostPoolSummaryFilter = {
  /** Aggregates across related `LiquidityProviderBoostPoolSummary` match the filter criteria. */
  aggregates?: InputMaybe<LiquidityProviderBoostPoolSummaryAggregatesFilter>;
  /** Every related `LiquidityProviderBoostPoolSummary` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<LiquidityProviderBoostPoolSummaryFilter>;
  /** No related `LiquidityProviderBoostPoolSummary` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<LiquidityProviderBoostPoolSummaryFilter>;
  /** Some related `LiquidityProviderBoostPoolSummary` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<LiquidityProviderBoostPoolSummaryFilter>;
};

/** A filter to be used against many `LiquiditySnapshot` object types. All fields are combined with a logical ‘and.’ */
export type AccountToManyLiquiditySnapshotFilter = {
  /** Aggregates across related `LiquiditySnapshot` match the filter criteria. */
  aggregates?: InputMaybe<LiquiditySnapshotAggregatesFilter>;
  /** Every related `LiquiditySnapshot` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<LiquiditySnapshotFilter>;
  /** No related `LiquiditySnapshot` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<LiquiditySnapshotFilter>;
  /** Some related `LiquiditySnapshot` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<LiquiditySnapshotFilter>;
};

/** A filter to be used against many `PendingBoostLiquidityWithdrawal` object types. All fields are combined with a logical ‘and.’ */
export type AccountToManyPendingBoostLiquidityWithdrawalFilter = {
  /** Aggregates across related `PendingBoostLiquidityWithdrawal` match the filter criteria. */
  aggregates?: InputMaybe<PendingBoostLiquidityWithdrawalAggregatesFilter>;
  /** Every related `PendingBoostLiquidityWithdrawal` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<PendingBoostLiquidityWithdrawalFilter>;
  /** No related `PendingBoostLiquidityWithdrawal` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<PendingBoostLiquidityWithdrawalFilter>;
  /** Some related `PendingBoostLiquidityWithdrawal` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<PendingBoostLiquidityWithdrawalFilter>;
};

/** A filter to be used against many `PoolOrder` object types. All fields are combined with a logical ‘and.’ */
export type AccountToManyPoolOrderFilter = {
  /** Aggregates across related `PoolOrder` match the filter criteria. */
  aggregates?: InputMaybe<PoolOrderAggregatesFilter>;
  /** Every related `PoolOrder` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<PoolOrderFilter>;
  /** No related `PoolOrder` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<PoolOrderFilter>;
  /** Some related `PoolOrder` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<PoolOrderFilter>;
};

/** A filter to be used against many `RangeOrderFill` object types. All fields are combined with a logical ‘and.’ */
export type AccountToManyRangeOrderFillFilter = {
  /** Aggregates across related `RangeOrderFill` match the filter criteria. */
  aggregates?: InputMaybe<RangeOrderFillAggregatesFilter>;
  /** Every related `RangeOrderFill` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<RangeOrderFillFilter>;
  /** No related `RangeOrderFill` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<RangeOrderFillFilter>;
  /** Some related `RangeOrderFill` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<RangeOrderFillFilter>;
};

/** A filter to be used against many `TradingStrategy` object types. All fields are combined with a logical ‘and.’ */
export type AccountToManyTradingStrategyFilter = {
  /** Aggregates across related `TradingStrategy` match the filter criteria. */
  aggregates?: InputMaybe<TradingStrategyAggregatesFilter>;
  /** Every related `TradingStrategy` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<TradingStrategyFilter>;
  /** No related `TradingStrategy` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<TradingStrategyFilter>;
  /** Some related `TradingStrategy` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<TradingStrategyFilter>;
};

export type AccountType =
  | 'BROKER'
  | 'LIQUIDITY_PROVIDER'
  | 'TRADING_STRATEGY'
  | 'UNREGISTERED'
  | 'VALIDATOR';

/** A filter to be used against AccountType fields. All fields are combined with a logical ‘and.’ */
export type AccountTypeFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<AccountType>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<AccountType>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<AccountType>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<AccountType>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<AccountType>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<AccountType>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<AccountType>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<AccountType>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<AccountType>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<AccountType>>;
};

export type AccountVariancePopulationAggregates = {
  __typename?: 'AccountVariancePopulationAggregates';
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type AccountVarianceSampleAggregates = {
  __typename?: 'AccountVarianceSampleAggregates';
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `Account` values. */
export type AccountsConnection = {
  __typename?: 'AccountsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<AccountAggregates>;
  /** A list of edges which contains the `Account` and cursor to aid in pagination. */
  edges: Array<AccountsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<AccountAggregates>>;
  /** A list of `Account` objects. */
  nodes: Array<Account>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Account` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Account` values. */
export type AccountsConnectionGroupedAggregatesArgs = {
  groupBy: Array<AccountGroupBy>;
  having?: InputMaybe<AccountHavingInput>;
};

/** A `Account` edge in the connection. */
export type AccountsEdge = {
  __typename?: 'AccountsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Account` at the end of the edge. */
  node: Account;
};

/** Methods to use when ordering `Account`. */
export type AccountsOrderBy =
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_TYPE_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_COUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_COUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_TYPE_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_MAX_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_MAX_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_MAX_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_MAX_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_MAX_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_MAX_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_MAX_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_MAX_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_MAX_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_MAX_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_MAX_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_MAX_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_MAX_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_MAX_TYPE_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_MIN_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_MIN_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_MIN_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_MIN_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_MIN_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_MIN_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_MIN_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_MIN_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_MIN_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_MIN_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_MIN_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_MIN_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_MIN_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_MIN_TYPE_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_TYPE_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_TYPE_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_SUM_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_SUM_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_SUM_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_SUM_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_SUM_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_SUM_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_SUM_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_SUM_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_SUM_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_SUM_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_SUM_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_SUM_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_SUM_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_SUM_TYPE_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_TYPE_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_TYPE_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_AMOUNT_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_AMOUNT_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_AMOUNT_USD_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_AMOUNT_USD_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BOOST_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BOOST_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BOOST_POOL_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BOOST_POOL_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FEE_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FEE_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FEE_USD_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FEE_USD_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LOST_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LOST_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_COUNT_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_COUNT_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_AMOUNT_USD_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_AMOUNT_USD_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BOOST_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BOOST_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BOOST_POOL_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BOOST_POOL_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FEE_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FEE_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FEE_USD_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FEE_USD_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LOST_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LOST_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MAX_AMOUNT_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MAX_AMOUNT_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MAX_AMOUNT_USD_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MAX_AMOUNT_USD_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MAX_BOOST_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MAX_BOOST_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MAX_BOOST_POOL_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MAX_BOOST_POOL_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MAX_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MAX_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MAX_FEE_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MAX_FEE_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MAX_FEE_USD_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MAX_FEE_USD_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MAX_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MAX_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MAX_LOST_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MAX_LOST_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MIN_AMOUNT_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MIN_AMOUNT_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MIN_AMOUNT_USD_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MIN_AMOUNT_USD_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MIN_BOOST_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MIN_BOOST_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MIN_BOOST_POOL_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MIN_BOOST_POOL_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MIN_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MIN_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MIN_FEE_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MIN_FEE_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MIN_FEE_USD_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MIN_FEE_USD_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MIN_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MIN_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MIN_LOST_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_MIN_LOST_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_AMOUNT_USD_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_AMOUNT_USD_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BOOST_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BOOST_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BOOST_POOL_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BOOST_POOL_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FEE_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FEE_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FEE_USD_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FEE_USD_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LOST_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LOST_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_AMOUNT_USD_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_AMOUNT_USD_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BOOST_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BOOST_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BOOST_POOL_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BOOST_POOL_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FEE_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FEE_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FEE_USD_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FEE_USD_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LOST_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LOST_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_SUM_AMOUNT_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_SUM_AMOUNT_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_SUM_AMOUNT_USD_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_SUM_AMOUNT_USD_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_SUM_BOOST_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_SUM_BOOST_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_SUM_BOOST_POOL_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_SUM_BOOST_POOL_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_SUM_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_SUM_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_SUM_FEE_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_SUM_FEE_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_SUM_FEE_USD_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_SUM_FEE_USD_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_SUM_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_SUM_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_SUM_LOST_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_SUM_LOST_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_AMOUNT_USD_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_AMOUNT_USD_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BOOST_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BOOST_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BOOST_POOL_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BOOST_POOL_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FEE_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FEE_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FEE_USD_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FEE_USD_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LOST_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LOST_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_AMOUNT_USD_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_AMOUNT_USD_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BOOST_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BOOST_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BOOST_POOL_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BOOST_POOL_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FEE_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FEE_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FEE_USD_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FEE_USD_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LOST_ASC'
  | 'BOOST_SHARES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LOST_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_AVERAGE_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_AVERAGE_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_AVERAGE_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_AVERAGE_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_AVERAGE_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_AVERAGE_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_AVERAGE_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_AVERAGE_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_AVERAGE_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_AVERAGE_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_AVERAGE_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_AVERAGE_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_AVERAGE_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_AVERAGE_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_AVERAGE_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_AVERAGE_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_AVERAGE_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_AVERAGE_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_AVERAGE_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_AVERAGE_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_COUNT_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_COUNT_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_DISTINCT_COUNT_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MAX_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MAX_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MAX_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MAX_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MAX_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MAX_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MAX_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MAX_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MAX_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MAX_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MAX_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MAX_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MAX_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MAX_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MAX_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MAX_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MAX_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MAX_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MAX_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MAX_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MIN_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MIN_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MIN_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MIN_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MIN_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MIN_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MIN_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MIN_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MIN_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MIN_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MIN_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MIN_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MIN_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MIN_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MIN_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MIN_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MIN_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MIN_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MIN_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_MIN_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_POPULATION_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_STDDEV_SAMPLE_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_SUM_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_SUM_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_SUM_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_SUM_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_SUM_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_SUM_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_SUM_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_SUM_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_SUM_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_SUM_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_SUM_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_SUM_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_SUM_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_SUM_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_SUM_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_SUM_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_SUM_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_SUM_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_SUM_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_SUM_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_POPULATION_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_BROKER_ID_VARIANCE_SAMPLE_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_COUNT_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_COUNT_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MAX_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_MIN_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_SUM_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_TYPE_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'ID_SS58_ASC'
  | 'ID_SS58_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_ASSET_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_ASSET_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BLOCK_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BLOCK_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BLOCK_TIMESTAMP_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BLOCK_TIMESTAMP_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FEES_EARNED_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FEES_EARNED_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FEES_EARNED_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FEES_EARNED_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FILLED_AMOUNT_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FILLED_AMOUNT_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FILLED_AMOUNT_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FILLED_AMOUNT_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ID_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ID_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ORDER_ID_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ORDER_ID_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ORIGINAL_SELL_AMOUNT_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ORIGINAL_SELL_AMOUNT_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ORIGINAL_SELL_AMOUNT_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ORIGINAL_SELL_AMOUNT_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_SELL_AMOUNT_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_SELL_AMOUNT_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_SELL_AMOUNT_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_SELL_AMOUNT_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_TICK_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_TICK_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_TYPE_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_TYPE_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_COUNT_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_COUNT_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_ASSET_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_ASSET_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BLOCK_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BLOCK_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BLOCK_TIMESTAMP_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BLOCK_TIMESTAMP_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FEES_EARNED_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FEES_EARNED_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FEES_EARNED_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FEES_EARNED_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FILLED_AMOUNT_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FILLED_AMOUNT_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FILLED_AMOUNT_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FILLED_AMOUNT_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ID_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ID_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ORDER_ID_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ORDER_ID_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ORIGINAL_SELL_AMOUNT_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ORIGINAL_SELL_AMOUNT_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ORIGINAL_SELL_AMOUNT_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ORIGINAL_SELL_AMOUNT_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_SELL_AMOUNT_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_SELL_AMOUNT_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_SELL_AMOUNT_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_SELL_AMOUNT_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_TICK_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_TICK_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_TYPE_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_TYPE_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_ASSET_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_ASSET_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_BLOCK_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_BLOCK_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_BLOCK_TIMESTAMP_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_BLOCK_TIMESTAMP_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_FEES_EARNED_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_FEES_EARNED_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_FEES_EARNED_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_FEES_EARNED_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_FILLED_AMOUNT_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_FILLED_AMOUNT_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_FILLED_AMOUNT_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_FILLED_AMOUNT_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_ID_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_ID_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_ORDER_ID_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_ORDER_ID_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_ORIGINAL_SELL_AMOUNT_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_ORIGINAL_SELL_AMOUNT_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_ORIGINAL_SELL_AMOUNT_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_ORIGINAL_SELL_AMOUNT_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_SELL_AMOUNT_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_SELL_AMOUNT_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_SELL_AMOUNT_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_SELL_AMOUNT_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_TICK_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_TICK_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_TYPE_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_TYPE_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_ASSET_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_ASSET_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_BLOCK_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_BLOCK_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_BLOCK_TIMESTAMP_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_BLOCK_TIMESTAMP_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_FEES_EARNED_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_FEES_EARNED_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_FEES_EARNED_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_FEES_EARNED_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_FILLED_AMOUNT_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_FILLED_AMOUNT_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_FILLED_AMOUNT_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_FILLED_AMOUNT_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_ID_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_ID_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_ORDER_ID_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_ORDER_ID_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_ORIGINAL_SELL_AMOUNT_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_ORIGINAL_SELL_AMOUNT_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_ORIGINAL_SELL_AMOUNT_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_ORIGINAL_SELL_AMOUNT_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_SELL_AMOUNT_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_SELL_AMOUNT_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_SELL_AMOUNT_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_SELL_AMOUNT_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_TICK_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_TICK_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_TYPE_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_TYPE_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_ASSET_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_ASSET_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BLOCK_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BLOCK_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BLOCK_TIMESTAMP_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BLOCK_TIMESTAMP_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FEES_EARNED_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FEES_EARNED_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FEES_EARNED_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FEES_EARNED_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FILLED_AMOUNT_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FILLED_AMOUNT_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FILLED_AMOUNT_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FILLED_AMOUNT_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ID_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ID_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ORDER_ID_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ORDER_ID_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ORIGINAL_SELL_AMOUNT_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ORIGINAL_SELL_AMOUNT_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ORIGINAL_SELL_AMOUNT_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ORIGINAL_SELL_AMOUNT_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_SELL_AMOUNT_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_SELL_AMOUNT_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_SELL_AMOUNT_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_SELL_AMOUNT_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_TICK_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_TICK_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_TYPE_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_TYPE_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_ASSET_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_ASSET_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BLOCK_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BLOCK_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BLOCK_TIMESTAMP_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BLOCK_TIMESTAMP_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FEES_EARNED_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FEES_EARNED_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FEES_EARNED_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FEES_EARNED_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FILLED_AMOUNT_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FILLED_AMOUNT_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FILLED_AMOUNT_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FILLED_AMOUNT_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ID_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ID_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ORDER_ID_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ORDER_ID_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ORIGINAL_SELL_AMOUNT_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ORIGINAL_SELL_AMOUNT_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ORIGINAL_SELL_AMOUNT_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ORIGINAL_SELL_AMOUNT_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_SELL_AMOUNT_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_SELL_AMOUNT_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_SELL_AMOUNT_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_SELL_AMOUNT_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_TICK_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_TICK_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_TYPE_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_TYPE_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_ASSET_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_ASSET_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_BLOCK_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_BLOCK_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_BLOCK_TIMESTAMP_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_BLOCK_TIMESTAMP_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_FEES_EARNED_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_FEES_EARNED_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_FEES_EARNED_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_FEES_EARNED_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_FILLED_AMOUNT_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_FILLED_AMOUNT_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_FILLED_AMOUNT_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_FILLED_AMOUNT_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_ID_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_ID_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_ORDER_ID_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_ORDER_ID_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_ORIGINAL_SELL_AMOUNT_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_ORIGINAL_SELL_AMOUNT_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_ORIGINAL_SELL_AMOUNT_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_ORIGINAL_SELL_AMOUNT_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_SELL_AMOUNT_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_SELL_AMOUNT_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_SELL_AMOUNT_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_SELL_AMOUNT_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_TICK_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_TICK_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_TYPE_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_TYPE_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_ASSET_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_ASSET_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BLOCK_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BLOCK_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BLOCK_TIMESTAMP_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BLOCK_TIMESTAMP_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FEES_EARNED_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FEES_EARNED_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FEES_EARNED_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FEES_EARNED_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FILLED_AMOUNT_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FILLED_AMOUNT_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FILLED_AMOUNT_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FILLED_AMOUNT_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ID_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ID_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ORDER_ID_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ORDER_ID_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ORIGINAL_SELL_AMOUNT_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ORIGINAL_SELL_AMOUNT_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ORIGINAL_SELL_AMOUNT_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ORIGINAL_SELL_AMOUNT_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_SELL_AMOUNT_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_SELL_AMOUNT_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_SELL_AMOUNT_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_SELL_AMOUNT_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_TICK_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_TICK_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_TYPE_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_TYPE_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_ASSET_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_ASSET_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BLOCK_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BLOCK_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BLOCK_TIMESTAMP_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BLOCK_TIMESTAMP_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FEES_EARNED_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FEES_EARNED_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FEES_EARNED_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FEES_EARNED_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FILLED_AMOUNT_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FILLED_AMOUNT_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FILLED_AMOUNT_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FILLED_AMOUNT_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ORDER_ID_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ORDER_ID_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ORIGINAL_SELL_AMOUNT_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ORIGINAL_SELL_AMOUNT_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ORIGINAL_SELL_AMOUNT_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ORIGINAL_SELL_AMOUNT_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_SELL_AMOUNT_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_SELL_AMOUNT_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_SELL_AMOUNT_VALUE_USD_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_SELL_AMOUNT_VALUE_USD_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_TICK_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_TICK_DESC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_TYPE_ASC'
  | 'LIMIT_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_TYPE_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_AMOUNT_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_AMOUNT_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_AMOUNT_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_AMOUNT_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BOOST_POOL_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BOOST_POOL_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FEE_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FEE_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FEE_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FEE_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_COUNT_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_COUNT_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_AMOUNT_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_AMOUNT_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BOOST_POOL_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BOOST_POOL_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FEE_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FEE_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FEE_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FEE_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_MAX_AMOUNT_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_MAX_AMOUNT_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_MAX_AMOUNT_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_MAX_AMOUNT_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_MAX_BOOST_POOL_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_MAX_BOOST_POOL_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_MAX_FEE_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_MAX_FEE_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_MAX_FEE_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_MAX_FEE_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_MIN_AMOUNT_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_MIN_AMOUNT_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_MIN_AMOUNT_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_MIN_AMOUNT_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_MIN_BOOST_POOL_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_MIN_BOOST_POOL_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_MIN_FEE_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_MIN_FEE_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_MIN_FEE_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_MIN_FEE_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_AMOUNT_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_AMOUNT_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BOOST_POOL_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BOOST_POOL_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FEE_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FEE_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FEE_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FEE_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_AMOUNT_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_AMOUNT_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BOOST_POOL_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BOOST_POOL_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FEE_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FEE_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FEE_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FEE_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_SUM_AMOUNT_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_SUM_AMOUNT_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_SUM_AMOUNT_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_SUM_AMOUNT_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_SUM_BOOST_POOL_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_SUM_BOOST_POOL_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_SUM_FEE_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_SUM_FEE_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_SUM_FEE_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_SUM_FEE_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_AMOUNT_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_AMOUNT_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BOOST_POOL_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BOOST_POOL_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FEE_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FEE_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FEE_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FEE_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_AMOUNT_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_AMOUNT_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BOOST_POOL_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BOOST_POOL_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FEE_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FEE_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FEE_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FEE_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BLOCK_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BLOCK_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BOOST_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BOOST_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_DEPLOYED_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_DEPLOYED_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ID_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ID_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_PNL1H_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_PNL1H_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_STRATEGY_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_STRATEGY_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_TIMESTAMP_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_TIMESTAMP_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_TOTAL_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_TOTAL_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_UNDEPLOYED_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_UNDEPLOYED_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_COUNT_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_COUNT_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BLOCK_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BLOCK_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BOOST_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BOOST_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_DEPLOYED_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_DEPLOYED_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ID_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ID_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_PNL1H_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_PNL1H_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_STRATEGY_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_STRATEGY_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_TIMESTAMP_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_TIMESTAMP_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_TOTAL_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_TOTAL_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_UNDEPLOYED_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_UNDEPLOYED_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MAX_BLOCK_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MAX_BLOCK_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MAX_BOOST_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MAX_BOOST_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MAX_DEPLOYED_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MAX_DEPLOYED_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MAX_ID_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MAX_ID_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MAX_PNL1H_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MAX_PNL1H_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MAX_STRATEGY_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MAX_STRATEGY_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MAX_TIMESTAMP_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MAX_TIMESTAMP_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MAX_TOTAL_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MAX_TOTAL_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MAX_UNDEPLOYED_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MAX_UNDEPLOYED_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MIN_BLOCK_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MIN_BLOCK_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MIN_BOOST_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MIN_BOOST_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MIN_DEPLOYED_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MIN_DEPLOYED_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MIN_ID_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MIN_ID_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MIN_PNL1H_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MIN_PNL1H_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MIN_STRATEGY_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MIN_STRATEGY_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MIN_TIMESTAMP_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MIN_TIMESTAMP_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MIN_TOTAL_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MIN_TOTAL_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MIN_UNDEPLOYED_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_MIN_UNDEPLOYED_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BLOCK_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BLOCK_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BOOST_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BOOST_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_DEPLOYED_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_DEPLOYED_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ID_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ID_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_PNL1H_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_PNL1H_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_STRATEGY_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_STRATEGY_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_TIMESTAMP_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_TIMESTAMP_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_TOTAL_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_TOTAL_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_UNDEPLOYED_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_UNDEPLOYED_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BLOCK_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BLOCK_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BOOST_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BOOST_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_DEPLOYED_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_DEPLOYED_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ID_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ID_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_PNL1H_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_PNL1H_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_STRATEGY_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_STRATEGY_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_TIMESTAMP_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_TIMESTAMP_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_TOTAL_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_TOTAL_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_UNDEPLOYED_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_UNDEPLOYED_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_SUM_BLOCK_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_SUM_BLOCK_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_SUM_BOOST_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_SUM_BOOST_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_SUM_DEPLOYED_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_SUM_DEPLOYED_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_SUM_ID_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_SUM_ID_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_SUM_PNL1H_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_SUM_PNL1H_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_SUM_STRATEGY_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_SUM_STRATEGY_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_SUM_TIMESTAMP_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_SUM_TIMESTAMP_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_SUM_TOTAL_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_SUM_TOTAL_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_SUM_UNDEPLOYED_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_SUM_UNDEPLOYED_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BLOCK_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BLOCK_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BOOST_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BOOST_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_DEPLOYED_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_DEPLOYED_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ID_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ID_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_PNL1H_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_PNL1H_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_STRATEGY_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_STRATEGY_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_TIMESTAMP_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_TIMESTAMP_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_TOTAL_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_TOTAL_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_UNDEPLOYED_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_UNDEPLOYED_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BLOCK_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BLOCK_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BOOST_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BOOST_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_DEPLOYED_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_DEPLOYED_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_PNL1H_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_PNL1H_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_STRATEGY_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_STRATEGY_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_TIMESTAMP_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_TIMESTAMP_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_TOTAL_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_TOTAL_LIQUIDITY_USD_DESC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_UNDEPLOYED_LIQUIDITY_USD_ASC'
  | 'LIQUIDITY_SNAPSHOTS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_UNDEPLOYED_LIQUIDITY_USD_DESC'
  | 'NATURAL'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BOOST_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BOOST_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FINALIZED_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FINALIZED_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LOST_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LOST_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_STOPPED_BOOSTING_EVENT_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_STOPPED_BOOSTING_EVENT_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_COUNT_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_COUNT_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BOOST_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BOOST_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FINALIZED_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FINALIZED_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LOST_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LOST_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_STOPPED_BOOSTING_EVENT_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_STOPPED_BOOSTING_EVENT_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_BOOST_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_BOOST_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_FINALIZED_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_FINALIZED_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_LOST_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_LOST_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_STOPPED_BOOSTING_EVENT_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MAX_STOPPED_BOOSTING_EVENT_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_BOOST_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_BOOST_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_FINALIZED_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_FINALIZED_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_LOST_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_LOST_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_STOPPED_BOOSTING_EVENT_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_MIN_STOPPED_BOOSTING_EVENT_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BOOST_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BOOST_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FINALIZED_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FINALIZED_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LOST_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LOST_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_STOPPED_BOOSTING_EVENT_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_STOPPED_BOOSTING_EVENT_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BOOST_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BOOST_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FINALIZED_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FINALIZED_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LOST_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LOST_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_STOPPED_BOOSTING_EVENT_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_STOPPED_BOOSTING_EVENT_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_BOOST_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_BOOST_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_FINALIZED_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_FINALIZED_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_LOST_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_LOST_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_STOPPED_BOOSTING_EVENT_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_SUM_STOPPED_BOOSTING_EVENT_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BOOST_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BOOST_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FINALIZED_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FINALIZED_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LOST_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LOST_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_STOPPED_BOOSTING_EVENT_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_STOPPED_BOOSTING_EVENT_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BOOST_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BOOST_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FINALIZED_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FINALIZED_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LOST_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LOST_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_STOPPED_BOOSTING_EVENT_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_STOPPED_BOOSTING_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_OPEN_POOL_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_OPEN_POOL_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ORDER_CREATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ORDER_CREATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ORDER_LAST_UPDATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ORDER_LAST_UPDATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_PROCESSOR_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_PROCESSOR_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_STATUS_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_STATUS_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_COUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_COUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_OPEN_POOL_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_OPEN_POOL_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ORDER_CREATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ORDER_CREATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ORDER_LAST_UPDATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ORDER_LAST_UPDATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_PROCESSOR_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_PROCESSOR_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_STATUS_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_STATUS_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_OPEN_POOL_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_OPEN_POOL_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_ORDER_CREATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_ORDER_CREATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_ORDER_LAST_UPDATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_ORDER_LAST_UPDATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_PROCESSOR_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_PROCESSOR_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_STATUS_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_STATUS_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MAX_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_OPEN_POOL_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_OPEN_POOL_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_ORDER_CREATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_ORDER_CREATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_ORDER_LAST_UPDATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_ORDER_LAST_UPDATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_PROCESSOR_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_PROCESSOR_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_STATUS_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_STATUS_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_MIN_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_OPEN_POOL_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_OPEN_POOL_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ORDER_CREATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ORDER_CREATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ORDER_LAST_UPDATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ORDER_LAST_UPDATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_PROCESSOR_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_PROCESSOR_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_STATUS_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_STATUS_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_OPEN_POOL_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_OPEN_POOL_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ORDER_CREATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ORDER_CREATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ORDER_LAST_UPDATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ORDER_LAST_UPDATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_PROCESSOR_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_PROCESSOR_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_STATUS_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_STATUS_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_OPEN_POOL_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_OPEN_POOL_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_ORDER_CREATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_ORDER_CREATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_ORDER_LAST_UPDATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_ORDER_LAST_UPDATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_PROCESSOR_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_PROCESSOR_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_STATUS_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_STATUS_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_SUM_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_OPEN_POOL_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_OPEN_POOL_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ORDER_CREATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ORDER_CREATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ORDER_LAST_UPDATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ORDER_LAST_UPDATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_PROCESSOR_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_PROCESSOR_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_STATUS_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_STATUS_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_OPEN_POOL_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_OPEN_POOL_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ORDER_CREATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ORDER_CREATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ORDER_LAST_UPDATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ORDER_LAST_UPDATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_PROCESSOR_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_PROCESSOR_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_STATUS_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_STATUS_DESC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_UPPER_TICK_DESC'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_ASSET_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_ASSET_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_FEES_EARNED_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_FEES_EARNED_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_FEES_EARNED_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_FEES_EARNED_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_FILLED_AMOUNT_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_FILLED_AMOUNT_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_FILLED_AMOUNT_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BASE_FILLED_AMOUNT_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BLOCK_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BLOCK_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BLOCK_TIMESTAMP_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_BLOCK_TIMESTAMP_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ID_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ID_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ORDER_ID_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_ORDER_ID_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_QUOTE_FEES_EARNED_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_QUOTE_FEES_EARNED_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_QUOTE_FEES_EARNED_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_QUOTE_FEES_EARNED_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_QUOTE_FILLED_AMOUNT_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_QUOTE_FILLED_AMOUNT_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_QUOTE_FILLED_AMOUNT_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_QUOTE_FILLED_AMOUNT_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_RANGE_END_TICK_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_RANGE_END_TICK_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_RANGE_START_TICK_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_AVERAGE_RANGE_START_TICK_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_COUNT_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_COUNT_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_ASSET_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_ASSET_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_FEES_EARNED_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_FEES_EARNED_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_FEES_EARNED_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_FEES_EARNED_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_FILLED_AMOUNT_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_FILLED_AMOUNT_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_FILLED_AMOUNT_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BASE_FILLED_AMOUNT_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BLOCK_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BLOCK_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BLOCK_TIMESTAMP_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_BLOCK_TIMESTAMP_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ID_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ID_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ORDER_ID_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_ORDER_ID_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_QUOTE_FEES_EARNED_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_QUOTE_FEES_EARNED_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_QUOTE_FEES_EARNED_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_QUOTE_FEES_EARNED_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_QUOTE_FILLED_AMOUNT_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_QUOTE_FILLED_AMOUNT_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_QUOTE_FILLED_AMOUNT_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_QUOTE_FILLED_AMOUNT_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_RANGE_END_TICK_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_RANGE_END_TICK_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_RANGE_START_TICK_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_DISTINCT_COUNT_RANGE_START_TICK_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_ASSET_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_ASSET_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_FEES_EARNED_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_FEES_EARNED_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_FEES_EARNED_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_FEES_EARNED_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_FILLED_AMOUNT_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_FILLED_AMOUNT_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_FILLED_AMOUNT_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_BASE_FILLED_AMOUNT_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_BLOCK_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_BLOCK_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_BLOCK_TIMESTAMP_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_BLOCK_TIMESTAMP_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_ID_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_ID_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_ORDER_ID_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_ORDER_ID_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_QUOTE_FEES_EARNED_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_QUOTE_FEES_EARNED_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_QUOTE_FEES_EARNED_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_QUOTE_FEES_EARNED_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_QUOTE_FILLED_AMOUNT_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_QUOTE_FILLED_AMOUNT_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_QUOTE_FILLED_AMOUNT_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_QUOTE_FILLED_AMOUNT_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_RANGE_END_TICK_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_RANGE_END_TICK_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_RANGE_START_TICK_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MAX_RANGE_START_TICK_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_ASSET_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_ASSET_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_FEES_EARNED_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_FEES_EARNED_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_FEES_EARNED_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_FEES_EARNED_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_FILLED_AMOUNT_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_FILLED_AMOUNT_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_FILLED_AMOUNT_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_BASE_FILLED_AMOUNT_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_BLOCK_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_BLOCK_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_BLOCK_TIMESTAMP_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_BLOCK_TIMESTAMP_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_ID_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_ID_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_ORDER_ID_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_ORDER_ID_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_QUOTE_FEES_EARNED_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_QUOTE_FEES_EARNED_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_QUOTE_FEES_EARNED_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_QUOTE_FEES_EARNED_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_QUOTE_FILLED_AMOUNT_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_QUOTE_FILLED_AMOUNT_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_QUOTE_FILLED_AMOUNT_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_QUOTE_FILLED_AMOUNT_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_RANGE_END_TICK_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_RANGE_END_TICK_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_RANGE_START_TICK_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_MIN_RANGE_START_TICK_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_ASSET_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_ASSET_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_FEES_EARNED_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_FEES_EARNED_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_FEES_EARNED_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_FEES_EARNED_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_FILLED_AMOUNT_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_FILLED_AMOUNT_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_FILLED_AMOUNT_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BASE_FILLED_AMOUNT_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BLOCK_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BLOCK_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BLOCK_TIMESTAMP_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_BLOCK_TIMESTAMP_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ID_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ID_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ORDER_ID_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_ORDER_ID_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_QUOTE_FEES_EARNED_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_QUOTE_FEES_EARNED_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_QUOTE_FEES_EARNED_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_QUOTE_FEES_EARNED_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_QUOTE_FILLED_AMOUNT_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_QUOTE_FILLED_AMOUNT_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_QUOTE_FILLED_AMOUNT_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_QUOTE_FILLED_AMOUNT_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_RANGE_END_TICK_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_RANGE_END_TICK_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_RANGE_START_TICK_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_POPULATION_RANGE_START_TICK_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_ASSET_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_ASSET_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_FEES_EARNED_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_FEES_EARNED_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_FEES_EARNED_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_FEES_EARNED_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_FILLED_AMOUNT_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_FILLED_AMOUNT_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_FILLED_AMOUNT_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BASE_FILLED_AMOUNT_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BLOCK_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BLOCK_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BLOCK_TIMESTAMP_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_BLOCK_TIMESTAMP_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ID_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ID_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ORDER_ID_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_ORDER_ID_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_QUOTE_FEES_EARNED_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_QUOTE_FEES_EARNED_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_QUOTE_FEES_EARNED_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_QUOTE_FEES_EARNED_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_QUOTE_FILLED_AMOUNT_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_QUOTE_FILLED_AMOUNT_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_QUOTE_FILLED_AMOUNT_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_QUOTE_FILLED_AMOUNT_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_RANGE_END_TICK_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_RANGE_END_TICK_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_RANGE_START_TICK_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_STDDEV_SAMPLE_RANGE_START_TICK_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_ASSET_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_ASSET_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_FEES_EARNED_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_FEES_EARNED_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_FEES_EARNED_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_FEES_EARNED_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_FILLED_AMOUNT_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_FILLED_AMOUNT_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_FILLED_AMOUNT_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_BASE_FILLED_AMOUNT_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_BLOCK_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_BLOCK_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_BLOCK_TIMESTAMP_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_BLOCK_TIMESTAMP_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_ID_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_ID_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_ORDER_ID_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_ORDER_ID_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_QUOTE_FEES_EARNED_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_QUOTE_FEES_EARNED_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_QUOTE_FEES_EARNED_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_QUOTE_FEES_EARNED_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_QUOTE_FILLED_AMOUNT_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_QUOTE_FILLED_AMOUNT_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_QUOTE_FILLED_AMOUNT_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_QUOTE_FILLED_AMOUNT_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_RANGE_END_TICK_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_RANGE_END_TICK_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_RANGE_START_TICK_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_SUM_RANGE_START_TICK_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_ASSET_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_ASSET_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_FEES_EARNED_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_FEES_EARNED_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_FEES_EARNED_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_FEES_EARNED_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_FILLED_AMOUNT_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_FILLED_AMOUNT_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_FILLED_AMOUNT_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BASE_FILLED_AMOUNT_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BLOCK_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BLOCK_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BLOCK_TIMESTAMP_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_BLOCK_TIMESTAMP_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ID_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ID_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ORDER_ID_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_ORDER_ID_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_QUOTE_FEES_EARNED_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_QUOTE_FEES_EARNED_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_QUOTE_FEES_EARNED_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_QUOTE_FEES_EARNED_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_QUOTE_FILLED_AMOUNT_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_QUOTE_FILLED_AMOUNT_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_QUOTE_FILLED_AMOUNT_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_QUOTE_FILLED_AMOUNT_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_RANGE_END_TICK_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_RANGE_END_TICK_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_RANGE_START_TICK_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_POPULATION_RANGE_START_TICK_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_ASSET_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_ASSET_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_FEES_EARNED_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_FEES_EARNED_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_FEES_EARNED_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_FEES_EARNED_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_FILLED_AMOUNT_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_FILLED_AMOUNT_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_FILLED_AMOUNT_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BASE_FILLED_AMOUNT_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BLOCK_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BLOCK_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BLOCK_TIMESTAMP_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_BLOCK_TIMESTAMP_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ORDER_ID_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_ORDER_ID_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_QUOTE_FEES_EARNED_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_QUOTE_FEES_EARNED_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_QUOTE_FEES_EARNED_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_QUOTE_FEES_EARNED_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_QUOTE_FILLED_AMOUNT_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_QUOTE_FILLED_AMOUNT_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_QUOTE_FILLED_AMOUNT_VALUE_USD_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_QUOTE_FILLED_AMOUNT_VALUE_USD_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_RANGE_END_TICK_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_RANGE_END_TICK_DESC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_RANGE_START_TICK_ASC'
  | 'RANGE_ORDER_FILLS_BY_LIQUIDITY_PROVIDER_ID_VARIANCE_SAMPLE_RANGE_START_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_AVERAGE_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_AVERAGE_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_AVERAGE_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_AVERAGE_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_AVERAGE_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_AVERAGE_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_AVERAGE_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_AVERAGE_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_AVERAGE_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_AVERAGE_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_AVERAGE_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_AVERAGE_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_AVERAGE_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_AVERAGE_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_AVERAGE_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_AVERAGE_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_AVERAGE_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_AVERAGE_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_COUNT_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_COUNT_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_DISTINCT_COUNT_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_DISTINCT_COUNT_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_DISTINCT_COUNT_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_DISTINCT_COUNT_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_DISTINCT_COUNT_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_DISTINCT_COUNT_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_DISTINCT_COUNT_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_DISTINCT_COUNT_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_DISTINCT_COUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_DISTINCT_COUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_DISTINCT_COUNT_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_DISTINCT_COUNT_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_DISTINCT_COUNT_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_DISTINCT_COUNT_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_DISTINCT_COUNT_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_DISTINCT_COUNT_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_DISTINCT_COUNT_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_DISTINCT_COUNT_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MAX_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MAX_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MAX_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MAX_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MAX_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MAX_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MAX_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MAX_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MAX_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MAX_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MAX_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MAX_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MAX_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MAX_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MAX_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MAX_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MAX_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MAX_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MIN_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MIN_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MIN_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MIN_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MIN_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MIN_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MIN_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MIN_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MIN_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MIN_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MIN_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MIN_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MIN_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MIN_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MIN_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MIN_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MIN_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_MIN_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_POPULATION_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_POPULATION_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_POPULATION_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_POPULATION_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_POPULATION_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_POPULATION_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_POPULATION_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_POPULATION_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_POPULATION_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_POPULATION_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_POPULATION_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_POPULATION_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_POPULATION_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_POPULATION_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_POPULATION_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_POPULATION_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_POPULATION_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_POPULATION_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_SAMPLE_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_SAMPLE_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_SAMPLE_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_SAMPLE_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_SAMPLE_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_SAMPLE_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_SAMPLE_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_SAMPLE_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_SAMPLE_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_SAMPLE_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_SAMPLE_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_SAMPLE_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_SAMPLE_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_SAMPLE_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_SAMPLE_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_STDDEV_SAMPLE_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_SUM_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_SUM_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_SUM_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_SUM_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_SUM_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_SUM_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_SUM_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_SUM_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_SUM_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_SUM_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_SUM_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_SUM_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_SUM_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_SUM_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_SUM_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_SUM_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_SUM_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_SUM_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_POPULATION_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_POPULATION_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_POPULATION_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_POPULATION_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_POPULATION_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_POPULATION_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_POPULATION_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_POPULATION_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_POPULATION_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_POPULATION_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_POPULATION_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_POPULATION_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_POPULATION_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_POPULATION_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_POPULATION_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_POPULATION_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_SAMPLE_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_SAMPLE_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_SAMPLE_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_SAMPLE_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_SAMPLE_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_SAMPLE_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_SAMPLE_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_SAMPLE_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_SAMPLE_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_SAMPLE_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_SAMPLE_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_SAMPLE_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_SAMPLE_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_SAMPLE_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_SAMPLE_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_OWNER_ACCOUNT_ID_VARIANCE_SAMPLE_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_AVERAGE_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_AVERAGE_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_AVERAGE_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_AVERAGE_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_AVERAGE_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_AVERAGE_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_AVERAGE_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_AVERAGE_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_AVERAGE_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_AVERAGE_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_AVERAGE_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_AVERAGE_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_AVERAGE_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_AVERAGE_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_AVERAGE_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_AVERAGE_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_AVERAGE_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_AVERAGE_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_COUNT_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_COUNT_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_DISTINCT_COUNT_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_DISTINCT_COUNT_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_DISTINCT_COUNT_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_DISTINCT_COUNT_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_DISTINCT_COUNT_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_DISTINCT_COUNT_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_DISTINCT_COUNT_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_DISTINCT_COUNT_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_DISTINCT_COUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_DISTINCT_COUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_DISTINCT_COUNT_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_DISTINCT_COUNT_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_DISTINCT_COUNT_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_DISTINCT_COUNT_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_DISTINCT_COUNT_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_DISTINCT_COUNT_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_DISTINCT_COUNT_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_DISTINCT_COUNT_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MAX_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MAX_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MAX_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MAX_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MAX_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MAX_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MAX_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MAX_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MAX_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MAX_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MAX_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MAX_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MAX_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MAX_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MAX_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MAX_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MAX_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MAX_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MIN_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MIN_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MIN_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MIN_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MIN_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MIN_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MIN_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MIN_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MIN_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MIN_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MIN_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MIN_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MIN_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MIN_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MIN_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MIN_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MIN_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_MIN_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_POPULATION_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_POPULATION_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_POPULATION_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_POPULATION_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_POPULATION_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_POPULATION_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_POPULATION_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_POPULATION_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_POPULATION_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_POPULATION_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_POPULATION_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_POPULATION_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_POPULATION_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_POPULATION_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_POPULATION_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_POPULATION_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_POPULATION_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_POPULATION_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_SAMPLE_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_SAMPLE_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_SAMPLE_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_SAMPLE_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_SAMPLE_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_SAMPLE_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_SAMPLE_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_SAMPLE_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_SAMPLE_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_SAMPLE_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_SAMPLE_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_SAMPLE_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_SAMPLE_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_SAMPLE_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_SAMPLE_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_STDDEV_SAMPLE_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_SUM_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_SUM_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_SUM_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_SUM_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_SUM_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_SUM_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_SUM_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_SUM_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_SUM_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_SUM_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_SUM_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_SUM_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_SUM_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_SUM_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_SUM_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_SUM_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_SUM_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_SUM_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_POPULATION_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_POPULATION_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_POPULATION_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_POPULATION_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_POPULATION_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_POPULATION_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_POPULATION_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_POPULATION_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_POPULATION_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_POPULATION_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_POPULATION_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_POPULATION_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_POPULATION_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_POPULATION_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_POPULATION_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_POPULATION_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_SAMPLE_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_SAMPLE_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_SAMPLE_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_SAMPLE_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_SAMPLE_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_SAMPLE_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_SAMPLE_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_SAMPLE_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_SAMPLE_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_SAMPLE_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_SAMPLE_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_SAMPLE_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_SAMPLE_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_SAMPLE_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_SAMPLE_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_STRATEGY_ACCOUNT_ID_VARIANCE_SAMPLE_STRATEGY_ACCOUNT_ID_DESC'
  | 'TYPE_ASC'
  | 'TYPE_DESC';

/** A filter to be used against BigFloat fields. All fields are combined with a logical ‘and.’ */
export type BigFloatFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<Scalars['BigFloat']['input']>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<Scalars['BigFloat']['input']>>;
};

/** A filter to be used against BigInt fields. All fields are combined with a logical ‘and.’ */
export type BigIntFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<Scalars['BigInt']['input']>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<Scalars['BigInt']['input']>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<Scalars['BigInt']['input']>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<Scalars['BigInt']['input']>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<Scalars['BigInt']['input']>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<Scalars['BigInt']['input']>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<Scalars['BigInt']['input']>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<Scalars['BigInt']['input']>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<Scalars['BigInt']['input']>>;
};

/** A filter to be used against Boolean fields. All fields are combined with a logical ‘and.’ */
export type BooleanFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<Scalars['Boolean']['input']>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<Scalars['Boolean']['input']>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<Scalars['Boolean']['input']>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<Scalars['Boolean']['input']>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<Scalars['Boolean']['input']>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<Scalars['Boolean']['input']>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<Scalars['Boolean']['input']>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<Scalars['Boolean']['input']>>;
};

export type Boost = Node & {
  __typename?: 'Boost';
  asset: ChainflipAsset;
  /** Reads and enables pagination through a set of `BoostLiquidityBalanceChange`. */
  boostLiquidityBalanceChangesByBoostId: BoostLiquidityBalanceChangesConnection;
  /** Reads and enables pagination through a set of `BoostPoolBoostShare`. */
  boostPoolBoostSharesByBoostId: BoostPoolBoostSharesConnection;
  /** Reads and enables pagination through a set of `BoostShare`. */
  boostSharesByBoostId: BoostSharesConnection;
  chain: ChainflipChain;
  depositAmount: Scalars['BigFloat']['output'];
  depositAmountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Reads a single `DepositChannel` that is related to this `Boost`. */
  depositChannelByDepositChannelId: DepositChannel;
  depositChannelId: Scalars['Int']['output'];
  /** Reads a single `Event` that is related to this `Boost`. */
  eventByExecutedAtEventId: Event;
  /** Reads a single `Event` that is related to this `Boost`. */
  eventByLostAtEventId?: Maybe<Event>;
  /** Reads a single `Event` that is related to this `Boost`. */
  eventBySettledAtEventId?: Maybe<Event>;
  executedAtEventId: Scalars['BigInt']['output'];
  executedAtTimestamp: Scalars['Datetime']['output'];
  fee: Scalars['BigFloat']['output'];
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  id: Scalars['Int']['output'];
  liquidityProviderFeePortion: Scalars['BigFloat']['output'];
  liquidityProviderFeePortionUsd?: Maybe<Scalars['BigFloat']['output']>;
  lostAtEventId?: Maybe<Scalars['BigInt']['output']>;
  lostAtTimestamp?: Maybe<Scalars['Datetime']['output']>;
  networkFeePortion: Scalars['BigFloat']['output'];
  networkFeePortionUsd?: Maybe<Scalars['BigFloat']['output']>;
  networkFeeSwapRequestId?: Maybe<Scalars['BigInt']['output']>;
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  /** Reads and enables pagination through a set of `PendingBoostLiquidityWithdrawal`. */
  pendingBoostLiquidityWithdrawalsByBoostId: PendingBoostLiquidityWithdrawalsConnection;
  prewitnessedDepositId: Scalars['BigInt']['output'];
  settledAtEventId?: Maybe<Scalars['BigInt']['output']>;
  settledAtTimestamp?: Maybe<Scalars['Datetime']['output']>;
  swapId?: Maybe<Scalars['BigInt']['output']>;
  swapRequestId?: Maybe<Scalars['BigInt']['output']>;
};


export type BoostBoostLiquidityBalanceChangesByBoostIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BoostLiquidityBalanceChangeCondition>;
  filter?: InputMaybe<BoostLiquidityBalanceChangeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BoostLiquidityBalanceChangesOrderBy>>;
};


export type BoostBoostPoolBoostSharesByBoostIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BoostPoolBoostShareCondition>;
  filter?: InputMaybe<BoostPoolBoostShareFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BoostPoolBoostSharesOrderBy>>;
};


export type BoostBoostSharesByBoostIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BoostShareCondition>;
  filter?: InputMaybe<BoostShareFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BoostSharesOrderBy>>;
};


export type BoostPendingBoostLiquidityWithdrawalsByBoostIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<PendingBoostLiquidityWithdrawalCondition>;
  filter?: InputMaybe<PendingBoostLiquidityWithdrawalFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PendingBoostLiquidityWithdrawalsOrderBy>>;
};

export type BoostAggregates = {
  __typename?: 'BoostAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<BoostAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<BoostDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<BoostMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<BoostMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<BoostStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<BoostStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<BoostSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<BoostVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<BoostVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `Boost` object types. */
export type BoostAggregatesFilter = {
  /** Mean average aggregate over matching `Boost` objects. */
  average?: InputMaybe<BoostAverageAggregateFilter>;
  /** Distinct count aggregate over matching `Boost` objects. */
  distinctCount?: InputMaybe<BoostDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `Boost` object to be included within the aggregate. */
  filter?: InputMaybe<BoostFilter>;
  /** Maximum aggregate over matching `Boost` objects. */
  max?: InputMaybe<BoostMaxAggregateFilter>;
  /** Minimum aggregate over matching `Boost` objects. */
  min?: InputMaybe<BoostMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `Boost` objects. */
  stddevPopulation?: InputMaybe<BoostStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `Boost` objects. */
  stddevSample?: InputMaybe<BoostStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `Boost` objects. */
  sum?: InputMaybe<BoostSumAggregateFilter>;
  /** Population variance aggregate over matching `Boost` objects. */
  variancePopulation?: InputMaybe<BoostVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `Boost` objects. */
  varianceSample?: InputMaybe<BoostVarianceSampleAggregateFilter>;
};

export type BoostAverageAggregateFilter = {
  depositAmount?: InputMaybe<BigFloatFilter>;
  depositAmountUsd?: InputMaybe<BigFloatFilter>;
  depositChannelId?: InputMaybe<BigFloatFilter>;
  executedAtEventId?: InputMaybe<BigFloatFilter>;
  fee?: InputMaybe<BigFloatFilter>;
  feeUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderFeePortion?: InputMaybe<BigFloatFilter>;
  liquidityProviderFeePortionUsd?: InputMaybe<BigFloatFilter>;
  lostAtEventId?: InputMaybe<BigFloatFilter>;
  networkFeePortion?: InputMaybe<BigFloatFilter>;
  networkFeePortionUsd?: InputMaybe<BigFloatFilter>;
  networkFeeSwapRequestId?: InputMaybe<BigFloatFilter>;
  prewitnessedDepositId?: InputMaybe<BigFloatFilter>;
  settledAtEventId?: InputMaybe<BigFloatFilter>;
  swapId?: InputMaybe<BigFloatFilter>;
  swapRequestId?: InputMaybe<BigFloatFilter>;
};

export type BoostAverageAggregates = {
  __typename?: 'BoostAverageAggregates';
  /** Mean average of depositAmount across the matching connection */
  depositAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of depositAmountUsd across the matching connection */
  depositAmountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of depositChannelId across the matching connection */
  depositChannelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of executedAtEventId across the matching connection */
  executedAtEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of liquidityProviderFeePortion across the matching connection */
  liquidityProviderFeePortion?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of liquidityProviderFeePortionUsd across the matching connection */
  liquidityProviderFeePortionUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of lostAtEventId across the matching connection */
  lostAtEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of networkFeePortion across the matching connection */
  networkFeePortion?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of networkFeePortionUsd across the matching connection */
  networkFeePortionUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of networkFeeSwapRequestId across the matching connection */
  networkFeeSwapRequestId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of prewitnessedDepositId across the matching connection */
  prewitnessedDepositId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of settledAtEventId across the matching connection */
  settledAtEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of swapId across the matching connection */
  swapId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of swapRequestId across the matching connection */
  swapRequestId?: Maybe<Scalars['BigFloat']['output']>;
};

/** A condition to be used against `Boost` object types. All fields are tested for equality and combined with a logical ‘and.’ */
export type BoostCondition = {
  /** Checks for equality with the object’s `asset` field. */
  asset?: InputMaybe<ChainflipAsset>;
  /** Checks for equality with the object’s `chain` field. */
  chain?: InputMaybe<ChainflipChain>;
  /** Checks for equality with the object’s `depositAmount` field. */
  depositAmount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `depositAmountUsd` field. */
  depositAmountUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `depositChannelId` field. */
  depositChannelId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `executedAtEventId` field. */
  executedAtEventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `executedAtTimestamp` field. */
  executedAtTimestamp?: InputMaybe<Scalars['Datetime']['input']>;
  /** Checks for equality with the object’s `fee` field. */
  fee?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `feeUsd` field. */
  feeUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `liquidityProviderFeePortion` field. */
  liquidityProviderFeePortion?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `liquidityProviderFeePortionUsd` field. */
  liquidityProviderFeePortionUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `lostAtEventId` field. */
  lostAtEventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `lostAtTimestamp` field. */
  lostAtTimestamp?: InputMaybe<Scalars['Datetime']['input']>;
  /** Checks for equality with the object’s `networkFeePortion` field. */
  networkFeePortion?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `networkFeePortionUsd` field. */
  networkFeePortionUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `networkFeeSwapRequestId` field. */
  networkFeeSwapRequestId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `prewitnessedDepositId` field. */
  prewitnessedDepositId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `settledAtEventId` field. */
  settledAtEventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `settledAtTimestamp` field. */
  settledAtTimestamp?: InputMaybe<Scalars['Datetime']['input']>;
  /** Checks for equality with the object’s `swapId` field. */
  swapId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `swapRequestId` field. */
  swapRequestId?: InputMaybe<Scalars['BigInt']['input']>;
};

export type BoostDistinctCountAggregateFilter = {
  asset?: InputMaybe<BigIntFilter>;
  chain?: InputMaybe<BigIntFilter>;
  depositAmount?: InputMaybe<BigIntFilter>;
  depositAmountUsd?: InputMaybe<BigIntFilter>;
  depositChannelId?: InputMaybe<BigIntFilter>;
  executedAtEventId?: InputMaybe<BigIntFilter>;
  executedAtTimestamp?: InputMaybe<BigIntFilter>;
  fee?: InputMaybe<BigIntFilter>;
  feeUsd?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  liquidityProviderFeePortion?: InputMaybe<BigIntFilter>;
  liquidityProviderFeePortionUsd?: InputMaybe<BigIntFilter>;
  lostAtEventId?: InputMaybe<BigIntFilter>;
  lostAtTimestamp?: InputMaybe<BigIntFilter>;
  networkFeePortion?: InputMaybe<BigIntFilter>;
  networkFeePortionUsd?: InputMaybe<BigIntFilter>;
  networkFeeSwapRequestId?: InputMaybe<BigIntFilter>;
  prewitnessedDepositId?: InputMaybe<BigIntFilter>;
  settledAtEventId?: InputMaybe<BigIntFilter>;
  settledAtTimestamp?: InputMaybe<BigIntFilter>;
  swapId?: InputMaybe<BigIntFilter>;
  swapRequestId?: InputMaybe<BigIntFilter>;
};

export type BoostDistinctCountAggregates = {
  __typename?: 'BoostDistinctCountAggregates';
  /** Distinct count of asset across the matching connection */
  asset?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of chain across the matching connection */
  chain?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of depositAmount across the matching connection */
  depositAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of depositAmountUsd across the matching connection */
  depositAmountUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of depositChannelId across the matching connection */
  depositChannelId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of executedAtEventId across the matching connection */
  executedAtEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of executedAtTimestamp across the matching connection */
  executedAtTimestamp?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of fee across the matching connection */
  fee?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of liquidityProviderFeePortion across the matching connection */
  liquidityProviderFeePortion?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of liquidityProviderFeePortionUsd across the matching connection */
  liquidityProviderFeePortionUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of lostAtEventId across the matching connection */
  lostAtEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of lostAtTimestamp across the matching connection */
  lostAtTimestamp?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of networkFeePortion across the matching connection */
  networkFeePortion?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of networkFeePortionUsd across the matching connection */
  networkFeePortionUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of networkFeeSwapRequestId across the matching connection */
  networkFeeSwapRequestId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of prewitnessedDepositId across the matching connection */
  prewitnessedDepositId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of settledAtEventId across the matching connection */
  settledAtEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of settledAtTimestamp across the matching connection */
  settledAtTimestamp?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of swapId across the matching connection */
  swapId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of swapRequestId across the matching connection */
  swapRequestId?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `Boost` object types. All fields are combined with a logical ‘and.’ */
export type BoostFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<BoostFilter>>;
  /** Filter by the object’s `asset` field. */
  asset?: InputMaybe<ChainflipAssetFilter>;
  /** Filter by the object’s `boostLiquidityBalanceChangesByBoostId` relation. */
  boostLiquidityBalanceChangesByBoostId?: InputMaybe<BoostToManyBoostLiquidityBalanceChangeFilter>;
  /** Some related `boostLiquidityBalanceChangesByBoostId` exist. */
  boostLiquidityBalanceChangesByBoostIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `boostPoolBoostSharesByBoostId` relation. */
  boostPoolBoostSharesByBoostId?: InputMaybe<BoostToManyBoostPoolBoostShareFilter>;
  /** Some related `boostPoolBoostSharesByBoostId` exist. */
  boostPoolBoostSharesByBoostIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `boostSharesByBoostId` relation. */
  boostSharesByBoostId?: InputMaybe<BoostToManyBoostShareFilter>;
  /** Some related `boostSharesByBoostId` exist. */
  boostSharesByBoostIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `chain` field. */
  chain?: InputMaybe<ChainflipChainFilter>;
  /** Filter by the object’s `depositAmount` field. */
  depositAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `depositAmountUsd` field. */
  depositAmountUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `depositChannelByDepositChannelId` relation. */
  depositChannelByDepositChannelId?: InputMaybe<DepositChannelFilter>;
  /** Filter by the object’s `depositChannelId` field. */
  depositChannelId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `eventByExecutedAtEventId` relation. */
  eventByExecutedAtEventId?: InputMaybe<EventFilter>;
  /** Filter by the object’s `eventByLostAtEventId` relation. */
  eventByLostAtEventId?: InputMaybe<EventFilter>;
  /** A related `eventByLostAtEventId` exists. */
  eventByLostAtEventIdExists?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `eventBySettledAtEventId` relation. */
  eventBySettledAtEventId?: InputMaybe<EventFilter>;
  /** A related `eventBySettledAtEventId` exists. */
  eventBySettledAtEventIdExists?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `executedAtEventId` field. */
  executedAtEventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `executedAtTimestamp` field. */
  executedAtTimestamp?: InputMaybe<DatetimeFilter>;
  /** Filter by the object’s `fee` field. */
  fee?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `feeUsd` field. */
  feeUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Filter by the object’s `liquidityProviderFeePortion` field. */
  liquidityProviderFeePortion?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `liquidityProviderFeePortionUsd` field. */
  liquidityProviderFeePortionUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `lostAtEventId` field. */
  lostAtEventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `lostAtTimestamp` field. */
  lostAtTimestamp?: InputMaybe<DatetimeFilter>;
  /** Filter by the object’s `networkFeePortion` field. */
  networkFeePortion?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `networkFeePortionUsd` field. */
  networkFeePortionUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `networkFeeSwapRequestId` field. */
  networkFeeSwapRequestId?: InputMaybe<BigIntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<BoostFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<BoostFilter>>;
  /** Filter by the object’s `pendingBoostLiquidityWithdrawalsByBoostId` relation. */
  pendingBoostLiquidityWithdrawalsByBoostId?: InputMaybe<BoostToManyPendingBoostLiquidityWithdrawalFilter>;
  /** Some related `pendingBoostLiquidityWithdrawalsByBoostId` exist. */
  pendingBoostLiquidityWithdrawalsByBoostIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `prewitnessedDepositId` field. */
  prewitnessedDepositId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `settledAtEventId` field. */
  settledAtEventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `settledAtTimestamp` field. */
  settledAtTimestamp?: InputMaybe<DatetimeFilter>;
  /** Filter by the object’s `swapId` field. */
  swapId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `swapRequestId` field. */
  swapRequestId?: InputMaybe<BigIntFilter>;
};

/** Grouping methods for `Boost` for usage during aggregation. */
export type BoostGroupBy =
  | 'ASSET'
  | 'CHAIN'
  | 'DEPOSIT_AMOUNT'
  | 'DEPOSIT_AMOUNT_USD'
  | 'DEPOSIT_CHANNEL_ID'
  | 'EXECUTED_AT_EVENT_ID'
  | 'EXECUTED_AT_TIMESTAMP'
  | 'EXECUTED_AT_TIMESTAMP_TRUNCATED_TO_DAY'
  | 'EXECUTED_AT_TIMESTAMP_TRUNCATED_TO_HOUR'
  | 'FEE'
  | 'FEE_USD'
  | 'LIQUIDITY_PROVIDER_FEE_PORTION'
  | 'LIQUIDITY_PROVIDER_FEE_PORTION_USD'
  | 'LOST_AT_EVENT_ID'
  | 'LOST_AT_TIMESTAMP'
  | 'LOST_AT_TIMESTAMP_TRUNCATED_TO_DAY'
  | 'LOST_AT_TIMESTAMP_TRUNCATED_TO_HOUR'
  | 'NETWORK_FEE_PORTION'
  | 'NETWORK_FEE_PORTION_USD'
  | 'NETWORK_FEE_SWAP_REQUEST_ID'
  | 'PREWITNESSED_DEPOSIT_ID'
  | 'SETTLED_AT_EVENT_ID'
  | 'SETTLED_AT_TIMESTAMP'
  | 'SETTLED_AT_TIMESTAMP_TRUNCATED_TO_DAY'
  | 'SETTLED_AT_TIMESTAMP_TRUNCATED_TO_HOUR'
  | 'SWAP_ID'
  | 'SWAP_REQUEST_ID';

export type BoostHavingAverageInput = {
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositAmountUsd?: InputMaybe<HavingBigfloatFilter>;
  depositChannelId?: InputMaybe<HavingIntFilter>;
  executedAtEventId?: InputMaybe<HavingBigintFilter>;
  executedAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderFeePortion?: InputMaybe<HavingBigfloatFilter>;
  liquidityProviderFeePortionUsd?: InputMaybe<HavingBigfloatFilter>;
  lostAtEventId?: InputMaybe<HavingBigintFilter>;
  lostAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  networkFeePortion?: InputMaybe<HavingBigfloatFilter>;
  networkFeePortionUsd?: InputMaybe<HavingBigfloatFilter>;
  networkFeeSwapRequestId?: InputMaybe<HavingBigintFilter>;
  prewitnessedDepositId?: InputMaybe<HavingBigintFilter>;
  settledAtEventId?: InputMaybe<HavingBigintFilter>;
  settledAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  swapId?: InputMaybe<HavingBigintFilter>;
  swapRequestId?: InputMaybe<HavingBigintFilter>;
};

export type BoostHavingDistinctCountInput = {
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositAmountUsd?: InputMaybe<HavingBigfloatFilter>;
  depositChannelId?: InputMaybe<HavingIntFilter>;
  executedAtEventId?: InputMaybe<HavingBigintFilter>;
  executedAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderFeePortion?: InputMaybe<HavingBigfloatFilter>;
  liquidityProviderFeePortionUsd?: InputMaybe<HavingBigfloatFilter>;
  lostAtEventId?: InputMaybe<HavingBigintFilter>;
  lostAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  networkFeePortion?: InputMaybe<HavingBigfloatFilter>;
  networkFeePortionUsd?: InputMaybe<HavingBigfloatFilter>;
  networkFeeSwapRequestId?: InputMaybe<HavingBigintFilter>;
  prewitnessedDepositId?: InputMaybe<HavingBigintFilter>;
  settledAtEventId?: InputMaybe<HavingBigintFilter>;
  settledAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  swapId?: InputMaybe<HavingBigintFilter>;
  swapRequestId?: InputMaybe<HavingBigintFilter>;
};

/** Conditions for `Boost` aggregates. */
export type BoostHavingInput = {
  AND?: InputMaybe<Array<BoostHavingInput>>;
  OR?: InputMaybe<Array<BoostHavingInput>>;
  average?: InputMaybe<BoostHavingAverageInput>;
  distinctCount?: InputMaybe<BoostHavingDistinctCountInput>;
  max?: InputMaybe<BoostHavingMaxInput>;
  min?: InputMaybe<BoostHavingMinInput>;
  stddevPopulation?: InputMaybe<BoostHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<BoostHavingStddevSampleInput>;
  sum?: InputMaybe<BoostHavingSumInput>;
  variancePopulation?: InputMaybe<BoostHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<BoostHavingVarianceSampleInput>;
};

export type BoostHavingMaxInput = {
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositAmountUsd?: InputMaybe<HavingBigfloatFilter>;
  depositChannelId?: InputMaybe<HavingIntFilter>;
  executedAtEventId?: InputMaybe<HavingBigintFilter>;
  executedAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderFeePortion?: InputMaybe<HavingBigfloatFilter>;
  liquidityProviderFeePortionUsd?: InputMaybe<HavingBigfloatFilter>;
  lostAtEventId?: InputMaybe<HavingBigintFilter>;
  lostAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  networkFeePortion?: InputMaybe<HavingBigfloatFilter>;
  networkFeePortionUsd?: InputMaybe<HavingBigfloatFilter>;
  networkFeeSwapRequestId?: InputMaybe<HavingBigintFilter>;
  prewitnessedDepositId?: InputMaybe<HavingBigintFilter>;
  settledAtEventId?: InputMaybe<HavingBigintFilter>;
  settledAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  swapId?: InputMaybe<HavingBigintFilter>;
  swapRequestId?: InputMaybe<HavingBigintFilter>;
};

export type BoostHavingMinInput = {
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositAmountUsd?: InputMaybe<HavingBigfloatFilter>;
  depositChannelId?: InputMaybe<HavingIntFilter>;
  executedAtEventId?: InputMaybe<HavingBigintFilter>;
  executedAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderFeePortion?: InputMaybe<HavingBigfloatFilter>;
  liquidityProviderFeePortionUsd?: InputMaybe<HavingBigfloatFilter>;
  lostAtEventId?: InputMaybe<HavingBigintFilter>;
  lostAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  networkFeePortion?: InputMaybe<HavingBigfloatFilter>;
  networkFeePortionUsd?: InputMaybe<HavingBigfloatFilter>;
  networkFeeSwapRequestId?: InputMaybe<HavingBigintFilter>;
  prewitnessedDepositId?: InputMaybe<HavingBigintFilter>;
  settledAtEventId?: InputMaybe<HavingBigintFilter>;
  settledAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  swapId?: InputMaybe<HavingBigintFilter>;
  swapRequestId?: InputMaybe<HavingBigintFilter>;
};

export type BoostHavingStddevPopulationInput = {
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositAmountUsd?: InputMaybe<HavingBigfloatFilter>;
  depositChannelId?: InputMaybe<HavingIntFilter>;
  executedAtEventId?: InputMaybe<HavingBigintFilter>;
  executedAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderFeePortion?: InputMaybe<HavingBigfloatFilter>;
  liquidityProviderFeePortionUsd?: InputMaybe<HavingBigfloatFilter>;
  lostAtEventId?: InputMaybe<HavingBigintFilter>;
  lostAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  networkFeePortion?: InputMaybe<HavingBigfloatFilter>;
  networkFeePortionUsd?: InputMaybe<HavingBigfloatFilter>;
  networkFeeSwapRequestId?: InputMaybe<HavingBigintFilter>;
  prewitnessedDepositId?: InputMaybe<HavingBigintFilter>;
  settledAtEventId?: InputMaybe<HavingBigintFilter>;
  settledAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  swapId?: InputMaybe<HavingBigintFilter>;
  swapRequestId?: InputMaybe<HavingBigintFilter>;
};

export type BoostHavingStddevSampleInput = {
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositAmountUsd?: InputMaybe<HavingBigfloatFilter>;
  depositChannelId?: InputMaybe<HavingIntFilter>;
  executedAtEventId?: InputMaybe<HavingBigintFilter>;
  executedAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderFeePortion?: InputMaybe<HavingBigfloatFilter>;
  liquidityProviderFeePortionUsd?: InputMaybe<HavingBigfloatFilter>;
  lostAtEventId?: InputMaybe<HavingBigintFilter>;
  lostAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  networkFeePortion?: InputMaybe<HavingBigfloatFilter>;
  networkFeePortionUsd?: InputMaybe<HavingBigfloatFilter>;
  networkFeeSwapRequestId?: InputMaybe<HavingBigintFilter>;
  prewitnessedDepositId?: InputMaybe<HavingBigintFilter>;
  settledAtEventId?: InputMaybe<HavingBigintFilter>;
  settledAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  swapId?: InputMaybe<HavingBigintFilter>;
  swapRequestId?: InputMaybe<HavingBigintFilter>;
};

export type BoostHavingSumInput = {
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositAmountUsd?: InputMaybe<HavingBigfloatFilter>;
  depositChannelId?: InputMaybe<HavingIntFilter>;
  executedAtEventId?: InputMaybe<HavingBigintFilter>;
  executedAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderFeePortion?: InputMaybe<HavingBigfloatFilter>;
  liquidityProviderFeePortionUsd?: InputMaybe<HavingBigfloatFilter>;
  lostAtEventId?: InputMaybe<HavingBigintFilter>;
  lostAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  networkFeePortion?: InputMaybe<HavingBigfloatFilter>;
  networkFeePortionUsd?: InputMaybe<HavingBigfloatFilter>;
  networkFeeSwapRequestId?: InputMaybe<HavingBigintFilter>;
  prewitnessedDepositId?: InputMaybe<HavingBigintFilter>;
  settledAtEventId?: InputMaybe<HavingBigintFilter>;
  settledAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  swapId?: InputMaybe<HavingBigintFilter>;
  swapRequestId?: InputMaybe<HavingBigintFilter>;
};

export type BoostHavingVariancePopulationInput = {
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositAmountUsd?: InputMaybe<HavingBigfloatFilter>;
  depositChannelId?: InputMaybe<HavingIntFilter>;
  executedAtEventId?: InputMaybe<HavingBigintFilter>;
  executedAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderFeePortion?: InputMaybe<HavingBigfloatFilter>;
  liquidityProviderFeePortionUsd?: InputMaybe<HavingBigfloatFilter>;
  lostAtEventId?: InputMaybe<HavingBigintFilter>;
  lostAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  networkFeePortion?: InputMaybe<HavingBigfloatFilter>;
  networkFeePortionUsd?: InputMaybe<HavingBigfloatFilter>;
  networkFeeSwapRequestId?: InputMaybe<HavingBigintFilter>;
  prewitnessedDepositId?: InputMaybe<HavingBigintFilter>;
  settledAtEventId?: InputMaybe<HavingBigintFilter>;
  settledAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  swapId?: InputMaybe<HavingBigintFilter>;
  swapRequestId?: InputMaybe<HavingBigintFilter>;
};

export type BoostHavingVarianceSampleInput = {
  depositAmount?: InputMaybe<HavingBigfloatFilter>;
  depositAmountUsd?: InputMaybe<HavingBigfloatFilter>;
  depositChannelId?: InputMaybe<HavingIntFilter>;
  executedAtEventId?: InputMaybe<HavingBigintFilter>;
  executedAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderFeePortion?: InputMaybe<HavingBigfloatFilter>;
  liquidityProviderFeePortionUsd?: InputMaybe<HavingBigfloatFilter>;
  lostAtEventId?: InputMaybe<HavingBigintFilter>;
  lostAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  networkFeePortion?: InputMaybe<HavingBigfloatFilter>;
  networkFeePortionUsd?: InputMaybe<HavingBigfloatFilter>;
  networkFeeSwapRequestId?: InputMaybe<HavingBigintFilter>;
  prewitnessedDepositId?: InputMaybe<HavingBigintFilter>;
  settledAtEventId?: InputMaybe<HavingBigintFilter>;
  settledAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  swapId?: InputMaybe<HavingBigintFilter>;
  swapRequestId?: InputMaybe<HavingBigintFilter>;
};

export type BoostLiquidityBalanceChange = Node & {
  __typename?: 'BoostLiquidityBalanceChange';
  /** Reads a single `Account` that is related to this `BoostLiquidityBalanceChange`. */
  accountByLiquidityProviderId: Account;
  amount: Scalars['BigFloat']['output'];
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Reads a single `Boost` that is related to this `BoostLiquidityBalanceChange`. */
  boostByBoostId?: Maybe<Boost>;
  boostId?: Maybe<Scalars['Int']['output']>;
  /** Reads a single `BoostPool` that is related to this `BoostLiquidityBalanceChange`. */
  boostPoolByBoostPoolId: BoostPool;
  boostPoolId: Scalars['Int']['output'];
  /** Reads a single `Event` that is related to this `BoostLiquidityBalanceChange`. */
  eventByEventId: Event;
  eventId: Scalars['BigInt']['output'];
  id: Scalars['Int']['output'];
  liquidityProviderId: Scalars['Int']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  type: BoostPoolBalanceChangeType;
};

export type BoostLiquidityBalanceChangeAggregates = {
  __typename?: 'BoostLiquidityBalanceChangeAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<BoostLiquidityBalanceChangeAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<BoostLiquidityBalanceChangeDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<BoostLiquidityBalanceChangeMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<BoostLiquidityBalanceChangeMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<BoostLiquidityBalanceChangeStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<BoostLiquidityBalanceChangeStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<BoostLiquidityBalanceChangeSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<BoostLiquidityBalanceChangeVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<BoostLiquidityBalanceChangeVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `BoostLiquidityBalanceChange` object types. */
export type BoostLiquidityBalanceChangeAggregatesFilter = {
  /** Mean average aggregate over matching `BoostLiquidityBalanceChange` objects. */
  average?: InputMaybe<BoostLiquidityBalanceChangeAverageAggregateFilter>;
  /** Distinct count aggregate over matching `BoostLiquidityBalanceChange` objects. */
  distinctCount?: InputMaybe<BoostLiquidityBalanceChangeDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `BoostLiquidityBalanceChange` object to be included within the aggregate. */
  filter?: InputMaybe<BoostLiquidityBalanceChangeFilter>;
  /** Maximum aggregate over matching `BoostLiquidityBalanceChange` objects. */
  max?: InputMaybe<BoostLiquidityBalanceChangeMaxAggregateFilter>;
  /** Minimum aggregate over matching `BoostLiquidityBalanceChange` objects. */
  min?: InputMaybe<BoostLiquidityBalanceChangeMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `BoostLiquidityBalanceChange` objects. */
  stddevPopulation?: InputMaybe<BoostLiquidityBalanceChangeStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `BoostLiquidityBalanceChange` objects. */
  stddevSample?: InputMaybe<BoostLiquidityBalanceChangeStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `BoostLiquidityBalanceChange` objects. */
  sum?: InputMaybe<BoostLiquidityBalanceChangeSumAggregateFilter>;
  /** Population variance aggregate over matching `BoostLiquidityBalanceChange` objects. */
  variancePopulation?: InputMaybe<BoostLiquidityBalanceChangeVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `BoostLiquidityBalanceChange` objects. */
  varianceSample?: InputMaybe<BoostLiquidityBalanceChangeVarianceSampleAggregateFilter>;
};

export type BoostLiquidityBalanceChangeAverageAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  boostId?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<BigFloatFilter>;
  eventId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
};

export type BoostLiquidityBalanceChangeAverageAggregates = {
  __typename?: 'BoostLiquidityBalanceChangeAverageAggregates';
  /** Mean average of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of boostId across the matching connection */
  boostId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `BoostLiquidityBalanceChange` object types. All
 * fields are tested for equality and combined with a logical ‘and.’
 */
export type BoostLiquidityBalanceChangeCondition = {
  /** Checks for equality with the object’s `amount` field. */
  amount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `amountUsd` field. */
  amountUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `boostId` field. */
  boostId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `boostPoolId` field. */
  boostPoolId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `eventId` field. */
  eventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `liquidityProviderId` field. */
  liquidityProviderId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `type` field. */
  type?: InputMaybe<BoostPoolBalanceChangeType>;
};

export type BoostLiquidityBalanceChangeDistinctCountAggregateFilter = {
  amount?: InputMaybe<BigIntFilter>;
  amountUsd?: InputMaybe<BigIntFilter>;
  boostId?: InputMaybe<BigIntFilter>;
  boostPoolId?: InputMaybe<BigIntFilter>;
  eventId?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  liquidityProviderId?: InputMaybe<BigIntFilter>;
  type?: InputMaybe<BigIntFilter>;
};

export type BoostLiquidityBalanceChangeDistinctCountAggregates = {
  __typename?: 'BoostLiquidityBalanceChangeDistinctCountAggregates';
  /** Distinct count of amount across the matching connection */
  amount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of boostId across the matching connection */
  boostId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of type across the matching connection */
  type?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `BoostLiquidityBalanceChange` object types. All fields are combined with a logical ‘and.’ */
export type BoostLiquidityBalanceChangeFilter = {
  /** Filter by the object’s `accountByLiquidityProviderId` relation. */
  accountByLiquidityProviderId?: InputMaybe<AccountFilter>;
  /** Filter by the object’s `amount` field. */
  amount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `amountUsd` field. */
  amountUsd?: InputMaybe<BigFloatFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<BoostLiquidityBalanceChangeFilter>>;
  /** Filter by the object’s `boostByBoostId` relation. */
  boostByBoostId?: InputMaybe<BoostFilter>;
  /** A related `boostByBoostId` exists. */
  boostByBoostIdExists?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `boostId` field. */
  boostId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `boostPoolByBoostPoolId` relation. */
  boostPoolByBoostPoolId?: InputMaybe<BoostPoolFilter>;
  /** Filter by the object’s `boostPoolId` field. */
  boostPoolId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `eventByEventId` relation. */
  eventByEventId?: InputMaybe<EventFilter>;
  /** Filter by the object’s `eventId` field. */
  eventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Filter by the object’s `liquidityProviderId` field. */
  liquidityProviderId?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<BoostLiquidityBalanceChangeFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<BoostLiquidityBalanceChangeFilter>>;
  /** Filter by the object’s `type` field. */
  type?: InputMaybe<BoostPoolBalanceChangeTypeFilter>;
};

/** Grouping methods for `BoostLiquidityBalanceChange` for usage during aggregation. */
export type BoostLiquidityBalanceChangeGroupBy =
  | 'AMOUNT'
  | 'AMOUNT_USD'
  | 'BOOST_ID'
  | 'BOOST_POOL_ID'
  | 'EVENT_ID'
  | 'LIQUIDITY_PROVIDER_ID'
  | 'TYPE';

export type BoostLiquidityBalanceChangeHavingAverageInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostId?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type BoostLiquidityBalanceChangeHavingDistinctCountInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostId?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `BoostLiquidityBalanceChange` aggregates. */
export type BoostLiquidityBalanceChangeHavingInput = {
  AND?: InputMaybe<Array<BoostLiquidityBalanceChangeHavingInput>>;
  OR?: InputMaybe<Array<BoostLiquidityBalanceChangeHavingInput>>;
  average?: InputMaybe<BoostLiquidityBalanceChangeHavingAverageInput>;
  distinctCount?: InputMaybe<BoostLiquidityBalanceChangeHavingDistinctCountInput>;
  max?: InputMaybe<BoostLiquidityBalanceChangeHavingMaxInput>;
  min?: InputMaybe<BoostLiquidityBalanceChangeHavingMinInput>;
  stddevPopulation?: InputMaybe<BoostLiquidityBalanceChangeHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<BoostLiquidityBalanceChangeHavingStddevSampleInput>;
  sum?: InputMaybe<BoostLiquidityBalanceChangeHavingSumInput>;
  variancePopulation?: InputMaybe<BoostLiquidityBalanceChangeHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<BoostLiquidityBalanceChangeHavingVarianceSampleInput>;
};

export type BoostLiquidityBalanceChangeHavingMaxInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostId?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type BoostLiquidityBalanceChangeHavingMinInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostId?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type BoostLiquidityBalanceChangeHavingStddevPopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostId?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type BoostLiquidityBalanceChangeHavingStddevSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostId?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type BoostLiquidityBalanceChangeHavingSumInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostId?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type BoostLiquidityBalanceChangeHavingVariancePopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostId?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type BoostLiquidityBalanceChangeHavingVarianceSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostId?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type BoostLiquidityBalanceChangeMaxAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  boostId?: InputMaybe<IntFilter>;
  boostPoolId?: InputMaybe<IntFilter>;
  eventId?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<IntFilter>;
  liquidityProviderId?: InputMaybe<IntFilter>;
};

export type BoostLiquidityBalanceChangeMaxAggregates = {
  __typename?: 'BoostLiquidityBalanceChangeMaxAggregates';
  /** Maximum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of boostId across the matching connection */
  boostId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
};

export type BoostLiquidityBalanceChangeMinAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  boostId?: InputMaybe<IntFilter>;
  boostPoolId?: InputMaybe<IntFilter>;
  eventId?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<IntFilter>;
  liquidityProviderId?: InputMaybe<IntFilter>;
};

export type BoostLiquidityBalanceChangeMinAggregates = {
  __typename?: 'BoostLiquidityBalanceChangeMinAggregates';
  /** Minimum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of boostId across the matching connection */
  boostId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
};

export type BoostLiquidityBalanceChangeStddevPopulationAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  boostId?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<BigFloatFilter>;
  eventId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
};

export type BoostLiquidityBalanceChangeStddevPopulationAggregates = {
  __typename?: 'BoostLiquidityBalanceChangeStddevPopulationAggregates';
  /** Population standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of boostId across the matching connection */
  boostId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
};

export type BoostLiquidityBalanceChangeStddevSampleAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  boostId?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<BigFloatFilter>;
  eventId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
};

export type BoostLiquidityBalanceChangeStddevSampleAggregates = {
  __typename?: 'BoostLiquidityBalanceChangeStddevSampleAggregates';
  /** Sample standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of boostId across the matching connection */
  boostId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
};

export type BoostLiquidityBalanceChangeSumAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  boostId?: InputMaybe<BigIntFilter>;
  boostPoolId?: InputMaybe<BigIntFilter>;
  eventId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigIntFilter>;
  liquidityProviderId?: InputMaybe<BigIntFilter>;
};

export type BoostLiquidityBalanceChangeSumAggregates = {
  __typename?: 'BoostLiquidityBalanceChangeSumAggregates';
  /** Sum of amount across the matching connection */
  amount: Scalars['BigFloat']['output'];
  /** Sum of amountUsd across the matching connection */
  amountUsd: Scalars['BigFloat']['output'];
  /** Sum of boostId across the matching connection */
  boostId: Scalars['BigInt']['output'];
  /** Sum of boostPoolId across the matching connection */
  boostPoolId: Scalars['BigInt']['output'];
  /** Sum of eventId across the matching connection */
  eventId: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of liquidityProviderId across the matching connection */
  liquidityProviderId: Scalars['BigInt']['output'];
};

export type BoostLiquidityBalanceChangeVariancePopulationAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  boostId?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<BigFloatFilter>;
  eventId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
};

export type BoostLiquidityBalanceChangeVariancePopulationAggregates = {
  __typename?: 'BoostLiquidityBalanceChangeVariancePopulationAggregates';
  /** Population variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of boostId across the matching connection */
  boostId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
};

export type BoostLiquidityBalanceChangeVarianceSampleAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  boostId?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<BigFloatFilter>;
  eventId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
};

export type BoostLiquidityBalanceChangeVarianceSampleAggregates = {
  __typename?: 'BoostLiquidityBalanceChangeVarianceSampleAggregates';
  /** Sample variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of boostId across the matching connection */
  boostId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `BoostLiquidityBalanceChange` values. */
export type BoostLiquidityBalanceChangesConnection = {
  __typename?: 'BoostLiquidityBalanceChangesConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<BoostLiquidityBalanceChangeAggregates>;
  /** A list of edges which contains the `BoostLiquidityBalanceChange` and cursor to aid in pagination. */
  edges: Array<BoostLiquidityBalanceChangesEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<BoostLiquidityBalanceChangeAggregates>>;
  /** A list of `BoostLiquidityBalanceChange` objects. */
  nodes: Array<BoostLiquidityBalanceChange>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `BoostLiquidityBalanceChange` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `BoostLiquidityBalanceChange` values. */
export type BoostLiquidityBalanceChangesConnectionGroupedAggregatesArgs = {
  groupBy: Array<BoostLiquidityBalanceChangeGroupBy>;
  having?: InputMaybe<BoostLiquidityBalanceChangeHavingInput>;
};

/** A `BoostLiquidityBalanceChange` edge in the connection. */
export type BoostLiquidityBalanceChangesEdge = {
  __typename?: 'BoostLiquidityBalanceChangesEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `BoostLiquidityBalanceChange` at the end of the edge. */
  node: BoostLiquidityBalanceChange;
};

/** Methods to use when ordering `BoostLiquidityBalanceChange`. */
export type BoostLiquidityBalanceChangesOrderBy =
  | 'AMOUNT_ASC'
  | 'AMOUNT_DESC'
  | 'AMOUNT_USD_ASC'
  | 'AMOUNT_USD_DESC'
  | 'BOOST_ID_ASC'
  | 'BOOST_ID_DESC'
  | 'BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_ID_DESC'
  | 'EVENT_ID_ASC'
  | 'EVENT_ID_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_ID_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'TYPE_ASC'
  | 'TYPE_DESC';

export type BoostMaxAggregateFilter = {
  depositAmount?: InputMaybe<BigFloatFilter>;
  depositAmountUsd?: InputMaybe<BigFloatFilter>;
  depositChannelId?: InputMaybe<IntFilter>;
  executedAtEventId?: InputMaybe<BigIntFilter>;
  fee?: InputMaybe<BigFloatFilter>;
  feeUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<IntFilter>;
  liquidityProviderFeePortion?: InputMaybe<BigFloatFilter>;
  liquidityProviderFeePortionUsd?: InputMaybe<BigFloatFilter>;
  lostAtEventId?: InputMaybe<BigIntFilter>;
  networkFeePortion?: InputMaybe<BigFloatFilter>;
  networkFeePortionUsd?: InputMaybe<BigFloatFilter>;
  networkFeeSwapRequestId?: InputMaybe<BigIntFilter>;
  prewitnessedDepositId?: InputMaybe<BigIntFilter>;
  settledAtEventId?: InputMaybe<BigIntFilter>;
  swapId?: InputMaybe<BigIntFilter>;
  swapRequestId?: InputMaybe<BigIntFilter>;
};

export type BoostMaxAggregates = {
  __typename?: 'BoostMaxAggregates';
  /** Maximum of depositAmount across the matching connection */
  depositAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of depositAmountUsd across the matching connection */
  depositAmountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of depositChannelId across the matching connection */
  depositChannelId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of executedAtEventId across the matching connection */
  executedAtEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of liquidityProviderFeePortion across the matching connection */
  liquidityProviderFeePortion?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of liquidityProviderFeePortionUsd across the matching connection */
  liquidityProviderFeePortionUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of lostAtEventId across the matching connection */
  lostAtEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of networkFeePortion across the matching connection */
  networkFeePortion?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of networkFeePortionUsd across the matching connection */
  networkFeePortionUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of networkFeeSwapRequestId across the matching connection */
  networkFeeSwapRequestId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of prewitnessedDepositId across the matching connection */
  prewitnessedDepositId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of settledAtEventId across the matching connection */
  settledAtEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of swapId across the matching connection */
  swapId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of swapRequestId across the matching connection */
  swapRequestId?: Maybe<Scalars['BigInt']['output']>;
};

export type BoostMinAggregateFilter = {
  depositAmount?: InputMaybe<BigFloatFilter>;
  depositAmountUsd?: InputMaybe<BigFloatFilter>;
  depositChannelId?: InputMaybe<IntFilter>;
  executedAtEventId?: InputMaybe<BigIntFilter>;
  fee?: InputMaybe<BigFloatFilter>;
  feeUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<IntFilter>;
  liquidityProviderFeePortion?: InputMaybe<BigFloatFilter>;
  liquidityProviderFeePortionUsd?: InputMaybe<BigFloatFilter>;
  lostAtEventId?: InputMaybe<BigIntFilter>;
  networkFeePortion?: InputMaybe<BigFloatFilter>;
  networkFeePortionUsd?: InputMaybe<BigFloatFilter>;
  networkFeeSwapRequestId?: InputMaybe<BigIntFilter>;
  prewitnessedDepositId?: InputMaybe<BigIntFilter>;
  settledAtEventId?: InputMaybe<BigIntFilter>;
  swapId?: InputMaybe<BigIntFilter>;
  swapRequestId?: InputMaybe<BigIntFilter>;
};

export type BoostMinAggregates = {
  __typename?: 'BoostMinAggregates';
  /** Minimum of depositAmount across the matching connection */
  depositAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of depositAmountUsd across the matching connection */
  depositAmountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of depositChannelId across the matching connection */
  depositChannelId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of executedAtEventId across the matching connection */
  executedAtEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of liquidityProviderFeePortion across the matching connection */
  liquidityProviderFeePortion?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of liquidityProviderFeePortionUsd across the matching connection */
  liquidityProviderFeePortionUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of lostAtEventId across the matching connection */
  lostAtEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of networkFeePortion across the matching connection */
  networkFeePortion?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of networkFeePortionUsd across the matching connection */
  networkFeePortionUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of networkFeeSwapRequestId across the matching connection */
  networkFeeSwapRequestId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of prewitnessedDepositId across the matching connection */
  prewitnessedDepositId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of settledAtEventId across the matching connection */
  settledAtEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of swapId across the matching connection */
  swapId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of swapRequestId across the matching connection */
  swapRequestId?: Maybe<Scalars['BigInt']['output']>;
};

export type BoostPool = Node & {
  __typename?: 'BoostPool';
  asset: ChainflipAsset;
  /** Reads and enables pagination through a set of `BoostLiquidityBalanceChange`. */
  boostLiquidityBalanceChangesByBoostPoolId: BoostLiquidityBalanceChangesConnection;
  /** Reads and enables pagination through a set of `BoostPoolApy`. */
  boostPoolApiesByBoostPoolId: BoostPoolApiesConnection;
  /** Reads and enables pagination through a set of `BoostPoolBoostShare`. */
  boostPoolBoostSharesByBoostPoolId: BoostPoolBoostSharesConnection;
  /** Reads and enables pagination through a set of `BoostPoolLiquidity`. */
  boostPoolLiquiditiesByBoostPoolId: BoostPoolLiquiditiesConnection;
  /** Reads and enables pagination through a set of `BoostShare`. */
  boostSharesByBoostPoolId: BoostSharesConnection;
  feeTierPips: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  /** Reads and enables pagination through a set of `LiquidityProviderBoostPoolSummary`. */
  liquidityProviderBoostPoolSummariesByBoostPoolId: LiquidityProviderBoostPoolSummariesConnection;
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
};


export type BoostPoolBoostLiquidityBalanceChangesByBoostPoolIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BoostLiquidityBalanceChangeCondition>;
  filter?: InputMaybe<BoostLiquidityBalanceChangeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BoostLiquidityBalanceChangesOrderBy>>;
};


export type BoostPoolBoostPoolApiesByBoostPoolIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BoostPoolApyCondition>;
  filter?: InputMaybe<BoostPoolApyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BoostPoolApiesOrderBy>>;
};


export type BoostPoolBoostPoolBoostSharesByBoostPoolIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BoostPoolBoostShareCondition>;
  filter?: InputMaybe<BoostPoolBoostShareFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BoostPoolBoostSharesOrderBy>>;
};


export type BoostPoolBoostPoolLiquiditiesByBoostPoolIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BoostPoolLiquidityCondition>;
  filter?: InputMaybe<BoostPoolLiquidityFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BoostPoolLiquiditiesOrderBy>>;
};


export type BoostPoolBoostSharesByBoostPoolIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BoostShareCondition>;
  filter?: InputMaybe<BoostShareFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BoostSharesOrderBy>>;
};


export type BoostPoolLiquidityProviderBoostPoolSummariesByBoostPoolIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<LiquidityProviderBoostPoolSummaryCondition>;
  filter?: InputMaybe<LiquidityProviderBoostPoolSummaryFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LiquidityProviderBoostPoolSummariesOrderBy>>;
};

export type BoostPoolAggregates = {
  __typename?: 'BoostPoolAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<BoostPoolAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<BoostPoolDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<BoostPoolMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<BoostPoolMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<BoostPoolStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<BoostPoolStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<BoostPoolSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<BoostPoolVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<BoostPoolVarianceSampleAggregates>;
};

/** A connection to a list of `BoostPoolApy` values. */
export type BoostPoolApiesConnection = {
  __typename?: 'BoostPoolApiesConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<BoostPoolApyAggregates>;
  /** A list of edges which contains the `BoostPoolApy` and cursor to aid in pagination. */
  edges: Array<BoostPoolApiesEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<BoostPoolApyAggregates>>;
  /** A list of `BoostPoolApy` objects. */
  nodes: Array<BoostPoolApy>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `BoostPoolApy` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `BoostPoolApy` values. */
export type BoostPoolApiesConnectionGroupedAggregatesArgs = {
  groupBy: Array<BoostPoolApyGroupBy>;
  having?: InputMaybe<BoostPoolApyHavingInput>;
};

/** A `BoostPoolApy` edge in the connection. */
export type BoostPoolApiesEdge = {
  __typename?: 'BoostPoolApiesEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `BoostPoolApy` at the end of the edge. */
  node: BoostPoolApy;
};

/** Methods to use when ordering `BoostPoolApy`. */
export type BoostPoolApiesOrderBy =
  | 'AVG_LIQUIDITY_ASC'
  | 'AVG_LIQUIDITY_DESC'
  | 'BLOCK_ASC'
  | 'BLOCK_DESC'
  | 'BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_ID_DESC'
  | 'FEES_EARNED_ASC'
  | 'FEES_EARNED_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'INTERVAL_ASC'
  | 'INTERVAL_DESC'
  | 'MAX_LIQUIDITY_ASC'
  | 'MAX_LIQUIDITY_DESC'
  | 'MIN_LIQUIDITY_ASC'
  | 'MIN_LIQUIDITY_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'PROJECTED_APY_ASC'
  | 'PROJECTED_APY_DESC'
  | 'TIMESTAMP_ASC'
  | 'TIMESTAMP_DESC';

export type BoostPoolApy = Node & {
  __typename?: 'BoostPoolApy';
  avgLiquidity: Scalars['BigFloat']['output'];
  block: Scalars['Int']['output'];
  /** Reads a single `BoostPool` that is related to this `BoostPoolApy`. */
  boostPoolByBoostPoolId: BoostPool;
  boostPoolId: Scalars['Int']['output'];
  feesEarned: Scalars['BigFloat']['output'];
  id: Scalars['Int']['output'];
  interval: Scalars['Int']['output'];
  maxLiquidity: Scalars['BigFloat']['output'];
  minLiquidity: Scalars['BigFloat']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  projectedApy: Scalars['BigFloat']['output'];
  timestamp: Scalars['Datetime']['output'];
};

export type BoostPoolApyAggregates = {
  __typename?: 'BoostPoolApyAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<BoostPoolApyAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<BoostPoolApyDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<BoostPoolApyMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<BoostPoolApyMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<BoostPoolApyStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<BoostPoolApyStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<BoostPoolApySumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<BoostPoolApyVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<BoostPoolApyVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `BoostPoolApy` object types. */
export type BoostPoolApyAggregatesFilter = {
  /** Mean average aggregate over matching `BoostPoolApy` objects. */
  average?: InputMaybe<BoostPoolApyAverageAggregateFilter>;
  /** Distinct count aggregate over matching `BoostPoolApy` objects. */
  distinctCount?: InputMaybe<BoostPoolApyDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `BoostPoolApy` object to be included within the aggregate. */
  filter?: InputMaybe<BoostPoolApyFilter>;
  /** Maximum aggregate over matching `BoostPoolApy` objects. */
  max?: InputMaybe<BoostPoolApyMaxAggregateFilter>;
  /** Minimum aggregate over matching `BoostPoolApy` objects. */
  min?: InputMaybe<BoostPoolApyMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `BoostPoolApy` objects. */
  stddevPopulation?: InputMaybe<BoostPoolApyStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `BoostPoolApy` objects. */
  stddevSample?: InputMaybe<BoostPoolApyStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `BoostPoolApy` objects. */
  sum?: InputMaybe<BoostPoolApySumAggregateFilter>;
  /** Population variance aggregate over matching `BoostPoolApy` objects. */
  variancePopulation?: InputMaybe<BoostPoolApyVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `BoostPoolApy` objects. */
  varianceSample?: InputMaybe<BoostPoolApyVarianceSampleAggregateFilter>;
};

export type BoostPoolApyAverageAggregateFilter = {
  avgLiquidity?: InputMaybe<BigFloatFilter>;
  block?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<BigFloatFilter>;
  feesEarned?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  interval?: InputMaybe<BigFloatFilter>;
  maxLiquidity?: InputMaybe<BigFloatFilter>;
  minLiquidity?: InputMaybe<BigFloatFilter>;
  projectedApy?: InputMaybe<BigFloatFilter>;
};

export type BoostPoolApyAverageAggregates = {
  __typename?: 'BoostPoolApyAverageAggregates';
  /** Mean average of avgLiquidity across the matching connection */
  avgLiquidity?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of block across the matching connection */
  block?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of feesEarned across the matching connection */
  feesEarned?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of interval across the matching connection */
  interval?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of maxLiquidity across the matching connection */
  maxLiquidity?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of minLiquidity across the matching connection */
  minLiquidity?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of projectedApy across the matching connection */
  projectedApy?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `BoostPoolApy` object types. All fields are
 * tested for equality and combined with a logical ‘and.’
 */
export type BoostPoolApyCondition = {
  /** Checks for equality with the object’s `avgLiquidity` field. */
  avgLiquidity?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `block` field. */
  block?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `boostPoolId` field. */
  boostPoolId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `feesEarned` field. */
  feesEarned?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `interval` field. */
  interval?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `maxLiquidity` field. */
  maxLiquidity?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `minLiquidity` field. */
  minLiquidity?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `projectedApy` field. */
  projectedApy?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `timestamp` field. */
  timestamp?: InputMaybe<Scalars['Datetime']['input']>;
};

export type BoostPoolApyDistinctCountAggregateFilter = {
  avgLiquidity?: InputMaybe<BigIntFilter>;
  block?: InputMaybe<BigIntFilter>;
  boostPoolId?: InputMaybe<BigIntFilter>;
  feesEarned?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  interval?: InputMaybe<BigIntFilter>;
  maxLiquidity?: InputMaybe<BigIntFilter>;
  minLiquidity?: InputMaybe<BigIntFilter>;
  projectedApy?: InputMaybe<BigIntFilter>;
  timestamp?: InputMaybe<BigIntFilter>;
};

export type BoostPoolApyDistinctCountAggregates = {
  __typename?: 'BoostPoolApyDistinctCountAggregates';
  /** Distinct count of avgLiquidity across the matching connection */
  avgLiquidity?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of block across the matching connection */
  block?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of feesEarned across the matching connection */
  feesEarned?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of interval across the matching connection */
  interval?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of maxLiquidity across the matching connection */
  maxLiquidity?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of minLiquidity across the matching connection */
  minLiquidity?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of projectedApy across the matching connection */
  projectedApy?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of timestamp across the matching connection */
  timestamp?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `BoostPoolApy` object types. All fields are combined with a logical ‘and.’ */
export type BoostPoolApyFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<BoostPoolApyFilter>>;
  /** Filter by the object’s `avgLiquidity` field. */
  avgLiquidity?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `block` field. */
  block?: InputMaybe<IntFilter>;
  /** Filter by the object’s `boostPoolByBoostPoolId` relation. */
  boostPoolByBoostPoolId?: InputMaybe<BoostPoolFilter>;
  /** Filter by the object’s `boostPoolId` field. */
  boostPoolId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `feesEarned` field. */
  feesEarned?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Filter by the object’s `interval` field. */
  interval?: InputMaybe<IntFilter>;
  /** Filter by the object’s `maxLiquidity` field. */
  maxLiquidity?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `minLiquidity` field. */
  minLiquidity?: InputMaybe<BigFloatFilter>;
  /** Negates the expression. */
  not?: InputMaybe<BoostPoolApyFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<BoostPoolApyFilter>>;
  /** Filter by the object’s `projectedApy` field. */
  projectedApy?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `timestamp` field. */
  timestamp?: InputMaybe<DatetimeFilter>;
};

/** Grouping methods for `BoostPoolApy` for usage during aggregation. */
export type BoostPoolApyGroupBy =
  | 'AVG_LIQUIDITY'
  | 'BLOCK'
  | 'BOOST_POOL_ID'
  | 'FEES_EARNED'
  | 'INTERVAL'
  | 'MAX_LIQUIDITY'
  | 'MIN_LIQUIDITY'
  | 'PROJECTED_APY'
  | 'TIMESTAMP'
  | 'TIMESTAMP_TRUNCATED_TO_DAY'
  | 'TIMESTAMP_TRUNCATED_TO_HOUR';

export type BoostPoolApyHavingAverageInput = {
  avgLiquidity?: InputMaybe<HavingBigfloatFilter>;
  block?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  feesEarned?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  interval?: InputMaybe<HavingIntFilter>;
  maxLiquidity?: InputMaybe<HavingBigfloatFilter>;
  minLiquidity?: InputMaybe<HavingBigfloatFilter>;
  projectedApy?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type BoostPoolApyHavingDistinctCountInput = {
  avgLiquidity?: InputMaybe<HavingBigfloatFilter>;
  block?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  feesEarned?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  interval?: InputMaybe<HavingIntFilter>;
  maxLiquidity?: InputMaybe<HavingBigfloatFilter>;
  minLiquidity?: InputMaybe<HavingBigfloatFilter>;
  projectedApy?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

/** Conditions for `BoostPoolApy` aggregates. */
export type BoostPoolApyHavingInput = {
  AND?: InputMaybe<Array<BoostPoolApyHavingInput>>;
  OR?: InputMaybe<Array<BoostPoolApyHavingInput>>;
  average?: InputMaybe<BoostPoolApyHavingAverageInput>;
  distinctCount?: InputMaybe<BoostPoolApyHavingDistinctCountInput>;
  max?: InputMaybe<BoostPoolApyHavingMaxInput>;
  min?: InputMaybe<BoostPoolApyHavingMinInput>;
  stddevPopulation?: InputMaybe<BoostPoolApyHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<BoostPoolApyHavingStddevSampleInput>;
  sum?: InputMaybe<BoostPoolApyHavingSumInput>;
  variancePopulation?: InputMaybe<BoostPoolApyHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<BoostPoolApyHavingVarianceSampleInput>;
};

export type BoostPoolApyHavingMaxInput = {
  avgLiquidity?: InputMaybe<HavingBigfloatFilter>;
  block?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  feesEarned?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  interval?: InputMaybe<HavingIntFilter>;
  maxLiquidity?: InputMaybe<HavingBigfloatFilter>;
  minLiquidity?: InputMaybe<HavingBigfloatFilter>;
  projectedApy?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type BoostPoolApyHavingMinInput = {
  avgLiquidity?: InputMaybe<HavingBigfloatFilter>;
  block?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  feesEarned?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  interval?: InputMaybe<HavingIntFilter>;
  maxLiquidity?: InputMaybe<HavingBigfloatFilter>;
  minLiquidity?: InputMaybe<HavingBigfloatFilter>;
  projectedApy?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type BoostPoolApyHavingStddevPopulationInput = {
  avgLiquidity?: InputMaybe<HavingBigfloatFilter>;
  block?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  feesEarned?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  interval?: InputMaybe<HavingIntFilter>;
  maxLiquidity?: InputMaybe<HavingBigfloatFilter>;
  minLiquidity?: InputMaybe<HavingBigfloatFilter>;
  projectedApy?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type BoostPoolApyHavingStddevSampleInput = {
  avgLiquidity?: InputMaybe<HavingBigfloatFilter>;
  block?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  feesEarned?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  interval?: InputMaybe<HavingIntFilter>;
  maxLiquidity?: InputMaybe<HavingBigfloatFilter>;
  minLiquidity?: InputMaybe<HavingBigfloatFilter>;
  projectedApy?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type BoostPoolApyHavingSumInput = {
  avgLiquidity?: InputMaybe<HavingBigfloatFilter>;
  block?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  feesEarned?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  interval?: InputMaybe<HavingIntFilter>;
  maxLiquidity?: InputMaybe<HavingBigfloatFilter>;
  minLiquidity?: InputMaybe<HavingBigfloatFilter>;
  projectedApy?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type BoostPoolApyHavingVariancePopulationInput = {
  avgLiquidity?: InputMaybe<HavingBigfloatFilter>;
  block?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  feesEarned?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  interval?: InputMaybe<HavingIntFilter>;
  maxLiquidity?: InputMaybe<HavingBigfloatFilter>;
  minLiquidity?: InputMaybe<HavingBigfloatFilter>;
  projectedApy?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type BoostPoolApyHavingVarianceSampleInput = {
  avgLiquidity?: InputMaybe<HavingBigfloatFilter>;
  block?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  feesEarned?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  interval?: InputMaybe<HavingIntFilter>;
  maxLiquidity?: InputMaybe<HavingBigfloatFilter>;
  minLiquidity?: InputMaybe<HavingBigfloatFilter>;
  projectedApy?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type BoostPoolApyMaxAggregateFilter = {
  avgLiquidity?: InputMaybe<BigFloatFilter>;
  block?: InputMaybe<IntFilter>;
  boostPoolId?: InputMaybe<IntFilter>;
  feesEarned?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<IntFilter>;
  interval?: InputMaybe<IntFilter>;
  maxLiquidity?: InputMaybe<BigFloatFilter>;
  minLiquidity?: InputMaybe<BigFloatFilter>;
  projectedApy?: InputMaybe<BigFloatFilter>;
};

export type BoostPoolApyMaxAggregates = {
  __typename?: 'BoostPoolApyMaxAggregates';
  /** Maximum of avgLiquidity across the matching connection */
  avgLiquidity?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of block across the matching connection */
  block?: Maybe<Scalars['Int']['output']>;
  /** Maximum of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of feesEarned across the matching connection */
  feesEarned?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of interval across the matching connection */
  interval?: Maybe<Scalars['Int']['output']>;
  /** Maximum of maxLiquidity across the matching connection */
  maxLiquidity?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of minLiquidity across the matching connection */
  minLiquidity?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of projectedApy across the matching connection */
  projectedApy?: Maybe<Scalars['BigFloat']['output']>;
};

export type BoostPoolApyMinAggregateFilter = {
  avgLiquidity?: InputMaybe<BigFloatFilter>;
  block?: InputMaybe<IntFilter>;
  boostPoolId?: InputMaybe<IntFilter>;
  feesEarned?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<IntFilter>;
  interval?: InputMaybe<IntFilter>;
  maxLiquidity?: InputMaybe<BigFloatFilter>;
  minLiquidity?: InputMaybe<BigFloatFilter>;
  projectedApy?: InputMaybe<BigFloatFilter>;
};

export type BoostPoolApyMinAggregates = {
  __typename?: 'BoostPoolApyMinAggregates';
  /** Minimum of avgLiquidity across the matching connection */
  avgLiquidity?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of block across the matching connection */
  block?: Maybe<Scalars['Int']['output']>;
  /** Minimum of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of feesEarned across the matching connection */
  feesEarned?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of interval across the matching connection */
  interval?: Maybe<Scalars['Int']['output']>;
  /** Minimum of maxLiquidity across the matching connection */
  maxLiquidity?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of minLiquidity across the matching connection */
  minLiquidity?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of projectedApy across the matching connection */
  projectedApy?: Maybe<Scalars['BigFloat']['output']>;
};

export type BoostPoolApyStddevPopulationAggregateFilter = {
  avgLiquidity?: InputMaybe<BigFloatFilter>;
  block?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<BigFloatFilter>;
  feesEarned?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  interval?: InputMaybe<BigFloatFilter>;
  maxLiquidity?: InputMaybe<BigFloatFilter>;
  minLiquidity?: InputMaybe<BigFloatFilter>;
  projectedApy?: InputMaybe<BigFloatFilter>;
};

export type BoostPoolApyStddevPopulationAggregates = {
  __typename?: 'BoostPoolApyStddevPopulationAggregates';
  /** Population standard deviation of avgLiquidity across the matching connection */
  avgLiquidity?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of block across the matching connection */
  block?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of feesEarned across the matching connection */
  feesEarned?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of interval across the matching connection */
  interval?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of maxLiquidity across the matching connection */
  maxLiquidity?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of minLiquidity across the matching connection */
  minLiquidity?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of projectedApy across the matching connection */
  projectedApy?: Maybe<Scalars['BigFloat']['output']>;
};

export type BoostPoolApyStddevSampleAggregateFilter = {
  avgLiquidity?: InputMaybe<BigFloatFilter>;
  block?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<BigFloatFilter>;
  feesEarned?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  interval?: InputMaybe<BigFloatFilter>;
  maxLiquidity?: InputMaybe<BigFloatFilter>;
  minLiquidity?: InputMaybe<BigFloatFilter>;
  projectedApy?: InputMaybe<BigFloatFilter>;
};

export type BoostPoolApyStddevSampleAggregates = {
  __typename?: 'BoostPoolApyStddevSampleAggregates';
  /** Sample standard deviation of avgLiquidity across the matching connection */
  avgLiquidity?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of block across the matching connection */
  block?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of feesEarned across the matching connection */
  feesEarned?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of interval across the matching connection */
  interval?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of maxLiquidity across the matching connection */
  maxLiquidity?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of minLiquidity across the matching connection */
  minLiquidity?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of projectedApy across the matching connection */
  projectedApy?: Maybe<Scalars['BigFloat']['output']>;
};

export type BoostPoolApySumAggregateFilter = {
  avgLiquidity?: InputMaybe<BigFloatFilter>;
  block?: InputMaybe<BigIntFilter>;
  boostPoolId?: InputMaybe<BigIntFilter>;
  feesEarned?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigIntFilter>;
  interval?: InputMaybe<BigIntFilter>;
  maxLiquidity?: InputMaybe<BigFloatFilter>;
  minLiquidity?: InputMaybe<BigFloatFilter>;
  projectedApy?: InputMaybe<BigFloatFilter>;
};

export type BoostPoolApySumAggregates = {
  __typename?: 'BoostPoolApySumAggregates';
  /** Sum of avgLiquidity across the matching connection */
  avgLiquidity: Scalars['BigFloat']['output'];
  /** Sum of block across the matching connection */
  block: Scalars['BigInt']['output'];
  /** Sum of boostPoolId across the matching connection */
  boostPoolId: Scalars['BigInt']['output'];
  /** Sum of feesEarned across the matching connection */
  feesEarned: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of interval across the matching connection */
  interval: Scalars['BigInt']['output'];
  /** Sum of maxLiquidity across the matching connection */
  maxLiquidity: Scalars['BigFloat']['output'];
  /** Sum of minLiquidity across the matching connection */
  minLiquidity: Scalars['BigFloat']['output'];
  /** Sum of projectedApy across the matching connection */
  projectedApy: Scalars['BigFloat']['output'];
};

export type BoostPoolApyVariancePopulationAggregateFilter = {
  avgLiquidity?: InputMaybe<BigFloatFilter>;
  block?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<BigFloatFilter>;
  feesEarned?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  interval?: InputMaybe<BigFloatFilter>;
  maxLiquidity?: InputMaybe<BigFloatFilter>;
  minLiquidity?: InputMaybe<BigFloatFilter>;
  projectedApy?: InputMaybe<BigFloatFilter>;
};

export type BoostPoolApyVariancePopulationAggregates = {
  __typename?: 'BoostPoolApyVariancePopulationAggregates';
  /** Population variance of avgLiquidity across the matching connection */
  avgLiquidity?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of block across the matching connection */
  block?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of feesEarned across the matching connection */
  feesEarned?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of interval across the matching connection */
  interval?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of maxLiquidity across the matching connection */
  maxLiquidity?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of minLiquidity across the matching connection */
  minLiquidity?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of projectedApy across the matching connection */
  projectedApy?: Maybe<Scalars['BigFloat']['output']>;
};

export type BoostPoolApyVarianceSampleAggregateFilter = {
  avgLiquidity?: InputMaybe<BigFloatFilter>;
  block?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<BigFloatFilter>;
  feesEarned?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  interval?: InputMaybe<BigFloatFilter>;
  maxLiquidity?: InputMaybe<BigFloatFilter>;
  minLiquidity?: InputMaybe<BigFloatFilter>;
  projectedApy?: InputMaybe<BigFloatFilter>;
};

export type BoostPoolApyVarianceSampleAggregates = {
  __typename?: 'BoostPoolApyVarianceSampleAggregates';
  /** Sample variance of avgLiquidity across the matching connection */
  avgLiquidity?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of block across the matching connection */
  block?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of feesEarned across the matching connection */
  feesEarned?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of interval across the matching connection */
  interval?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of maxLiquidity across the matching connection */
  maxLiquidity?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of minLiquidity across the matching connection */
  minLiquidity?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of projectedApy across the matching connection */
  projectedApy?: Maybe<Scalars['BigFloat']['output']>;
};

export type BoostPoolAverageAggregates = {
  __typename?: 'BoostPoolAverageAggregates';
  /** Mean average of feeTierPips across the matching connection */
  feeTierPips?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type BoostPoolBalanceChangeType =
  | 'COLLECTED_FEES'
  | 'DELAYED_WITHDRAWAL'
  | 'FUNDS_ADDED'
  | 'FUNDS_LOST'
  | 'WITHDRAWAL';

/** A filter to be used against BoostPoolBalanceChangeType fields. All fields are combined with a logical ‘and.’ */
export type BoostPoolBalanceChangeTypeFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<BoostPoolBalanceChangeType>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<BoostPoolBalanceChangeType>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<BoostPoolBalanceChangeType>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<BoostPoolBalanceChangeType>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<BoostPoolBalanceChangeType>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<BoostPoolBalanceChangeType>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<BoostPoolBalanceChangeType>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<BoostPoolBalanceChangeType>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<BoostPoolBalanceChangeType>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<BoostPoolBalanceChangeType>>;
};

export type BoostPoolBoostShare = Node & {
  __typename?: 'BoostPoolBoostShare';
  amount: Scalars['BigFloat']['output'];
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Reads a single `Boost` that is related to this `BoostPoolBoostShare`. */
  boostByBoostId: Boost;
  boostId: Scalars['Int']['output'];
  /** Reads a single `BoostPool` that is related to this `BoostPoolBoostShare`. */
  boostPoolByBoostPoolId: BoostPool;
  boostPoolId: Scalars['Int']['output'];
  executedAtTimestamp: Scalars['Datetime']['output'];
  fee: Scalars['BigFloat']['output'];
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  id: Scalars['BigInt']['output'];
  lost: Scalars['Boolean']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
};

export type BoostPoolBoostShareAggregates = {
  __typename?: 'BoostPoolBoostShareAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<BoostPoolBoostShareAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<BoostPoolBoostShareDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<BoostPoolBoostShareMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<BoostPoolBoostShareMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<BoostPoolBoostShareStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<BoostPoolBoostShareStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<BoostPoolBoostShareSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<BoostPoolBoostShareVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<BoostPoolBoostShareVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `BoostPoolBoostShare` object types. */
export type BoostPoolBoostShareAggregatesFilter = {
  /** Mean average aggregate over matching `BoostPoolBoostShare` objects. */
  average?: InputMaybe<BoostPoolBoostShareAverageAggregateFilter>;
  /** Distinct count aggregate over matching `BoostPoolBoostShare` objects. */
  distinctCount?: InputMaybe<BoostPoolBoostShareDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `BoostPoolBoostShare` object to be included within the aggregate. */
  filter?: InputMaybe<BoostPoolBoostShareFilter>;
  /** Maximum aggregate over matching `BoostPoolBoostShare` objects. */
  max?: InputMaybe<BoostPoolBoostShareMaxAggregateFilter>;
  /** Minimum aggregate over matching `BoostPoolBoostShare` objects. */
  min?: InputMaybe<BoostPoolBoostShareMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `BoostPoolBoostShare` objects. */
  stddevPopulation?: InputMaybe<BoostPoolBoostShareStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `BoostPoolBoostShare` objects. */
  stddevSample?: InputMaybe<BoostPoolBoostShareStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `BoostPoolBoostShare` objects. */
  sum?: InputMaybe<BoostPoolBoostShareSumAggregateFilter>;
  /** Population variance aggregate over matching `BoostPoolBoostShare` objects. */
  variancePopulation?: InputMaybe<BoostPoolBoostShareVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `BoostPoolBoostShare` objects. */
  varianceSample?: InputMaybe<BoostPoolBoostShareVarianceSampleAggregateFilter>;
};

export type BoostPoolBoostShareAverageAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  boostId?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<BigFloatFilter>;
  fee?: InputMaybe<BigFloatFilter>;
  feeUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
};

export type BoostPoolBoostShareAverageAggregates = {
  __typename?: 'BoostPoolBoostShareAverageAggregates';
  /** Mean average of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of boostId across the matching connection */
  boostId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `BoostPoolBoostShare` object types. All fields
 * are tested for equality and combined with a logical ‘and.’
 */
export type BoostPoolBoostShareCondition = {
  /** Checks for equality with the object’s `amount` field. */
  amount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `amountUsd` field. */
  amountUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `boostId` field. */
  boostId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `boostPoolId` field. */
  boostPoolId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `executedAtTimestamp` field. */
  executedAtTimestamp?: InputMaybe<Scalars['Datetime']['input']>;
  /** Checks for equality with the object’s `fee` field. */
  fee?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `feeUsd` field. */
  feeUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `lost` field. */
  lost?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BoostPoolBoostShareDistinctCountAggregateFilter = {
  amount?: InputMaybe<BigIntFilter>;
  amountUsd?: InputMaybe<BigIntFilter>;
  boostId?: InputMaybe<BigIntFilter>;
  boostPoolId?: InputMaybe<BigIntFilter>;
  executedAtTimestamp?: InputMaybe<BigIntFilter>;
  fee?: InputMaybe<BigIntFilter>;
  feeUsd?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  lost?: InputMaybe<BigIntFilter>;
};

export type BoostPoolBoostShareDistinctCountAggregates = {
  __typename?: 'BoostPoolBoostShareDistinctCountAggregates';
  /** Distinct count of amount across the matching connection */
  amount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of boostId across the matching connection */
  boostId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of executedAtTimestamp across the matching connection */
  executedAtTimestamp?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of fee across the matching connection */
  fee?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of lost across the matching connection */
  lost?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `BoostPoolBoostShare` object types. All fields are combined with a logical ‘and.’ */
export type BoostPoolBoostShareFilter = {
  /** Filter by the object’s `amount` field. */
  amount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `amountUsd` field. */
  amountUsd?: InputMaybe<BigFloatFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<BoostPoolBoostShareFilter>>;
  /** Filter by the object’s `boostByBoostId` relation. */
  boostByBoostId?: InputMaybe<BoostFilter>;
  /** Filter by the object’s `boostId` field. */
  boostId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `boostPoolByBoostPoolId` relation. */
  boostPoolByBoostPoolId?: InputMaybe<BoostPoolFilter>;
  /** Filter by the object’s `boostPoolId` field. */
  boostPoolId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `executedAtTimestamp` field. */
  executedAtTimestamp?: InputMaybe<DatetimeFilter>;
  /** Filter by the object’s `fee` field. */
  fee?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `feeUsd` field. */
  feeUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `lost` field. */
  lost?: InputMaybe<BooleanFilter>;
  /** Negates the expression. */
  not?: InputMaybe<BoostPoolBoostShareFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<BoostPoolBoostShareFilter>>;
};

/** Grouping methods for `BoostPoolBoostShare` for usage during aggregation. */
export type BoostPoolBoostShareGroupBy =
  | 'AMOUNT'
  | 'AMOUNT_USD'
  | 'BOOST_ID'
  | 'BOOST_POOL_ID'
  | 'EXECUTED_AT_TIMESTAMP'
  | 'EXECUTED_AT_TIMESTAMP_TRUNCATED_TO_DAY'
  | 'EXECUTED_AT_TIMESTAMP_TRUNCATED_TO_HOUR'
  | 'FEE'
  | 'FEE_USD'
  | 'LOST';

export type BoostPoolBoostShareHavingAverageInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostId?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  executedAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
};

export type BoostPoolBoostShareHavingDistinctCountInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostId?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  executedAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
};

/** Conditions for `BoostPoolBoostShare` aggregates. */
export type BoostPoolBoostShareHavingInput = {
  AND?: InputMaybe<Array<BoostPoolBoostShareHavingInput>>;
  OR?: InputMaybe<Array<BoostPoolBoostShareHavingInput>>;
  average?: InputMaybe<BoostPoolBoostShareHavingAverageInput>;
  distinctCount?: InputMaybe<BoostPoolBoostShareHavingDistinctCountInput>;
  max?: InputMaybe<BoostPoolBoostShareHavingMaxInput>;
  min?: InputMaybe<BoostPoolBoostShareHavingMinInput>;
  stddevPopulation?: InputMaybe<BoostPoolBoostShareHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<BoostPoolBoostShareHavingStddevSampleInput>;
  sum?: InputMaybe<BoostPoolBoostShareHavingSumInput>;
  variancePopulation?: InputMaybe<BoostPoolBoostShareHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<BoostPoolBoostShareHavingVarianceSampleInput>;
};

export type BoostPoolBoostShareHavingMaxInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostId?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  executedAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
};

export type BoostPoolBoostShareHavingMinInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostId?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  executedAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
};

export type BoostPoolBoostShareHavingStddevPopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostId?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  executedAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
};

export type BoostPoolBoostShareHavingStddevSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostId?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  executedAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
};

export type BoostPoolBoostShareHavingSumInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostId?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  executedAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
};

export type BoostPoolBoostShareHavingVariancePopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostId?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  executedAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
};

export type BoostPoolBoostShareHavingVarianceSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostId?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  executedAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
};

export type BoostPoolBoostShareMaxAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  boostId?: InputMaybe<IntFilter>;
  boostPoolId?: InputMaybe<IntFilter>;
  fee?: InputMaybe<BigFloatFilter>;
  feeUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigIntFilter>;
};

export type BoostPoolBoostShareMaxAggregates = {
  __typename?: 'BoostPoolBoostShareMaxAggregates';
  /** Maximum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of boostId across the matching connection */
  boostId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
};

export type BoostPoolBoostShareMinAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  boostId?: InputMaybe<IntFilter>;
  boostPoolId?: InputMaybe<IntFilter>;
  fee?: InputMaybe<BigFloatFilter>;
  feeUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigIntFilter>;
};

export type BoostPoolBoostShareMinAggregates = {
  __typename?: 'BoostPoolBoostShareMinAggregates';
  /** Minimum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of boostId across the matching connection */
  boostId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
};

export type BoostPoolBoostShareStddevPopulationAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  boostId?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<BigFloatFilter>;
  fee?: InputMaybe<BigFloatFilter>;
  feeUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
};

export type BoostPoolBoostShareStddevPopulationAggregates = {
  __typename?: 'BoostPoolBoostShareStddevPopulationAggregates';
  /** Population standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of boostId across the matching connection */
  boostId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type BoostPoolBoostShareStddevSampleAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  boostId?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<BigFloatFilter>;
  fee?: InputMaybe<BigFloatFilter>;
  feeUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
};

export type BoostPoolBoostShareStddevSampleAggregates = {
  __typename?: 'BoostPoolBoostShareStddevSampleAggregates';
  /** Sample standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of boostId across the matching connection */
  boostId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type BoostPoolBoostShareSumAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  boostId?: InputMaybe<BigIntFilter>;
  boostPoolId?: InputMaybe<BigIntFilter>;
  fee?: InputMaybe<BigFloatFilter>;
  feeUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
};

export type BoostPoolBoostShareSumAggregates = {
  __typename?: 'BoostPoolBoostShareSumAggregates';
  /** Sum of amount across the matching connection */
  amount: Scalars['BigFloat']['output'];
  /** Sum of amountUsd across the matching connection */
  amountUsd: Scalars['BigFloat']['output'];
  /** Sum of boostId across the matching connection */
  boostId: Scalars['BigInt']['output'];
  /** Sum of boostPoolId across the matching connection */
  boostPoolId: Scalars['BigInt']['output'];
  /** Sum of fee across the matching connection */
  fee: Scalars['BigFloat']['output'];
  /** Sum of feeUsd across the matching connection */
  feeUsd: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigFloat']['output'];
};

export type BoostPoolBoostShareVariancePopulationAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  boostId?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<BigFloatFilter>;
  fee?: InputMaybe<BigFloatFilter>;
  feeUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
};

export type BoostPoolBoostShareVariancePopulationAggregates = {
  __typename?: 'BoostPoolBoostShareVariancePopulationAggregates';
  /** Population variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of boostId across the matching connection */
  boostId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type BoostPoolBoostShareVarianceSampleAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  boostId?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<BigFloatFilter>;
  fee?: InputMaybe<BigFloatFilter>;
  feeUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
};

export type BoostPoolBoostShareVarianceSampleAggregates = {
  __typename?: 'BoostPoolBoostShareVarianceSampleAggregates';
  /** Sample variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of boostId across the matching connection */
  boostId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `BoostPoolBoostShare` values. */
export type BoostPoolBoostSharesConnection = {
  __typename?: 'BoostPoolBoostSharesConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<BoostPoolBoostShareAggregates>;
  /** A list of edges which contains the `BoostPoolBoostShare` and cursor to aid in pagination. */
  edges: Array<BoostPoolBoostSharesEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<BoostPoolBoostShareAggregates>>;
  /** A list of `BoostPoolBoostShare` objects. */
  nodes: Array<BoostPoolBoostShare>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `BoostPoolBoostShare` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `BoostPoolBoostShare` values. */
export type BoostPoolBoostSharesConnectionGroupedAggregatesArgs = {
  groupBy: Array<BoostPoolBoostShareGroupBy>;
  having?: InputMaybe<BoostPoolBoostShareHavingInput>;
};

/** A `BoostPoolBoostShare` edge in the connection. */
export type BoostPoolBoostSharesEdge = {
  __typename?: 'BoostPoolBoostSharesEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `BoostPoolBoostShare` at the end of the edge. */
  node: BoostPoolBoostShare;
};

/** Methods to use when ordering `BoostPoolBoostShare`. */
export type BoostPoolBoostSharesOrderBy =
  | 'AMOUNT_ASC'
  | 'AMOUNT_DESC'
  | 'AMOUNT_USD_ASC'
  | 'AMOUNT_USD_DESC'
  | 'BOOST_ID_ASC'
  | 'BOOST_ID_DESC'
  | 'BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_ID_DESC'
  | 'EXECUTED_AT_TIMESTAMP_ASC'
  | 'EXECUTED_AT_TIMESTAMP_DESC'
  | 'FEE_ASC'
  | 'FEE_DESC'
  | 'FEE_USD_ASC'
  | 'FEE_USD_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'LOST_ASC'
  | 'LOST_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC';

/**
 * A condition to be used against `BoostPool` object types. All fields are tested
 * for equality and combined with a logical ‘and.’
 */
export type BoostPoolCondition = {
  /** Checks for equality with the object’s `asset` field. */
  asset?: InputMaybe<ChainflipAsset>;
  /** Checks for equality with the object’s `feeTierPips` field. */
  feeTierPips?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
};

export type BoostPoolDistinctCountAggregates = {
  __typename?: 'BoostPoolDistinctCountAggregates';
  /** Distinct count of asset across the matching connection */
  asset?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of feeTierPips across the matching connection */
  feeTierPips?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `BoostPool` object types. All fields are combined with a logical ‘and.’ */
export type BoostPoolFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<BoostPoolFilter>>;
  /** Filter by the object’s `asset` field. */
  asset?: InputMaybe<ChainflipAssetFilter>;
  /** Filter by the object’s `boostLiquidityBalanceChangesByBoostPoolId` relation. */
  boostLiquidityBalanceChangesByBoostPoolId?: InputMaybe<BoostPoolToManyBoostLiquidityBalanceChangeFilter>;
  /** Some related `boostLiquidityBalanceChangesByBoostPoolId` exist. */
  boostLiquidityBalanceChangesByBoostPoolIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `boostPoolApiesByBoostPoolId` relation. */
  boostPoolApiesByBoostPoolId?: InputMaybe<BoostPoolToManyBoostPoolApyFilter>;
  /** Some related `boostPoolApiesByBoostPoolId` exist. */
  boostPoolApiesByBoostPoolIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `boostPoolBoostSharesByBoostPoolId` relation. */
  boostPoolBoostSharesByBoostPoolId?: InputMaybe<BoostPoolToManyBoostPoolBoostShareFilter>;
  /** Some related `boostPoolBoostSharesByBoostPoolId` exist. */
  boostPoolBoostSharesByBoostPoolIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `boostPoolLiquiditiesByBoostPoolId` relation. */
  boostPoolLiquiditiesByBoostPoolId?: InputMaybe<BoostPoolToManyBoostPoolLiquidityFilter>;
  /** Some related `boostPoolLiquiditiesByBoostPoolId` exist. */
  boostPoolLiquiditiesByBoostPoolIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `boostSharesByBoostPoolId` relation. */
  boostSharesByBoostPoolId?: InputMaybe<BoostPoolToManyBoostShareFilter>;
  /** Some related `boostSharesByBoostPoolId` exist. */
  boostSharesByBoostPoolIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `feeTierPips` field. */
  feeTierPips?: InputMaybe<IntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Filter by the object’s `liquidityProviderBoostPoolSummariesByBoostPoolId` relation. */
  liquidityProviderBoostPoolSummariesByBoostPoolId?: InputMaybe<BoostPoolToManyLiquidityProviderBoostPoolSummaryFilter>;
  /** Some related `liquidityProviderBoostPoolSummariesByBoostPoolId` exist. */
  liquidityProviderBoostPoolSummariesByBoostPoolIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Negates the expression. */
  not?: InputMaybe<BoostPoolFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<BoostPoolFilter>>;
};

/** Grouping methods for `BoostPool` for usage during aggregation. */
export type BoostPoolGroupBy =
  | 'ASSET'
  | 'FEE_TIER_PIPS';

export type BoostPoolHavingAverageInput = {
  feeTierPips?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type BoostPoolHavingDistinctCountInput = {
  feeTierPips?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `BoostPool` aggregates. */
export type BoostPoolHavingInput = {
  AND?: InputMaybe<Array<BoostPoolHavingInput>>;
  OR?: InputMaybe<Array<BoostPoolHavingInput>>;
  average?: InputMaybe<BoostPoolHavingAverageInput>;
  distinctCount?: InputMaybe<BoostPoolHavingDistinctCountInput>;
  max?: InputMaybe<BoostPoolHavingMaxInput>;
  min?: InputMaybe<BoostPoolHavingMinInput>;
  stddevPopulation?: InputMaybe<BoostPoolHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<BoostPoolHavingStddevSampleInput>;
  sum?: InputMaybe<BoostPoolHavingSumInput>;
  variancePopulation?: InputMaybe<BoostPoolHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<BoostPoolHavingVarianceSampleInput>;
};

export type BoostPoolHavingMaxInput = {
  feeTierPips?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type BoostPoolHavingMinInput = {
  feeTierPips?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type BoostPoolHavingStddevPopulationInput = {
  feeTierPips?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type BoostPoolHavingStddevSampleInput = {
  feeTierPips?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type BoostPoolHavingSumInput = {
  feeTierPips?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type BoostPoolHavingVariancePopulationInput = {
  feeTierPips?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

export type BoostPoolHavingVarianceSampleInput = {
  feeTierPips?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
};

/** A connection to a list of `BoostPoolLiquidity` values. */
export type BoostPoolLiquiditiesConnection = {
  __typename?: 'BoostPoolLiquiditiesConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<BoostPoolLiquidityAggregates>;
  /** A list of edges which contains the `BoostPoolLiquidity` and cursor to aid in pagination. */
  edges: Array<BoostPoolLiquiditiesEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<BoostPoolLiquidityAggregates>>;
  /** A list of `BoostPoolLiquidity` objects. */
  nodes: Array<BoostPoolLiquidity>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `BoostPoolLiquidity` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `BoostPoolLiquidity` values. */
export type BoostPoolLiquiditiesConnectionGroupedAggregatesArgs = {
  groupBy: Array<BoostPoolLiquidityGroupBy>;
  having?: InputMaybe<BoostPoolLiquidityHavingInput>;
};

/** A `BoostPoolLiquidity` edge in the connection. */
export type BoostPoolLiquiditiesEdge = {
  __typename?: 'BoostPoolLiquiditiesEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `BoostPoolLiquidity` at the end of the edge. */
  node: BoostPoolLiquidity;
};

/** Methods to use when ordering `BoostPoolLiquidity`. */
export type BoostPoolLiquiditiesOrderBy =
  | 'AVAILABLE_AMOUNT_ASC'
  | 'AVAILABLE_AMOUNT_DESC'
  | 'AVAILABLE_AMOUNT_VALUE_USD_ASC'
  | 'AVAILABLE_AMOUNT_VALUE_USD_DESC'
  | 'BLOCK_ASC'
  | 'BLOCK_DESC'
  | 'BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_ID_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'TIMESTAMP_ASC'
  | 'TIMESTAMP_DESC'
  | 'TOTAL_AMOUNT_ASC'
  | 'TOTAL_AMOUNT_DESC'
  | 'TOTAL_AMOUNT_VALUE_USD_ASC'
  | 'TOTAL_AMOUNT_VALUE_USD_DESC'
  | 'UNAVAILABLE_AMOUNT_ASC'
  | 'UNAVAILABLE_AMOUNT_DESC'
  | 'UNAVAILABLE_AMOUNT_VALUE_USD_ASC'
  | 'UNAVAILABLE_AMOUNT_VALUE_USD_DESC';

export type BoostPoolLiquidity = Node & {
  __typename?: 'BoostPoolLiquidity';
  availableAmount: Scalars['BigFloat']['output'];
  availableAmountValueUsd: Scalars['BigFloat']['output'];
  block: Scalars['Int']['output'];
  /** Reads a single `BoostPool` that is related to this `BoostPoolLiquidity`. */
  boostPoolByBoostPoolId: BoostPool;
  boostPoolId: Scalars['Int']['output'];
  id: Scalars['BigInt']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  timestamp: Scalars['Datetime']['output'];
  totalAmount: Scalars['BigFloat']['output'];
  totalAmountValueUsd: Scalars['BigFloat']['output'];
  unavailableAmount: Scalars['BigFloat']['output'];
  unavailableAmountValueUsd: Scalars['BigFloat']['output'];
};

export type BoostPoolLiquidityAggregates = {
  __typename?: 'BoostPoolLiquidityAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<BoostPoolLiquidityAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<BoostPoolLiquidityDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<BoostPoolLiquidityMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<BoostPoolLiquidityMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<BoostPoolLiquidityStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<BoostPoolLiquidityStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<BoostPoolLiquiditySumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<BoostPoolLiquidityVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<BoostPoolLiquidityVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `BoostPoolLiquidity` object types. */
export type BoostPoolLiquidityAggregatesFilter = {
  /** Mean average aggregate over matching `BoostPoolLiquidity` objects. */
  average?: InputMaybe<BoostPoolLiquidityAverageAggregateFilter>;
  /** Distinct count aggregate over matching `BoostPoolLiquidity` objects. */
  distinctCount?: InputMaybe<BoostPoolLiquidityDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `BoostPoolLiquidity` object to be included within the aggregate. */
  filter?: InputMaybe<BoostPoolLiquidityFilter>;
  /** Maximum aggregate over matching `BoostPoolLiquidity` objects. */
  max?: InputMaybe<BoostPoolLiquidityMaxAggregateFilter>;
  /** Minimum aggregate over matching `BoostPoolLiquidity` objects. */
  min?: InputMaybe<BoostPoolLiquidityMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `BoostPoolLiquidity` objects. */
  stddevPopulation?: InputMaybe<BoostPoolLiquidityStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `BoostPoolLiquidity` objects. */
  stddevSample?: InputMaybe<BoostPoolLiquidityStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `BoostPoolLiquidity` objects. */
  sum?: InputMaybe<BoostPoolLiquiditySumAggregateFilter>;
  /** Population variance aggregate over matching `BoostPoolLiquidity` objects. */
  variancePopulation?: InputMaybe<BoostPoolLiquidityVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `BoostPoolLiquidity` objects. */
  varianceSample?: InputMaybe<BoostPoolLiquidityVarianceSampleAggregateFilter>;
};

export type BoostPoolLiquidityAverageAggregateFilter = {
  availableAmount?: InputMaybe<BigFloatFilter>;
  availableAmountValueUsd?: InputMaybe<BigFloatFilter>;
  block?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  totalAmount?: InputMaybe<BigFloatFilter>;
  totalAmountValueUsd?: InputMaybe<BigFloatFilter>;
  unavailableAmount?: InputMaybe<BigFloatFilter>;
  unavailableAmountValueUsd?: InputMaybe<BigFloatFilter>;
};

export type BoostPoolLiquidityAverageAggregates = {
  __typename?: 'BoostPoolLiquidityAverageAggregates';
  /** Mean average of availableAmount across the matching connection */
  availableAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of availableAmountValueUsd across the matching connection */
  availableAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of block across the matching connection */
  block?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of totalAmount across the matching connection */
  totalAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of totalAmountValueUsd across the matching connection */
  totalAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of unavailableAmount across the matching connection */
  unavailableAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of unavailableAmountValueUsd across the matching connection */
  unavailableAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `BoostPoolLiquidity` object types. All fields are
 * tested for equality and combined with a logical ‘and.’
 */
export type BoostPoolLiquidityCondition = {
  /** Checks for equality with the object’s `availableAmount` field. */
  availableAmount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `availableAmountValueUsd` field. */
  availableAmountValueUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `block` field. */
  block?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `boostPoolId` field. */
  boostPoolId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `timestamp` field. */
  timestamp?: InputMaybe<Scalars['Datetime']['input']>;
  /** Checks for equality with the object’s `totalAmount` field. */
  totalAmount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `totalAmountValueUsd` field. */
  totalAmountValueUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `unavailableAmount` field. */
  unavailableAmount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `unavailableAmountValueUsd` field. */
  unavailableAmountValueUsd?: InputMaybe<Scalars['BigFloat']['input']>;
};

export type BoostPoolLiquidityDistinctCountAggregateFilter = {
  availableAmount?: InputMaybe<BigIntFilter>;
  availableAmountValueUsd?: InputMaybe<BigIntFilter>;
  block?: InputMaybe<BigIntFilter>;
  boostPoolId?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  timestamp?: InputMaybe<BigIntFilter>;
  totalAmount?: InputMaybe<BigIntFilter>;
  totalAmountValueUsd?: InputMaybe<BigIntFilter>;
  unavailableAmount?: InputMaybe<BigIntFilter>;
  unavailableAmountValueUsd?: InputMaybe<BigIntFilter>;
};

export type BoostPoolLiquidityDistinctCountAggregates = {
  __typename?: 'BoostPoolLiquidityDistinctCountAggregates';
  /** Distinct count of availableAmount across the matching connection */
  availableAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of availableAmountValueUsd across the matching connection */
  availableAmountValueUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of block across the matching connection */
  block?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of timestamp across the matching connection */
  timestamp?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of totalAmount across the matching connection */
  totalAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of totalAmountValueUsd across the matching connection */
  totalAmountValueUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of unavailableAmount across the matching connection */
  unavailableAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of unavailableAmountValueUsd across the matching connection */
  unavailableAmountValueUsd?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `BoostPoolLiquidity` object types. All fields are combined with a logical ‘and.’ */
export type BoostPoolLiquidityFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<BoostPoolLiquidityFilter>>;
  /** Filter by the object’s `availableAmount` field. */
  availableAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `availableAmountValueUsd` field. */
  availableAmountValueUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `block` field. */
  block?: InputMaybe<IntFilter>;
  /** Filter by the object’s `boostPoolByBoostPoolId` relation. */
  boostPoolByBoostPoolId?: InputMaybe<BoostPoolFilter>;
  /** Filter by the object’s `boostPoolId` field. */
  boostPoolId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<BigIntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<BoostPoolLiquidityFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<BoostPoolLiquidityFilter>>;
  /** Filter by the object’s `timestamp` field. */
  timestamp?: InputMaybe<DatetimeFilter>;
  /** Filter by the object’s `totalAmount` field. */
  totalAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `totalAmountValueUsd` field. */
  totalAmountValueUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `unavailableAmount` field. */
  unavailableAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `unavailableAmountValueUsd` field. */
  unavailableAmountValueUsd?: InputMaybe<BigFloatFilter>;
};

/** Grouping methods for `BoostPoolLiquidity` for usage during aggregation. */
export type BoostPoolLiquidityGroupBy =
  | 'AVAILABLE_AMOUNT'
  | 'AVAILABLE_AMOUNT_VALUE_USD'
  | 'BLOCK'
  | 'BOOST_POOL_ID'
  | 'TIMESTAMP'
  | 'TIMESTAMP_TRUNCATED_TO_DAY'
  | 'TIMESTAMP_TRUNCATED_TO_HOUR'
  | 'TOTAL_AMOUNT'
  | 'TOTAL_AMOUNT_VALUE_USD'
  | 'UNAVAILABLE_AMOUNT'
  | 'UNAVAILABLE_AMOUNT_VALUE_USD';

export type BoostPoolLiquidityHavingAverageInput = {
  availableAmount?: InputMaybe<HavingBigfloatFilter>;
  availableAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  block?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  totalAmount?: InputMaybe<HavingBigfloatFilter>;
  totalAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  unavailableAmount?: InputMaybe<HavingBigfloatFilter>;
  unavailableAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type BoostPoolLiquidityHavingDistinctCountInput = {
  availableAmount?: InputMaybe<HavingBigfloatFilter>;
  availableAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  block?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  totalAmount?: InputMaybe<HavingBigfloatFilter>;
  totalAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  unavailableAmount?: InputMaybe<HavingBigfloatFilter>;
  unavailableAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
};

/** Conditions for `BoostPoolLiquidity` aggregates. */
export type BoostPoolLiquidityHavingInput = {
  AND?: InputMaybe<Array<BoostPoolLiquidityHavingInput>>;
  OR?: InputMaybe<Array<BoostPoolLiquidityHavingInput>>;
  average?: InputMaybe<BoostPoolLiquidityHavingAverageInput>;
  distinctCount?: InputMaybe<BoostPoolLiquidityHavingDistinctCountInput>;
  max?: InputMaybe<BoostPoolLiquidityHavingMaxInput>;
  min?: InputMaybe<BoostPoolLiquidityHavingMinInput>;
  stddevPopulation?: InputMaybe<BoostPoolLiquidityHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<BoostPoolLiquidityHavingStddevSampleInput>;
  sum?: InputMaybe<BoostPoolLiquidityHavingSumInput>;
  variancePopulation?: InputMaybe<BoostPoolLiquidityHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<BoostPoolLiquidityHavingVarianceSampleInput>;
};

export type BoostPoolLiquidityHavingMaxInput = {
  availableAmount?: InputMaybe<HavingBigfloatFilter>;
  availableAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  block?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  totalAmount?: InputMaybe<HavingBigfloatFilter>;
  totalAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  unavailableAmount?: InputMaybe<HavingBigfloatFilter>;
  unavailableAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type BoostPoolLiquidityHavingMinInput = {
  availableAmount?: InputMaybe<HavingBigfloatFilter>;
  availableAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  block?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  totalAmount?: InputMaybe<HavingBigfloatFilter>;
  totalAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  unavailableAmount?: InputMaybe<HavingBigfloatFilter>;
  unavailableAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type BoostPoolLiquidityHavingStddevPopulationInput = {
  availableAmount?: InputMaybe<HavingBigfloatFilter>;
  availableAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  block?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  totalAmount?: InputMaybe<HavingBigfloatFilter>;
  totalAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  unavailableAmount?: InputMaybe<HavingBigfloatFilter>;
  unavailableAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type BoostPoolLiquidityHavingStddevSampleInput = {
  availableAmount?: InputMaybe<HavingBigfloatFilter>;
  availableAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  block?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  totalAmount?: InputMaybe<HavingBigfloatFilter>;
  totalAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  unavailableAmount?: InputMaybe<HavingBigfloatFilter>;
  unavailableAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type BoostPoolLiquidityHavingSumInput = {
  availableAmount?: InputMaybe<HavingBigfloatFilter>;
  availableAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  block?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  totalAmount?: InputMaybe<HavingBigfloatFilter>;
  totalAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  unavailableAmount?: InputMaybe<HavingBigfloatFilter>;
  unavailableAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type BoostPoolLiquidityHavingVariancePopulationInput = {
  availableAmount?: InputMaybe<HavingBigfloatFilter>;
  availableAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  block?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  totalAmount?: InputMaybe<HavingBigfloatFilter>;
  totalAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  unavailableAmount?: InputMaybe<HavingBigfloatFilter>;
  unavailableAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type BoostPoolLiquidityHavingVarianceSampleInput = {
  availableAmount?: InputMaybe<HavingBigfloatFilter>;
  availableAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  block?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  totalAmount?: InputMaybe<HavingBigfloatFilter>;
  totalAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  unavailableAmount?: InputMaybe<HavingBigfloatFilter>;
  unavailableAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type BoostPoolLiquidityMaxAggregateFilter = {
  availableAmount?: InputMaybe<BigFloatFilter>;
  availableAmountValueUsd?: InputMaybe<BigFloatFilter>;
  block?: InputMaybe<IntFilter>;
  boostPoolId?: InputMaybe<IntFilter>;
  id?: InputMaybe<BigIntFilter>;
  totalAmount?: InputMaybe<BigFloatFilter>;
  totalAmountValueUsd?: InputMaybe<BigFloatFilter>;
  unavailableAmount?: InputMaybe<BigFloatFilter>;
  unavailableAmountValueUsd?: InputMaybe<BigFloatFilter>;
};

export type BoostPoolLiquidityMaxAggregates = {
  __typename?: 'BoostPoolLiquidityMaxAggregates';
  /** Maximum of availableAmount across the matching connection */
  availableAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of availableAmountValueUsd across the matching connection */
  availableAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of block across the matching connection */
  block?: Maybe<Scalars['Int']['output']>;
  /** Maximum of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of totalAmount across the matching connection */
  totalAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of totalAmountValueUsd across the matching connection */
  totalAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of unavailableAmount across the matching connection */
  unavailableAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of unavailableAmountValueUsd across the matching connection */
  unavailableAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type BoostPoolLiquidityMinAggregateFilter = {
  availableAmount?: InputMaybe<BigFloatFilter>;
  availableAmountValueUsd?: InputMaybe<BigFloatFilter>;
  block?: InputMaybe<IntFilter>;
  boostPoolId?: InputMaybe<IntFilter>;
  id?: InputMaybe<BigIntFilter>;
  totalAmount?: InputMaybe<BigFloatFilter>;
  totalAmountValueUsd?: InputMaybe<BigFloatFilter>;
  unavailableAmount?: InputMaybe<BigFloatFilter>;
  unavailableAmountValueUsd?: InputMaybe<BigFloatFilter>;
};

export type BoostPoolLiquidityMinAggregates = {
  __typename?: 'BoostPoolLiquidityMinAggregates';
  /** Minimum of availableAmount across the matching connection */
  availableAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of availableAmountValueUsd across the matching connection */
  availableAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of block across the matching connection */
  block?: Maybe<Scalars['Int']['output']>;
  /** Minimum of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of totalAmount across the matching connection */
  totalAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of totalAmountValueUsd across the matching connection */
  totalAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of unavailableAmount across the matching connection */
  unavailableAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of unavailableAmountValueUsd across the matching connection */
  unavailableAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type BoostPoolLiquidityStddevPopulationAggregateFilter = {
  availableAmount?: InputMaybe<BigFloatFilter>;
  availableAmountValueUsd?: InputMaybe<BigFloatFilter>;
  block?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  totalAmount?: InputMaybe<BigFloatFilter>;
  totalAmountValueUsd?: InputMaybe<BigFloatFilter>;
  unavailableAmount?: InputMaybe<BigFloatFilter>;
  unavailableAmountValueUsd?: InputMaybe<BigFloatFilter>;
};

export type BoostPoolLiquidityStddevPopulationAggregates = {
  __typename?: 'BoostPoolLiquidityStddevPopulationAggregates';
  /** Population standard deviation of availableAmount across the matching connection */
  availableAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of availableAmountValueUsd across the matching connection */
  availableAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of block across the matching connection */
  block?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of totalAmount across the matching connection */
  totalAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of totalAmountValueUsd across the matching connection */
  totalAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of unavailableAmount across the matching connection */
  unavailableAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of unavailableAmountValueUsd across the matching connection */
  unavailableAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type BoostPoolLiquidityStddevSampleAggregateFilter = {
  availableAmount?: InputMaybe<BigFloatFilter>;
  availableAmountValueUsd?: InputMaybe<BigFloatFilter>;
  block?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  totalAmount?: InputMaybe<BigFloatFilter>;
  totalAmountValueUsd?: InputMaybe<BigFloatFilter>;
  unavailableAmount?: InputMaybe<BigFloatFilter>;
  unavailableAmountValueUsd?: InputMaybe<BigFloatFilter>;
};

export type BoostPoolLiquidityStddevSampleAggregates = {
  __typename?: 'BoostPoolLiquidityStddevSampleAggregates';
  /** Sample standard deviation of availableAmount across the matching connection */
  availableAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of availableAmountValueUsd across the matching connection */
  availableAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of block across the matching connection */
  block?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of totalAmount across the matching connection */
  totalAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of totalAmountValueUsd across the matching connection */
  totalAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of unavailableAmount across the matching connection */
  unavailableAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of unavailableAmountValueUsd across the matching connection */
  unavailableAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type BoostPoolLiquiditySumAggregateFilter = {
  availableAmount?: InputMaybe<BigFloatFilter>;
  availableAmountValueUsd?: InputMaybe<BigFloatFilter>;
  block?: InputMaybe<BigIntFilter>;
  boostPoolId?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigFloatFilter>;
  totalAmount?: InputMaybe<BigFloatFilter>;
  totalAmountValueUsd?: InputMaybe<BigFloatFilter>;
  unavailableAmount?: InputMaybe<BigFloatFilter>;
  unavailableAmountValueUsd?: InputMaybe<BigFloatFilter>;
};

export type BoostPoolLiquiditySumAggregates = {
  __typename?: 'BoostPoolLiquiditySumAggregates';
  /** Sum of availableAmount across the matching connection */
  availableAmount: Scalars['BigFloat']['output'];
  /** Sum of availableAmountValueUsd across the matching connection */
  availableAmountValueUsd: Scalars['BigFloat']['output'];
  /** Sum of block across the matching connection */
  block: Scalars['BigInt']['output'];
  /** Sum of boostPoolId across the matching connection */
  boostPoolId: Scalars['BigInt']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigFloat']['output'];
  /** Sum of totalAmount across the matching connection */
  totalAmount: Scalars['BigFloat']['output'];
  /** Sum of totalAmountValueUsd across the matching connection */
  totalAmountValueUsd: Scalars['BigFloat']['output'];
  /** Sum of unavailableAmount across the matching connection */
  unavailableAmount: Scalars['BigFloat']['output'];
  /** Sum of unavailableAmountValueUsd across the matching connection */
  unavailableAmountValueUsd: Scalars['BigFloat']['output'];
};

export type BoostPoolLiquidityVariancePopulationAggregateFilter = {
  availableAmount?: InputMaybe<BigFloatFilter>;
  availableAmountValueUsd?: InputMaybe<BigFloatFilter>;
  block?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  totalAmount?: InputMaybe<BigFloatFilter>;
  totalAmountValueUsd?: InputMaybe<BigFloatFilter>;
  unavailableAmount?: InputMaybe<BigFloatFilter>;
  unavailableAmountValueUsd?: InputMaybe<BigFloatFilter>;
};

export type BoostPoolLiquidityVariancePopulationAggregates = {
  __typename?: 'BoostPoolLiquidityVariancePopulationAggregates';
  /** Population variance of availableAmount across the matching connection */
  availableAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of availableAmountValueUsd across the matching connection */
  availableAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of block across the matching connection */
  block?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of totalAmount across the matching connection */
  totalAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of totalAmountValueUsd across the matching connection */
  totalAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of unavailableAmount across the matching connection */
  unavailableAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of unavailableAmountValueUsd across the matching connection */
  unavailableAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type BoostPoolLiquidityVarianceSampleAggregateFilter = {
  availableAmount?: InputMaybe<BigFloatFilter>;
  availableAmountValueUsd?: InputMaybe<BigFloatFilter>;
  block?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  totalAmount?: InputMaybe<BigFloatFilter>;
  totalAmountValueUsd?: InputMaybe<BigFloatFilter>;
  unavailableAmount?: InputMaybe<BigFloatFilter>;
  unavailableAmountValueUsd?: InputMaybe<BigFloatFilter>;
};

export type BoostPoolLiquidityVarianceSampleAggregates = {
  __typename?: 'BoostPoolLiquidityVarianceSampleAggregates';
  /** Sample variance of availableAmount across the matching connection */
  availableAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of availableAmountValueUsd across the matching connection */
  availableAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of block across the matching connection */
  block?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of totalAmount across the matching connection */
  totalAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of totalAmountValueUsd across the matching connection */
  totalAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of unavailableAmount across the matching connection */
  unavailableAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of unavailableAmountValueUsd across the matching connection */
  unavailableAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type BoostPoolMaxAggregates = {
  __typename?: 'BoostPoolMaxAggregates';
  /** Maximum of feeTierPips across the matching connection */
  feeTierPips?: Maybe<Scalars['Int']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
};

export type BoostPoolMinAggregates = {
  __typename?: 'BoostPoolMinAggregates';
  /** Minimum of feeTierPips across the matching connection */
  feeTierPips?: Maybe<Scalars['Int']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
};

export type BoostPoolStddevPopulationAggregates = {
  __typename?: 'BoostPoolStddevPopulationAggregates';
  /** Population standard deviation of feeTierPips across the matching connection */
  feeTierPips?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type BoostPoolStddevSampleAggregates = {
  __typename?: 'BoostPoolStddevSampleAggregates';
  /** Sample standard deviation of feeTierPips across the matching connection */
  feeTierPips?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type BoostPoolSumAggregates = {
  __typename?: 'BoostPoolSumAggregates';
  /** Sum of feeTierPips across the matching connection */
  feeTierPips: Scalars['BigInt']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
};

/** A filter to be used against many `BoostLiquidityBalanceChange` object types. All fields are combined with a logical ‘and.’ */
export type BoostPoolToManyBoostLiquidityBalanceChangeFilter = {
  /** Aggregates across related `BoostLiquidityBalanceChange` match the filter criteria. */
  aggregates?: InputMaybe<BoostLiquidityBalanceChangeAggregatesFilter>;
  /** Every related `BoostLiquidityBalanceChange` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<BoostLiquidityBalanceChangeFilter>;
  /** No related `BoostLiquidityBalanceChange` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<BoostLiquidityBalanceChangeFilter>;
  /** Some related `BoostLiquidityBalanceChange` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<BoostLiquidityBalanceChangeFilter>;
};

/** A filter to be used against many `BoostPoolApy` object types. All fields are combined with a logical ‘and.’ */
export type BoostPoolToManyBoostPoolApyFilter = {
  /** Aggregates across related `BoostPoolApy` match the filter criteria. */
  aggregates?: InputMaybe<BoostPoolApyAggregatesFilter>;
  /** Every related `BoostPoolApy` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<BoostPoolApyFilter>;
  /** No related `BoostPoolApy` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<BoostPoolApyFilter>;
  /** Some related `BoostPoolApy` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<BoostPoolApyFilter>;
};

/** A filter to be used against many `BoostPoolBoostShare` object types. All fields are combined with a logical ‘and.’ */
export type BoostPoolToManyBoostPoolBoostShareFilter = {
  /** Aggregates across related `BoostPoolBoostShare` match the filter criteria. */
  aggregates?: InputMaybe<BoostPoolBoostShareAggregatesFilter>;
  /** Every related `BoostPoolBoostShare` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<BoostPoolBoostShareFilter>;
  /** No related `BoostPoolBoostShare` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<BoostPoolBoostShareFilter>;
  /** Some related `BoostPoolBoostShare` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<BoostPoolBoostShareFilter>;
};

/** A filter to be used against many `BoostPoolLiquidity` object types. All fields are combined with a logical ‘and.’ */
export type BoostPoolToManyBoostPoolLiquidityFilter = {
  /** Aggregates across related `BoostPoolLiquidity` match the filter criteria. */
  aggregates?: InputMaybe<BoostPoolLiquidityAggregatesFilter>;
  /** Every related `BoostPoolLiquidity` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<BoostPoolLiquidityFilter>;
  /** No related `BoostPoolLiquidity` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<BoostPoolLiquidityFilter>;
  /** Some related `BoostPoolLiquidity` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<BoostPoolLiquidityFilter>;
};

/** A filter to be used against many `BoostShare` object types. All fields are combined with a logical ‘and.’ */
export type BoostPoolToManyBoostShareFilter = {
  /** Aggregates across related `BoostShare` match the filter criteria. */
  aggregates?: InputMaybe<BoostShareAggregatesFilter>;
  /** Every related `BoostShare` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<BoostShareFilter>;
  /** No related `BoostShare` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<BoostShareFilter>;
  /** Some related `BoostShare` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<BoostShareFilter>;
};

/** A filter to be used against many `LiquidityProviderBoostPoolSummary` object types. All fields are combined with a logical ‘and.’ */
export type BoostPoolToManyLiquidityProviderBoostPoolSummaryFilter = {
  /** Aggregates across related `LiquidityProviderBoostPoolSummary` match the filter criteria. */
  aggregates?: InputMaybe<LiquidityProviderBoostPoolSummaryAggregatesFilter>;
  /** Every related `LiquidityProviderBoostPoolSummary` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<LiquidityProviderBoostPoolSummaryFilter>;
  /** No related `LiquidityProviderBoostPoolSummary` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<LiquidityProviderBoostPoolSummaryFilter>;
  /** Some related `LiquidityProviderBoostPoolSummary` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<LiquidityProviderBoostPoolSummaryFilter>;
};

export type BoostPoolVariancePopulationAggregates = {
  __typename?: 'BoostPoolVariancePopulationAggregates';
  /** Population variance of feeTierPips across the matching connection */
  feeTierPips?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type BoostPoolVarianceSampleAggregates = {
  __typename?: 'BoostPoolVarianceSampleAggregates';
  /** Sample variance of feeTierPips across the matching connection */
  feeTierPips?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `BoostPool` values. */
export type BoostPoolsConnection = {
  __typename?: 'BoostPoolsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<BoostPoolAggregates>;
  /** A list of edges which contains the `BoostPool` and cursor to aid in pagination. */
  edges: Array<BoostPoolsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<BoostPoolAggregates>>;
  /** A list of `BoostPool` objects. */
  nodes: Array<BoostPool>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `BoostPool` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `BoostPool` values. */
export type BoostPoolsConnectionGroupedAggregatesArgs = {
  groupBy: Array<BoostPoolGroupBy>;
  having?: InputMaybe<BoostPoolHavingInput>;
};

/** A `BoostPool` edge in the connection. */
export type BoostPoolsEdge = {
  __typename?: 'BoostPoolsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `BoostPool` at the end of the edge. */
  node: BoostPool;
};

/** Methods to use when ordering `BoostPool`. */
export type BoostPoolsOrderBy =
  | 'ASSET_ASC'
  | 'ASSET_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_AVERAGE_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_AVERAGE_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_AVERAGE_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_AVERAGE_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_AVERAGE_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_AVERAGE_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_AVERAGE_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_AVERAGE_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_AVERAGE_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_AVERAGE_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_AVERAGE_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_AVERAGE_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_AVERAGE_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_AVERAGE_TYPE_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_COUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_COUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_DISTINCT_COUNT_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_DISTINCT_COUNT_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_DISTINCT_COUNT_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_DISTINCT_COUNT_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_DISTINCT_COUNT_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_DISTINCT_COUNT_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_DISTINCT_COUNT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_DISTINCT_COUNT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_DISTINCT_COUNT_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_DISTINCT_COUNT_TYPE_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_MAX_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_MAX_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_MAX_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_MAX_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_MAX_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_MAX_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_MAX_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_MAX_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_MAX_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_MAX_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_MAX_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_MAX_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_MAX_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_MAX_TYPE_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_MIN_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_MIN_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_MIN_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_MIN_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_MIN_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_MIN_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_MIN_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_MIN_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_MIN_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_MIN_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_MIN_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_MIN_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_MIN_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_MIN_TYPE_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_STDDEV_POPULATION_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_STDDEV_POPULATION_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_STDDEV_POPULATION_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_STDDEV_POPULATION_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_STDDEV_POPULATION_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_STDDEV_POPULATION_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_STDDEV_POPULATION_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_STDDEV_POPULATION_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_STDDEV_POPULATION_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_STDDEV_POPULATION_TYPE_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_TYPE_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_SUM_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_SUM_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_SUM_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_SUM_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_SUM_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_SUM_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_SUM_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_SUM_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_SUM_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_SUM_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_SUM_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_SUM_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_SUM_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_SUM_TYPE_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_TYPE_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_TYPE_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_AVERAGE_AVG_LIQUIDITY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_AVERAGE_AVG_LIQUIDITY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_AVERAGE_BLOCK_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_AVERAGE_BLOCK_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_AVERAGE_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_AVERAGE_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_AVERAGE_FEES_EARNED_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_AVERAGE_FEES_EARNED_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_AVERAGE_ID_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_AVERAGE_ID_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_AVERAGE_INTERVAL_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_AVERAGE_INTERVAL_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_AVERAGE_MAX_LIQUIDITY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_AVERAGE_MAX_LIQUIDITY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_AVERAGE_MIN_LIQUIDITY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_AVERAGE_MIN_LIQUIDITY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_AVERAGE_PROJECTED_APY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_AVERAGE_PROJECTED_APY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_AVERAGE_TIMESTAMP_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_AVERAGE_TIMESTAMP_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_COUNT_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_COUNT_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_AVG_LIQUIDITY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_AVG_LIQUIDITY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_BLOCK_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_BLOCK_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_FEES_EARNED_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_FEES_EARNED_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_ID_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_ID_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_INTERVAL_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_INTERVAL_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_MAX_LIQUIDITY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_MAX_LIQUIDITY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_MIN_LIQUIDITY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_MIN_LIQUIDITY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_PROJECTED_APY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_PROJECTED_APY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_TIMESTAMP_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_TIMESTAMP_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MAX_AVG_LIQUIDITY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MAX_AVG_LIQUIDITY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MAX_BLOCK_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MAX_BLOCK_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MAX_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MAX_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MAX_FEES_EARNED_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MAX_FEES_EARNED_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MAX_ID_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MAX_ID_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MAX_INTERVAL_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MAX_INTERVAL_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MAX_MAX_LIQUIDITY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MAX_MAX_LIQUIDITY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MAX_MIN_LIQUIDITY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MAX_MIN_LIQUIDITY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MAX_PROJECTED_APY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MAX_PROJECTED_APY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MAX_TIMESTAMP_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MAX_TIMESTAMP_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MIN_AVG_LIQUIDITY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MIN_AVG_LIQUIDITY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MIN_BLOCK_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MIN_BLOCK_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MIN_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MIN_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MIN_FEES_EARNED_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MIN_FEES_EARNED_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MIN_ID_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MIN_ID_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MIN_INTERVAL_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MIN_INTERVAL_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MIN_MAX_LIQUIDITY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MIN_MAX_LIQUIDITY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MIN_MIN_LIQUIDITY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MIN_MIN_LIQUIDITY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MIN_PROJECTED_APY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MIN_PROJECTED_APY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MIN_TIMESTAMP_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_MIN_TIMESTAMP_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_AVG_LIQUIDITY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_AVG_LIQUIDITY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_BLOCK_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_BLOCK_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_FEES_EARNED_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_FEES_EARNED_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_ID_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_ID_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_INTERVAL_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_INTERVAL_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_MAX_LIQUIDITY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_MAX_LIQUIDITY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_MIN_LIQUIDITY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_MIN_LIQUIDITY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_PROJECTED_APY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_PROJECTED_APY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_TIMESTAMP_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_TIMESTAMP_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_AVG_LIQUIDITY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_AVG_LIQUIDITY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_BLOCK_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_BLOCK_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_FEES_EARNED_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_FEES_EARNED_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_ID_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_ID_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_INTERVAL_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_INTERVAL_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_MAX_LIQUIDITY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_MAX_LIQUIDITY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_MIN_LIQUIDITY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_MIN_LIQUIDITY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_PROJECTED_APY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_PROJECTED_APY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_TIMESTAMP_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_TIMESTAMP_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_SUM_AVG_LIQUIDITY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_SUM_AVG_LIQUIDITY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_SUM_BLOCK_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_SUM_BLOCK_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_SUM_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_SUM_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_SUM_FEES_EARNED_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_SUM_FEES_EARNED_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_SUM_ID_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_SUM_ID_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_SUM_INTERVAL_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_SUM_INTERVAL_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_SUM_MAX_LIQUIDITY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_SUM_MAX_LIQUIDITY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_SUM_MIN_LIQUIDITY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_SUM_MIN_LIQUIDITY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_SUM_PROJECTED_APY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_SUM_PROJECTED_APY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_SUM_TIMESTAMP_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_SUM_TIMESTAMP_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_AVG_LIQUIDITY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_AVG_LIQUIDITY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_BLOCK_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_BLOCK_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_FEES_EARNED_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_FEES_EARNED_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_ID_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_ID_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_INTERVAL_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_INTERVAL_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_MAX_LIQUIDITY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_MAX_LIQUIDITY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_MIN_LIQUIDITY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_MIN_LIQUIDITY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_PROJECTED_APY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_PROJECTED_APY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_TIMESTAMP_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_TIMESTAMP_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_AVG_LIQUIDITY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_AVG_LIQUIDITY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_BLOCK_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_BLOCK_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_FEES_EARNED_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_FEES_EARNED_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_INTERVAL_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_INTERVAL_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_MAX_LIQUIDITY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_MAX_LIQUIDITY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_MIN_LIQUIDITY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_MIN_LIQUIDITY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_PROJECTED_APY_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_PROJECTED_APY_DESC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_TIMESTAMP_ASC'
  | 'BOOST_POOL_APIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_TIMESTAMP_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_AMOUNT_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_AMOUNT_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_AMOUNT_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_AMOUNT_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_BOOST_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_BOOST_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_FEE_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_FEE_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_FEE_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_FEE_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_LOST_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_LOST_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_COUNT_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_COUNT_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_AMOUNT_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_AMOUNT_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_BOOST_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_BOOST_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_FEE_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_FEE_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_FEE_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_FEE_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_LOST_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_LOST_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MAX_AMOUNT_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MAX_AMOUNT_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MAX_AMOUNT_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MAX_AMOUNT_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MAX_BOOST_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MAX_BOOST_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MAX_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MAX_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MAX_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MAX_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MAX_FEE_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MAX_FEE_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MAX_FEE_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MAX_FEE_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MAX_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MAX_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MAX_LOST_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MAX_LOST_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MIN_AMOUNT_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MIN_AMOUNT_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MIN_AMOUNT_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MIN_AMOUNT_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MIN_BOOST_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MIN_BOOST_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MIN_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MIN_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MIN_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MIN_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MIN_FEE_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MIN_FEE_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MIN_FEE_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MIN_FEE_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MIN_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MIN_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MIN_LOST_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_MIN_LOST_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_AMOUNT_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_AMOUNT_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_BOOST_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_BOOST_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_FEE_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_FEE_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_FEE_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_FEE_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_LOST_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_LOST_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_AMOUNT_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_AMOUNT_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_BOOST_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_BOOST_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_FEE_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_FEE_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_FEE_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_FEE_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_LOST_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_LOST_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_SUM_AMOUNT_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_SUM_AMOUNT_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_SUM_AMOUNT_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_SUM_AMOUNT_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_SUM_BOOST_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_SUM_BOOST_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_SUM_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_SUM_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_SUM_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_SUM_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_SUM_FEE_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_SUM_FEE_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_SUM_FEE_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_SUM_FEE_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_SUM_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_SUM_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_SUM_LOST_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_SUM_LOST_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_AMOUNT_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_AMOUNT_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_BOOST_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_BOOST_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_FEE_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_FEE_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_FEE_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_FEE_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_LOST_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_LOST_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_AMOUNT_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_AMOUNT_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_BOOST_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_BOOST_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_FEE_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_FEE_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_FEE_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_FEE_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_LOST_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_LOST_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_AVERAGE_AVAILABLE_AMOUNT_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_AVERAGE_AVAILABLE_AMOUNT_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_AVERAGE_AVAILABLE_AMOUNT_VALUE_USD_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_AVERAGE_AVAILABLE_AMOUNT_VALUE_USD_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_AVERAGE_BLOCK_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_AVERAGE_BLOCK_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_AVERAGE_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_AVERAGE_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_AVERAGE_ID_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_AVERAGE_ID_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_AVERAGE_TIMESTAMP_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_AVERAGE_TIMESTAMP_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_AVERAGE_TOTAL_AMOUNT_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_AVERAGE_TOTAL_AMOUNT_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_AVERAGE_TOTAL_AMOUNT_VALUE_USD_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_AVERAGE_TOTAL_AMOUNT_VALUE_USD_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_AVERAGE_UNAVAILABLE_AMOUNT_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_AVERAGE_UNAVAILABLE_AMOUNT_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_AVERAGE_UNAVAILABLE_AMOUNT_VALUE_USD_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_AVERAGE_UNAVAILABLE_AMOUNT_VALUE_USD_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_COUNT_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_COUNT_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_AVAILABLE_AMOUNT_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_AVAILABLE_AMOUNT_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_AVAILABLE_AMOUNT_VALUE_USD_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_AVAILABLE_AMOUNT_VALUE_USD_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_BLOCK_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_BLOCK_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_ID_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_ID_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_TIMESTAMP_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_TIMESTAMP_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_TOTAL_AMOUNT_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_TOTAL_AMOUNT_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_TOTAL_AMOUNT_VALUE_USD_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_TOTAL_AMOUNT_VALUE_USD_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_UNAVAILABLE_AMOUNT_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_UNAVAILABLE_AMOUNT_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_UNAVAILABLE_AMOUNT_VALUE_USD_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_UNAVAILABLE_AMOUNT_VALUE_USD_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MAX_AVAILABLE_AMOUNT_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MAX_AVAILABLE_AMOUNT_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MAX_AVAILABLE_AMOUNT_VALUE_USD_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MAX_AVAILABLE_AMOUNT_VALUE_USD_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MAX_BLOCK_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MAX_BLOCK_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MAX_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MAX_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MAX_ID_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MAX_ID_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MAX_TIMESTAMP_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MAX_TIMESTAMP_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MAX_TOTAL_AMOUNT_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MAX_TOTAL_AMOUNT_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MAX_TOTAL_AMOUNT_VALUE_USD_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MAX_TOTAL_AMOUNT_VALUE_USD_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MAX_UNAVAILABLE_AMOUNT_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MAX_UNAVAILABLE_AMOUNT_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MAX_UNAVAILABLE_AMOUNT_VALUE_USD_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MAX_UNAVAILABLE_AMOUNT_VALUE_USD_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MIN_AVAILABLE_AMOUNT_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MIN_AVAILABLE_AMOUNT_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MIN_AVAILABLE_AMOUNT_VALUE_USD_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MIN_AVAILABLE_AMOUNT_VALUE_USD_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MIN_BLOCK_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MIN_BLOCK_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MIN_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MIN_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MIN_ID_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MIN_ID_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MIN_TIMESTAMP_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MIN_TIMESTAMP_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MIN_TOTAL_AMOUNT_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MIN_TOTAL_AMOUNT_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MIN_TOTAL_AMOUNT_VALUE_USD_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MIN_TOTAL_AMOUNT_VALUE_USD_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MIN_UNAVAILABLE_AMOUNT_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MIN_UNAVAILABLE_AMOUNT_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MIN_UNAVAILABLE_AMOUNT_VALUE_USD_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_MIN_UNAVAILABLE_AMOUNT_VALUE_USD_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_AVAILABLE_AMOUNT_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_AVAILABLE_AMOUNT_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_AVAILABLE_AMOUNT_VALUE_USD_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_AVAILABLE_AMOUNT_VALUE_USD_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_BLOCK_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_BLOCK_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_ID_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_ID_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_TIMESTAMP_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_TIMESTAMP_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_TOTAL_AMOUNT_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_TOTAL_AMOUNT_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_TOTAL_AMOUNT_VALUE_USD_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_TOTAL_AMOUNT_VALUE_USD_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_UNAVAILABLE_AMOUNT_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_UNAVAILABLE_AMOUNT_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_UNAVAILABLE_AMOUNT_VALUE_USD_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_UNAVAILABLE_AMOUNT_VALUE_USD_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_AVAILABLE_AMOUNT_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_AVAILABLE_AMOUNT_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_AVAILABLE_AMOUNT_VALUE_USD_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_AVAILABLE_AMOUNT_VALUE_USD_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_BLOCK_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_BLOCK_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_ID_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_ID_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_TIMESTAMP_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_TIMESTAMP_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_TOTAL_AMOUNT_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_TOTAL_AMOUNT_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_TOTAL_AMOUNT_VALUE_USD_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_TOTAL_AMOUNT_VALUE_USD_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_UNAVAILABLE_AMOUNT_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_UNAVAILABLE_AMOUNT_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_UNAVAILABLE_AMOUNT_VALUE_USD_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_UNAVAILABLE_AMOUNT_VALUE_USD_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_SUM_AVAILABLE_AMOUNT_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_SUM_AVAILABLE_AMOUNT_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_SUM_AVAILABLE_AMOUNT_VALUE_USD_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_SUM_AVAILABLE_AMOUNT_VALUE_USD_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_SUM_BLOCK_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_SUM_BLOCK_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_SUM_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_SUM_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_SUM_ID_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_SUM_ID_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_SUM_TIMESTAMP_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_SUM_TIMESTAMP_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_SUM_TOTAL_AMOUNT_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_SUM_TOTAL_AMOUNT_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_SUM_TOTAL_AMOUNT_VALUE_USD_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_SUM_TOTAL_AMOUNT_VALUE_USD_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_SUM_UNAVAILABLE_AMOUNT_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_SUM_UNAVAILABLE_AMOUNT_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_SUM_UNAVAILABLE_AMOUNT_VALUE_USD_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_SUM_UNAVAILABLE_AMOUNT_VALUE_USD_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_AVAILABLE_AMOUNT_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_AVAILABLE_AMOUNT_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_AVAILABLE_AMOUNT_VALUE_USD_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_AVAILABLE_AMOUNT_VALUE_USD_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_BLOCK_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_BLOCK_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_ID_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_ID_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_TIMESTAMP_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_TIMESTAMP_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_TOTAL_AMOUNT_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_TOTAL_AMOUNT_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_TOTAL_AMOUNT_VALUE_USD_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_TOTAL_AMOUNT_VALUE_USD_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_UNAVAILABLE_AMOUNT_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_UNAVAILABLE_AMOUNT_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_UNAVAILABLE_AMOUNT_VALUE_USD_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_UNAVAILABLE_AMOUNT_VALUE_USD_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_AVAILABLE_AMOUNT_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_AVAILABLE_AMOUNT_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_AVAILABLE_AMOUNT_VALUE_USD_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_AVAILABLE_AMOUNT_VALUE_USD_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_BLOCK_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_BLOCK_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_TIMESTAMP_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_TIMESTAMP_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_TOTAL_AMOUNT_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_TOTAL_AMOUNT_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_TOTAL_AMOUNT_VALUE_USD_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_TOTAL_AMOUNT_VALUE_USD_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_UNAVAILABLE_AMOUNT_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_UNAVAILABLE_AMOUNT_DESC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_UNAVAILABLE_AMOUNT_VALUE_USD_ASC'
  | 'BOOST_POOL_LIQUIDITIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_UNAVAILABLE_AMOUNT_VALUE_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_AMOUNT_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_AMOUNT_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_AMOUNT_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_AMOUNT_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_BOOST_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_BOOST_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_BOOST_POOL_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_BOOST_POOL_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_FEE_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_FEE_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_FEE_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_FEE_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_LOST_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_AVERAGE_LOST_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_COUNT_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_COUNT_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_AMOUNT_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_AMOUNT_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_BOOST_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_BOOST_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_BOOST_POOL_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_BOOST_POOL_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_FEE_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_FEE_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_FEE_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_FEE_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_LOST_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_DISTINCT_COUNT_LOST_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MAX_AMOUNT_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MAX_AMOUNT_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MAX_AMOUNT_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MAX_AMOUNT_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MAX_BOOST_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MAX_BOOST_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MAX_BOOST_POOL_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MAX_BOOST_POOL_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MAX_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MAX_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MAX_FEE_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MAX_FEE_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MAX_FEE_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MAX_FEE_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MAX_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MAX_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MAX_LOST_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MAX_LOST_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MIN_AMOUNT_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MIN_AMOUNT_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MIN_AMOUNT_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MIN_AMOUNT_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MIN_BOOST_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MIN_BOOST_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MIN_BOOST_POOL_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MIN_BOOST_POOL_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MIN_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MIN_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MIN_FEE_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MIN_FEE_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MIN_FEE_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MIN_FEE_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MIN_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MIN_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MIN_LOST_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_MIN_LOST_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_AMOUNT_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_AMOUNT_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_BOOST_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_BOOST_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_BOOST_POOL_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_BOOST_POOL_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_FEE_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_FEE_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_FEE_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_FEE_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_LOST_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_POPULATION_LOST_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_AMOUNT_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_AMOUNT_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_BOOST_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_BOOST_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_BOOST_POOL_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_BOOST_POOL_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_FEE_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_FEE_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_FEE_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_FEE_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_LOST_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_LOST_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_SUM_AMOUNT_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_SUM_AMOUNT_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_SUM_AMOUNT_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_SUM_AMOUNT_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_SUM_BOOST_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_SUM_BOOST_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_SUM_BOOST_POOL_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_SUM_BOOST_POOL_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_SUM_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_SUM_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_SUM_FEE_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_SUM_FEE_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_SUM_FEE_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_SUM_FEE_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_SUM_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_SUM_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_SUM_LOST_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_SUM_LOST_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_AMOUNT_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_AMOUNT_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_BOOST_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_BOOST_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_BOOST_POOL_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_BOOST_POOL_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_FEE_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_FEE_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_FEE_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_FEE_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_LOST_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_LOST_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_AMOUNT_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_AMOUNT_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_BOOST_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_BOOST_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_BOOST_POOL_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_BOOST_POOL_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_FEE_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_FEE_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_FEE_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_FEE_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_LOST_ASC'
  | 'BOOST_SHARES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_LOST_DESC'
  | 'FEE_TIER_PIPS_ASC'
  | 'FEE_TIER_PIPS_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_AVERAGE_AMOUNT_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_AVERAGE_AMOUNT_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_AVERAGE_AMOUNT_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_AVERAGE_AMOUNT_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_AVERAGE_BOOST_POOL_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_AVERAGE_BOOST_POOL_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_AVERAGE_FEE_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_AVERAGE_FEE_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_AVERAGE_FEE_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_AVERAGE_FEE_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_COUNT_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_COUNT_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_AMOUNT_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_AMOUNT_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_BOOST_POOL_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_BOOST_POOL_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_FEE_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_FEE_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_FEE_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_FEE_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_MAX_AMOUNT_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_MAX_AMOUNT_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_MAX_AMOUNT_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_MAX_AMOUNT_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_MAX_BOOST_POOL_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_MAX_BOOST_POOL_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_MAX_FEE_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_MAX_FEE_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_MAX_FEE_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_MAX_FEE_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_MIN_AMOUNT_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_MIN_AMOUNT_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_MIN_AMOUNT_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_MIN_AMOUNT_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_MIN_BOOST_POOL_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_MIN_BOOST_POOL_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_MIN_FEE_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_MIN_FEE_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_MIN_FEE_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_MIN_FEE_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_AMOUNT_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_AMOUNT_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_BOOST_POOL_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_BOOST_POOL_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_FEE_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_FEE_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_FEE_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_FEE_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_AMOUNT_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_AMOUNT_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_BOOST_POOL_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_BOOST_POOL_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_FEE_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_FEE_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_FEE_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_FEE_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_SUM_AMOUNT_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_SUM_AMOUNT_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_SUM_AMOUNT_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_SUM_AMOUNT_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_SUM_BOOST_POOL_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_SUM_BOOST_POOL_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_SUM_FEE_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_SUM_FEE_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_SUM_FEE_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_SUM_FEE_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_AMOUNT_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_AMOUNT_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_BOOST_POOL_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_BOOST_POOL_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_FEE_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_FEE_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_FEE_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_FEE_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_AMOUNT_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_AMOUNT_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_BOOST_POOL_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_BOOST_POOL_ID_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_FEE_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_FEE_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_FEE_USD_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_FEE_USD_DESC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_BOOST_POOL_SUMMARIES_BY_BOOST_POOL_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC';

export type BoostShare = Node & {
  __typename?: 'BoostShare';
  /** Reads a single `Account` that is related to this `BoostShare`. */
  accountByLiquidityProviderId: Account;
  amount: Scalars['BigFloat']['output'];
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Reads a single `Boost` that is related to this `BoostShare`. */
  boostByBoostId: Boost;
  boostId: Scalars['Int']['output'];
  /** Reads a single `BoostPool` that is related to this `BoostShare`. */
  boostPoolByBoostPoolId: BoostPool;
  boostPoolId: Scalars['Int']['output'];
  executedAtTimestamp: Scalars['Datetime']['output'];
  fee: Scalars['BigFloat']['output'];
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  id: Scalars['Int']['output'];
  liquidityProviderId: Scalars['Int']['output'];
  lost: Scalars['Boolean']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
};

export type BoostShareAggregates = {
  __typename?: 'BoostShareAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<BoostShareAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<BoostShareDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<BoostShareMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<BoostShareMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<BoostShareStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<BoostShareStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<BoostShareSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<BoostShareVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<BoostShareVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `BoostShare` object types. */
export type BoostShareAggregatesFilter = {
  /** Mean average aggregate over matching `BoostShare` objects. */
  average?: InputMaybe<BoostShareAverageAggregateFilter>;
  /** Distinct count aggregate over matching `BoostShare` objects. */
  distinctCount?: InputMaybe<BoostShareDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `BoostShare` object to be included within the aggregate. */
  filter?: InputMaybe<BoostShareFilter>;
  /** Maximum aggregate over matching `BoostShare` objects. */
  max?: InputMaybe<BoostShareMaxAggregateFilter>;
  /** Minimum aggregate over matching `BoostShare` objects. */
  min?: InputMaybe<BoostShareMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `BoostShare` objects. */
  stddevPopulation?: InputMaybe<BoostShareStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `BoostShare` objects. */
  stddevSample?: InputMaybe<BoostShareStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `BoostShare` objects. */
  sum?: InputMaybe<BoostShareSumAggregateFilter>;
  /** Population variance aggregate over matching `BoostShare` objects. */
  variancePopulation?: InputMaybe<BoostShareVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `BoostShare` objects. */
  varianceSample?: InputMaybe<BoostShareVarianceSampleAggregateFilter>;
};

export type BoostShareAverageAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  boostId?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<BigFloatFilter>;
  fee?: InputMaybe<BigFloatFilter>;
  feeUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
};

export type BoostShareAverageAggregates = {
  __typename?: 'BoostShareAverageAggregates';
  /** Mean average of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of boostId across the matching connection */
  boostId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `BoostShare` object types. All fields are tested
 * for equality and combined with a logical ‘and.’
 */
export type BoostShareCondition = {
  /** Checks for equality with the object’s `amount` field. */
  amount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `amountUsd` field. */
  amountUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `boostId` field. */
  boostId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `boostPoolId` field. */
  boostPoolId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `executedAtTimestamp` field. */
  executedAtTimestamp?: InputMaybe<Scalars['Datetime']['input']>;
  /** Checks for equality with the object’s `fee` field. */
  fee?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `feeUsd` field. */
  feeUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `liquidityProviderId` field. */
  liquidityProviderId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `lost` field. */
  lost?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BoostShareDistinctCountAggregateFilter = {
  amount?: InputMaybe<BigIntFilter>;
  amountUsd?: InputMaybe<BigIntFilter>;
  boostId?: InputMaybe<BigIntFilter>;
  boostPoolId?: InputMaybe<BigIntFilter>;
  executedAtTimestamp?: InputMaybe<BigIntFilter>;
  fee?: InputMaybe<BigIntFilter>;
  feeUsd?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  liquidityProviderId?: InputMaybe<BigIntFilter>;
  lost?: InputMaybe<BigIntFilter>;
};

export type BoostShareDistinctCountAggregates = {
  __typename?: 'BoostShareDistinctCountAggregates';
  /** Distinct count of amount across the matching connection */
  amount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of boostId across the matching connection */
  boostId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of executedAtTimestamp across the matching connection */
  executedAtTimestamp?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of fee across the matching connection */
  fee?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of lost across the matching connection */
  lost?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `BoostShare` object types. All fields are combined with a logical ‘and.’ */
export type BoostShareFilter = {
  /** Filter by the object’s `accountByLiquidityProviderId` relation. */
  accountByLiquidityProviderId?: InputMaybe<AccountFilter>;
  /** Filter by the object’s `amount` field. */
  amount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `amountUsd` field. */
  amountUsd?: InputMaybe<BigFloatFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<BoostShareFilter>>;
  /** Filter by the object’s `boostByBoostId` relation. */
  boostByBoostId?: InputMaybe<BoostFilter>;
  /** Filter by the object’s `boostId` field. */
  boostId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `boostPoolByBoostPoolId` relation. */
  boostPoolByBoostPoolId?: InputMaybe<BoostPoolFilter>;
  /** Filter by the object’s `boostPoolId` field. */
  boostPoolId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `executedAtTimestamp` field. */
  executedAtTimestamp?: InputMaybe<DatetimeFilter>;
  /** Filter by the object’s `fee` field. */
  fee?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `feeUsd` field. */
  feeUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Filter by the object’s `liquidityProviderId` field. */
  liquidityProviderId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `lost` field. */
  lost?: InputMaybe<BooleanFilter>;
  /** Negates the expression. */
  not?: InputMaybe<BoostShareFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<BoostShareFilter>>;
};

/** Grouping methods for `BoostShare` for usage during aggregation. */
export type BoostShareGroupBy =
  | 'AMOUNT'
  | 'AMOUNT_USD'
  | 'BOOST_ID'
  | 'BOOST_POOL_ID'
  | 'EXECUTED_AT_TIMESTAMP'
  | 'EXECUTED_AT_TIMESTAMP_TRUNCATED_TO_DAY'
  | 'EXECUTED_AT_TIMESTAMP_TRUNCATED_TO_HOUR'
  | 'FEE'
  | 'FEE_USD'
  | 'LIQUIDITY_PROVIDER_ID'
  | 'LOST';

export type BoostShareHavingAverageInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostId?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  executedAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type BoostShareHavingDistinctCountInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostId?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  executedAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `BoostShare` aggregates. */
export type BoostShareHavingInput = {
  AND?: InputMaybe<Array<BoostShareHavingInput>>;
  OR?: InputMaybe<Array<BoostShareHavingInput>>;
  average?: InputMaybe<BoostShareHavingAverageInput>;
  distinctCount?: InputMaybe<BoostShareHavingDistinctCountInput>;
  max?: InputMaybe<BoostShareHavingMaxInput>;
  min?: InputMaybe<BoostShareHavingMinInput>;
  stddevPopulation?: InputMaybe<BoostShareHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<BoostShareHavingStddevSampleInput>;
  sum?: InputMaybe<BoostShareHavingSumInput>;
  variancePopulation?: InputMaybe<BoostShareHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<BoostShareHavingVarianceSampleInput>;
};

export type BoostShareHavingMaxInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostId?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  executedAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type BoostShareHavingMinInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostId?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  executedAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type BoostShareHavingStddevPopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostId?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  executedAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type BoostShareHavingStddevSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostId?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  executedAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type BoostShareHavingSumInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostId?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  executedAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type BoostShareHavingVariancePopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostId?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  executedAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type BoostShareHavingVarianceSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostId?: InputMaybe<HavingIntFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  executedAtTimestamp?: InputMaybe<HavingDatetimeFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type BoostShareMaxAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  boostId?: InputMaybe<IntFilter>;
  boostPoolId?: InputMaybe<IntFilter>;
  fee?: InputMaybe<BigFloatFilter>;
  feeUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<IntFilter>;
  liquidityProviderId?: InputMaybe<IntFilter>;
};

export type BoostShareMaxAggregates = {
  __typename?: 'BoostShareMaxAggregates';
  /** Maximum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of boostId across the matching connection */
  boostId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
};

export type BoostShareMinAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  boostId?: InputMaybe<IntFilter>;
  boostPoolId?: InputMaybe<IntFilter>;
  fee?: InputMaybe<BigFloatFilter>;
  feeUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<IntFilter>;
  liquidityProviderId?: InputMaybe<IntFilter>;
};

export type BoostShareMinAggregates = {
  __typename?: 'BoostShareMinAggregates';
  /** Minimum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of boostId across the matching connection */
  boostId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
};

export type BoostShareStddevPopulationAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  boostId?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<BigFloatFilter>;
  fee?: InputMaybe<BigFloatFilter>;
  feeUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
};

export type BoostShareStddevPopulationAggregates = {
  __typename?: 'BoostShareStddevPopulationAggregates';
  /** Population standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of boostId across the matching connection */
  boostId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
};

export type BoostShareStddevSampleAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  boostId?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<BigFloatFilter>;
  fee?: InputMaybe<BigFloatFilter>;
  feeUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
};

export type BoostShareStddevSampleAggregates = {
  __typename?: 'BoostShareStddevSampleAggregates';
  /** Sample standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of boostId across the matching connection */
  boostId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
};

export type BoostShareSumAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  boostId?: InputMaybe<BigIntFilter>;
  boostPoolId?: InputMaybe<BigIntFilter>;
  fee?: InputMaybe<BigFloatFilter>;
  feeUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigIntFilter>;
  liquidityProviderId?: InputMaybe<BigIntFilter>;
};

export type BoostShareSumAggregates = {
  __typename?: 'BoostShareSumAggregates';
  /** Sum of amount across the matching connection */
  amount: Scalars['BigFloat']['output'];
  /** Sum of amountUsd across the matching connection */
  amountUsd: Scalars['BigFloat']['output'];
  /** Sum of boostId across the matching connection */
  boostId: Scalars['BigInt']['output'];
  /** Sum of boostPoolId across the matching connection */
  boostPoolId: Scalars['BigInt']['output'];
  /** Sum of fee across the matching connection */
  fee: Scalars['BigFloat']['output'];
  /** Sum of feeUsd across the matching connection */
  feeUsd: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of liquidityProviderId across the matching connection */
  liquidityProviderId: Scalars['BigInt']['output'];
};

export type BoostShareVariancePopulationAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  boostId?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<BigFloatFilter>;
  fee?: InputMaybe<BigFloatFilter>;
  feeUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
};

export type BoostShareVariancePopulationAggregates = {
  __typename?: 'BoostShareVariancePopulationAggregates';
  /** Population variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of boostId across the matching connection */
  boostId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
};

export type BoostShareVarianceSampleAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  boostId?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<BigFloatFilter>;
  fee?: InputMaybe<BigFloatFilter>;
  feeUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
};

export type BoostShareVarianceSampleAggregates = {
  __typename?: 'BoostShareVarianceSampleAggregates';
  /** Sample variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of boostId across the matching connection */
  boostId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `BoostShare` values. */
export type BoostSharesConnection = {
  __typename?: 'BoostSharesConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<BoostShareAggregates>;
  /** A list of edges which contains the `BoostShare` and cursor to aid in pagination. */
  edges: Array<BoostSharesEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<BoostShareAggregates>>;
  /** A list of `BoostShare` objects. */
  nodes: Array<BoostShare>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `BoostShare` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `BoostShare` values. */
export type BoostSharesConnectionGroupedAggregatesArgs = {
  groupBy: Array<BoostShareGroupBy>;
  having?: InputMaybe<BoostShareHavingInput>;
};

/** A `BoostShare` edge in the connection. */
export type BoostSharesEdge = {
  __typename?: 'BoostSharesEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `BoostShare` at the end of the edge. */
  node: BoostShare;
};

/** Methods to use when ordering `BoostShare`. */
export type BoostSharesOrderBy =
  | 'AMOUNT_ASC'
  | 'AMOUNT_DESC'
  | 'AMOUNT_USD_ASC'
  | 'AMOUNT_USD_DESC'
  | 'BOOST_ID_ASC'
  | 'BOOST_ID_DESC'
  | 'BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_ID_DESC'
  | 'EXECUTED_AT_TIMESTAMP_ASC'
  | 'EXECUTED_AT_TIMESTAMP_DESC'
  | 'FEE_ASC'
  | 'FEE_DESC'
  | 'FEE_USD_ASC'
  | 'FEE_USD_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_ID_DESC'
  | 'LOST_ASC'
  | 'LOST_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC';

export type BoostStddevPopulationAggregateFilter = {
  depositAmount?: InputMaybe<BigFloatFilter>;
  depositAmountUsd?: InputMaybe<BigFloatFilter>;
  depositChannelId?: InputMaybe<BigFloatFilter>;
  executedAtEventId?: InputMaybe<BigFloatFilter>;
  fee?: InputMaybe<BigFloatFilter>;
  feeUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderFeePortion?: InputMaybe<BigFloatFilter>;
  liquidityProviderFeePortionUsd?: InputMaybe<BigFloatFilter>;
  lostAtEventId?: InputMaybe<BigFloatFilter>;
  networkFeePortion?: InputMaybe<BigFloatFilter>;
  networkFeePortionUsd?: InputMaybe<BigFloatFilter>;
  networkFeeSwapRequestId?: InputMaybe<BigFloatFilter>;
  prewitnessedDepositId?: InputMaybe<BigFloatFilter>;
  settledAtEventId?: InputMaybe<BigFloatFilter>;
  swapId?: InputMaybe<BigFloatFilter>;
  swapRequestId?: InputMaybe<BigFloatFilter>;
};

export type BoostStddevPopulationAggregates = {
  __typename?: 'BoostStddevPopulationAggregates';
  /** Population standard deviation of depositAmount across the matching connection */
  depositAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of depositAmountUsd across the matching connection */
  depositAmountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of depositChannelId across the matching connection */
  depositChannelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of executedAtEventId across the matching connection */
  executedAtEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of liquidityProviderFeePortion across the matching connection */
  liquidityProviderFeePortion?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of liquidityProviderFeePortionUsd across the matching connection */
  liquidityProviderFeePortionUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of lostAtEventId across the matching connection */
  lostAtEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of networkFeePortion across the matching connection */
  networkFeePortion?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of networkFeePortionUsd across the matching connection */
  networkFeePortionUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of networkFeeSwapRequestId across the matching connection */
  networkFeeSwapRequestId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of prewitnessedDepositId across the matching connection */
  prewitnessedDepositId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of settledAtEventId across the matching connection */
  settledAtEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of swapId across the matching connection */
  swapId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of swapRequestId across the matching connection */
  swapRequestId?: Maybe<Scalars['BigFloat']['output']>;
};

export type BoostStddevSampleAggregateFilter = {
  depositAmount?: InputMaybe<BigFloatFilter>;
  depositAmountUsd?: InputMaybe<BigFloatFilter>;
  depositChannelId?: InputMaybe<BigFloatFilter>;
  executedAtEventId?: InputMaybe<BigFloatFilter>;
  fee?: InputMaybe<BigFloatFilter>;
  feeUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderFeePortion?: InputMaybe<BigFloatFilter>;
  liquidityProviderFeePortionUsd?: InputMaybe<BigFloatFilter>;
  lostAtEventId?: InputMaybe<BigFloatFilter>;
  networkFeePortion?: InputMaybe<BigFloatFilter>;
  networkFeePortionUsd?: InputMaybe<BigFloatFilter>;
  networkFeeSwapRequestId?: InputMaybe<BigFloatFilter>;
  prewitnessedDepositId?: InputMaybe<BigFloatFilter>;
  settledAtEventId?: InputMaybe<BigFloatFilter>;
  swapId?: InputMaybe<BigFloatFilter>;
  swapRequestId?: InputMaybe<BigFloatFilter>;
};

export type BoostStddevSampleAggregates = {
  __typename?: 'BoostStddevSampleAggregates';
  /** Sample standard deviation of depositAmount across the matching connection */
  depositAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of depositAmountUsd across the matching connection */
  depositAmountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of depositChannelId across the matching connection */
  depositChannelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of executedAtEventId across the matching connection */
  executedAtEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of liquidityProviderFeePortion across the matching connection */
  liquidityProviderFeePortion?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of liquidityProviderFeePortionUsd across the matching connection */
  liquidityProviderFeePortionUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of lostAtEventId across the matching connection */
  lostAtEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of networkFeePortion across the matching connection */
  networkFeePortion?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of networkFeePortionUsd across the matching connection */
  networkFeePortionUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of networkFeeSwapRequestId across the matching connection */
  networkFeeSwapRequestId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of prewitnessedDepositId across the matching connection */
  prewitnessedDepositId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of settledAtEventId across the matching connection */
  settledAtEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of swapId across the matching connection */
  swapId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of swapRequestId across the matching connection */
  swapRequestId?: Maybe<Scalars['BigFloat']['output']>;
};

export type BoostSumAggregateFilter = {
  depositAmount?: InputMaybe<BigFloatFilter>;
  depositAmountUsd?: InputMaybe<BigFloatFilter>;
  depositChannelId?: InputMaybe<BigIntFilter>;
  executedAtEventId?: InputMaybe<BigFloatFilter>;
  fee?: InputMaybe<BigFloatFilter>;
  feeUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigIntFilter>;
  liquidityProviderFeePortion?: InputMaybe<BigFloatFilter>;
  liquidityProviderFeePortionUsd?: InputMaybe<BigFloatFilter>;
  lostAtEventId?: InputMaybe<BigFloatFilter>;
  networkFeePortion?: InputMaybe<BigFloatFilter>;
  networkFeePortionUsd?: InputMaybe<BigFloatFilter>;
  networkFeeSwapRequestId?: InputMaybe<BigFloatFilter>;
  prewitnessedDepositId?: InputMaybe<BigFloatFilter>;
  settledAtEventId?: InputMaybe<BigFloatFilter>;
  swapId?: InputMaybe<BigFloatFilter>;
  swapRequestId?: InputMaybe<BigFloatFilter>;
};

export type BoostSumAggregates = {
  __typename?: 'BoostSumAggregates';
  /** Sum of depositAmount across the matching connection */
  depositAmount: Scalars['BigFloat']['output'];
  /** Sum of depositAmountUsd across the matching connection */
  depositAmountUsd: Scalars['BigFloat']['output'];
  /** Sum of depositChannelId across the matching connection */
  depositChannelId: Scalars['BigInt']['output'];
  /** Sum of executedAtEventId across the matching connection */
  executedAtEventId: Scalars['BigFloat']['output'];
  /** Sum of fee across the matching connection */
  fee: Scalars['BigFloat']['output'];
  /** Sum of feeUsd across the matching connection */
  feeUsd: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of liquidityProviderFeePortion across the matching connection */
  liquidityProviderFeePortion: Scalars['BigFloat']['output'];
  /** Sum of liquidityProviderFeePortionUsd across the matching connection */
  liquidityProviderFeePortionUsd: Scalars['BigFloat']['output'];
  /** Sum of lostAtEventId across the matching connection */
  lostAtEventId: Scalars['BigFloat']['output'];
  /** Sum of networkFeePortion across the matching connection */
  networkFeePortion: Scalars['BigFloat']['output'];
  /** Sum of networkFeePortionUsd across the matching connection */
  networkFeePortionUsd: Scalars['BigFloat']['output'];
  /** Sum of networkFeeSwapRequestId across the matching connection */
  networkFeeSwapRequestId: Scalars['BigFloat']['output'];
  /** Sum of prewitnessedDepositId across the matching connection */
  prewitnessedDepositId: Scalars['BigFloat']['output'];
  /** Sum of settledAtEventId across the matching connection */
  settledAtEventId: Scalars['BigFloat']['output'];
  /** Sum of swapId across the matching connection */
  swapId: Scalars['BigFloat']['output'];
  /** Sum of swapRequestId across the matching connection */
  swapRequestId: Scalars['BigFloat']['output'];
};

/** A filter to be used against many `BoostLiquidityBalanceChange` object types. All fields are combined with a logical ‘and.’ */
export type BoostToManyBoostLiquidityBalanceChangeFilter = {
  /** Aggregates across related `BoostLiquidityBalanceChange` match the filter criteria. */
  aggregates?: InputMaybe<BoostLiquidityBalanceChangeAggregatesFilter>;
  /** Every related `BoostLiquidityBalanceChange` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<BoostLiquidityBalanceChangeFilter>;
  /** No related `BoostLiquidityBalanceChange` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<BoostLiquidityBalanceChangeFilter>;
  /** Some related `BoostLiquidityBalanceChange` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<BoostLiquidityBalanceChangeFilter>;
};

/** A filter to be used against many `BoostPoolBoostShare` object types. All fields are combined with a logical ‘and.’ */
export type BoostToManyBoostPoolBoostShareFilter = {
  /** Aggregates across related `BoostPoolBoostShare` match the filter criteria. */
  aggregates?: InputMaybe<BoostPoolBoostShareAggregatesFilter>;
  /** Every related `BoostPoolBoostShare` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<BoostPoolBoostShareFilter>;
  /** No related `BoostPoolBoostShare` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<BoostPoolBoostShareFilter>;
  /** Some related `BoostPoolBoostShare` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<BoostPoolBoostShareFilter>;
};

/** A filter to be used against many `BoostShare` object types. All fields are combined with a logical ‘and.’ */
export type BoostToManyBoostShareFilter = {
  /** Aggregates across related `BoostShare` match the filter criteria. */
  aggregates?: InputMaybe<BoostShareAggregatesFilter>;
  /** Every related `BoostShare` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<BoostShareFilter>;
  /** No related `BoostShare` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<BoostShareFilter>;
  /** Some related `BoostShare` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<BoostShareFilter>;
};

/** A filter to be used against many `PendingBoostLiquidityWithdrawal` object types. All fields are combined with a logical ‘and.’ */
export type BoostToManyPendingBoostLiquidityWithdrawalFilter = {
  /** Aggregates across related `PendingBoostLiquidityWithdrawal` match the filter criteria. */
  aggregates?: InputMaybe<PendingBoostLiquidityWithdrawalAggregatesFilter>;
  /** Every related `PendingBoostLiquidityWithdrawal` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<PendingBoostLiquidityWithdrawalFilter>;
  /** No related `PendingBoostLiquidityWithdrawal` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<PendingBoostLiquidityWithdrawalFilter>;
  /** Some related `PendingBoostLiquidityWithdrawal` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<PendingBoostLiquidityWithdrawalFilter>;
};

export type BoostVariancePopulationAggregateFilter = {
  depositAmount?: InputMaybe<BigFloatFilter>;
  depositAmountUsd?: InputMaybe<BigFloatFilter>;
  depositChannelId?: InputMaybe<BigFloatFilter>;
  executedAtEventId?: InputMaybe<BigFloatFilter>;
  fee?: InputMaybe<BigFloatFilter>;
  feeUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderFeePortion?: InputMaybe<BigFloatFilter>;
  liquidityProviderFeePortionUsd?: InputMaybe<BigFloatFilter>;
  lostAtEventId?: InputMaybe<BigFloatFilter>;
  networkFeePortion?: InputMaybe<BigFloatFilter>;
  networkFeePortionUsd?: InputMaybe<BigFloatFilter>;
  networkFeeSwapRequestId?: InputMaybe<BigFloatFilter>;
  prewitnessedDepositId?: InputMaybe<BigFloatFilter>;
  settledAtEventId?: InputMaybe<BigFloatFilter>;
  swapId?: InputMaybe<BigFloatFilter>;
  swapRequestId?: InputMaybe<BigFloatFilter>;
};

export type BoostVariancePopulationAggregates = {
  __typename?: 'BoostVariancePopulationAggregates';
  /** Population variance of depositAmount across the matching connection */
  depositAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of depositAmountUsd across the matching connection */
  depositAmountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of depositChannelId across the matching connection */
  depositChannelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of executedAtEventId across the matching connection */
  executedAtEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of liquidityProviderFeePortion across the matching connection */
  liquidityProviderFeePortion?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of liquidityProviderFeePortionUsd across the matching connection */
  liquidityProviderFeePortionUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of lostAtEventId across the matching connection */
  lostAtEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of networkFeePortion across the matching connection */
  networkFeePortion?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of networkFeePortionUsd across the matching connection */
  networkFeePortionUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of networkFeeSwapRequestId across the matching connection */
  networkFeeSwapRequestId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of prewitnessedDepositId across the matching connection */
  prewitnessedDepositId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of settledAtEventId across the matching connection */
  settledAtEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of swapId across the matching connection */
  swapId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of swapRequestId across the matching connection */
  swapRequestId?: Maybe<Scalars['BigFloat']['output']>;
};

export type BoostVarianceSampleAggregateFilter = {
  depositAmount?: InputMaybe<BigFloatFilter>;
  depositAmountUsd?: InputMaybe<BigFloatFilter>;
  depositChannelId?: InputMaybe<BigFloatFilter>;
  executedAtEventId?: InputMaybe<BigFloatFilter>;
  fee?: InputMaybe<BigFloatFilter>;
  feeUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderFeePortion?: InputMaybe<BigFloatFilter>;
  liquidityProviderFeePortionUsd?: InputMaybe<BigFloatFilter>;
  lostAtEventId?: InputMaybe<BigFloatFilter>;
  networkFeePortion?: InputMaybe<BigFloatFilter>;
  networkFeePortionUsd?: InputMaybe<BigFloatFilter>;
  networkFeeSwapRequestId?: InputMaybe<BigFloatFilter>;
  prewitnessedDepositId?: InputMaybe<BigFloatFilter>;
  settledAtEventId?: InputMaybe<BigFloatFilter>;
  swapId?: InputMaybe<BigFloatFilter>;
  swapRequestId?: InputMaybe<BigFloatFilter>;
};

export type BoostVarianceSampleAggregates = {
  __typename?: 'BoostVarianceSampleAggregates';
  /** Sample variance of depositAmount across the matching connection */
  depositAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of depositAmountUsd across the matching connection */
  depositAmountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of depositChannelId across the matching connection */
  depositChannelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of executedAtEventId across the matching connection */
  executedAtEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of liquidityProviderFeePortion across the matching connection */
  liquidityProviderFeePortion?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of liquidityProviderFeePortionUsd across the matching connection */
  liquidityProviderFeePortionUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of lostAtEventId across the matching connection */
  lostAtEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of networkFeePortion across the matching connection */
  networkFeePortion?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of networkFeePortionUsd across the matching connection */
  networkFeePortionUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of networkFeeSwapRequestId across the matching connection */
  networkFeeSwapRequestId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of prewitnessedDepositId across the matching connection */
  prewitnessedDepositId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of settledAtEventId across the matching connection */
  settledAtEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of swapId across the matching connection */
  swapId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of swapRequestId across the matching connection */
  swapRequestId?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `Boost` values. */
export type BoostsConnection = {
  __typename?: 'BoostsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<BoostAggregates>;
  /** A list of edges which contains the `Boost` and cursor to aid in pagination. */
  edges: Array<BoostsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<BoostAggregates>>;
  /** A list of `Boost` objects. */
  nodes: Array<Boost>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Boost` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Boost` values. */
export type BoostsConnectionGroupedAggregatesArgs = {
  groupBy: Array<BoostGroupBy>;
  having?: InputMaybe<BoostHavingInput>;
};

/** A `Boost` edge in the connection. */
export type BoostsEdge = {
  __typename?: 'BoostsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Boost` at the end of the edge. */
  node: Boost;
};

/** Methods to use when ordering `Boost`. */
export type BoostsOrderBy =
  | 'ASSET_ASC'
  | 'ASSET_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_AVERAGE_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_AVERAGE_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_AVERAGE_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_AVERAGE_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_AVERAGE_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_AVERAGE_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_AVERAGE_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_AVERAGE_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_AVERAGE_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_AVERAGE_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_AVERAGE_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_AVERAGE_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_AVERAGE_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_AVERAGE_TYPE_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_COUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_COUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_DISTINCT_COUNT_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_DISTINCT_COUNT_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_DISTINCT_COUNT_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_DISTINCT_COUNT_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_DISTINCT_COUNT_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_DISTINCT_COUNT_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_DISTINCT_COUNT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_DISTINCT_COUNT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_DISTINCT_COUNT_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_DISTINCT_COUNT_TYPE_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_MAX_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_MAX_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_MAX_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_MAX_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_MAX_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_MAX_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_MAX_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_MAX_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_MAX_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_MAX_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_MAX_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_MAX_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_MAX_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_MAX_TYPE_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_MIN_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_MIN_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_MIN_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_MIN_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_MIN_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_MIN_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_MIN_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_MIN_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_MIN_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_MIN_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_MIN_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_MIN_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_MIN_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_MIN_TYPE_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_STDDEV_POPULATION_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_STDDEV_POPULATION_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_STDDEV_POPULATION_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_STDDEV_POPULATION_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_STDDEV_POPULATION_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_STDDEV_POPULATION_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_STDDEV_POPULATION_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_STDDEV_POPULATION_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_STDDEV_POPULATION_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_STDDEV_POPULATION_TYPE_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_STDDEV_SAMPLE_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_STDDEV_SAMPLE_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_STDDEV_SAMPLE_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_STDDEV_SAMPLE_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_STDDEV_SAMPLE_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_STDDEV_SAMPLE_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_STDDEV_SAMPLE_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_STDDEV_SAMPLE_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_STDDEV_SAMPLE_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_STDDEV_SAMPLE_TYPE_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_SUM_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_SUM_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_SUM_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_SUM_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_SUM_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_SUM_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_SUM_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_SUM_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_SUM_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_SUM_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_SUM_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_SUM_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_SUM_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_SUM_TYPE_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_VARIANCE_POPULATION_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_VARIANCE_POPULATION_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_VARIANCE_POPULATION_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_VARIANCE_POPULATION_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_VARIANCE_POPULATION_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_VARIANCE_POPULATION_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_VARIANCE_POPULATION_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_VARIANCE_POPULATION_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_VARIANCE_POPULATION_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_VARIANCE_POPULATION_TYPE_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_VARIANCE_SAMPLE_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_VARIANCE_SAMPLE_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_VARIANCE_SAMPLE_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_VARIANCE_SAMPLE_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_VARIANCE_SAMPLE_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_VARIANCE_SAMPLE_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_VARIANCE_SAMPLE_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_BOOST_ID_VARIANCE_SAMPLE_TYPE_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_AVERAGE_AMOUNT_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_AVERAGE_AMOUNT_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_AVERAGE_AMOUNT_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_AVERAGE_AMOUNT_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_AVERAGE_BOOST_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_AVERAGE_BOOST_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_AVERAGE_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_AVERAGE_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_AVERAGE_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_AVERAGE_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_AVERAGE_FEE_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_AVERAGE_FEE_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_AVERAGE_FEE_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_AVERAGE_FEE_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_AVERAGE_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_AVERAGE_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_AVERAGE_LOST_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_AVERAGE_LOST_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_COUNT_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_COUNT_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_AMOUNT_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_AMOUNT_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_BOOST_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_BOOST_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_FEE_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_FEE_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_FEE_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_FEE_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_LOST_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_LOST_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MAX_AMOUNT_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MAX_AMOUNT_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MAX_AMOUNT_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MAX_AMOUNT_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MAX_BOOST_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MAX_BOOST_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MAX_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MAX_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MAX_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MAX_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MAX_FEE_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MAX_FEE_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MAX_FEE_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MAX_FEE_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MAX_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MAX_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MAX_LOST_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MAX_LOST_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MIN_AMOUNT_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MIN_AMOUNT_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MIN_AMOUNT_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MIN_AMOUNT_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MIN_BOOST_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MIN_BOOST_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MIN_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MIN_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MIN_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MIN_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MIN_FEE_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MIN_FEE_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MIN_FEE_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MIN_FEE_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MIN_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MIN_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MIN_LOST_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_MIN_LOST_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_AMOUNT_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_AMOUNT_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_BOOST_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_BOOST_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_FEE_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_FEE_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_FEE_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_FEE_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_LOST_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_LOST_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_AMOUNT_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_AMOUNT_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_BOOST_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_BOOST_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_FEE_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_FEE_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_FEE_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_FEE_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_LOST_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_LOST_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_SUM_AMOUNT_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_SUM_AMOUNT_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_SUM_AMOUNT_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_SUM_AMOUNT_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_SUM_BOOST_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_SUM_BOOST_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_SUM_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_SUM_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_SUM_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_SUM_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_SUM_FEE_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_SUM_FEE_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_SUM_FEE_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_SUM_FEE_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_SUM_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_SUM_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_SUM_LOST_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_SUM_LOST_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_AMOUNT_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_AMOUNT_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_BOOST_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_BOOST_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_FEE_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_FEE_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_FEE_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_FEE_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_LOST_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_LOST_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_AMOUNT_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_AMOUNT_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_BOOST_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_BOOST_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_BOOST_POOL_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_FEE_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_FEE_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_FEE_USD_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_FEE_USD_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_LOST_ASC'
  | 'BOOST_POOL_BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_LOST_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_AVERAGE_AMOUNT_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_AVERAGE_AMOUNT_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_AVERAGE_AMOUNT_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_AVERAGE_AMOUNT_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_AVERAGE_BOOST_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_AVERAGE_BOOST_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_AVERAGE_BOOST_POOL_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_AVERAGE_BOOST_POOL_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_AVERAGE_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_AVERAGE_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_AVERAGE_FEE_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_AVERAGE_FEE_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_AVERAGE_FEE_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_AVERAGE_FEE_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_AVERAGE_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_AVERAGE_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_AVERAGE_LOST_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_AVERAGE_LOST_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_COUNT_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_COUNT_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_AMOUNT_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_AMOUNT_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_BOOST_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_BOOST_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_BOOST_POOL_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_BOOST_POOL_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_FEE_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_FEE_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_FEE_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_FEE_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_LOST_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_DISTINCT_COUNT_LOST_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_MAX_AMOUNT_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_MAX_AMOUNT_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_MAX_AMOUNT_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_MAX_AMOUNT_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_MAX_BOOST_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_MAX_BOOST_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_MAX_BOOST_POOL_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_MAX_BOOST_POOL_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_MAX_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_MAX_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_MAX_FEE_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_MAX_FEE_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_MAX_FEE_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_MAX_FEE_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_MAX_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_MAX_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_MAX_LOST_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_MAX_LOST_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_MIN_AMOUNT_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_MIN_AMOUNT_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_MIN_AMOUNT_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_MIN_AMOUNT_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_MIN_BOOST_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_MIN_BOOST_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_MIN_BOOST_POOL_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_MIN_BOOST_POOL_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_MIN_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_MIN_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_MIN_FEE_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_MIN_FEE_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_MIN_FEE_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_MIN_FEE_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_MIN_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_MIN_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_MIN_LOST_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_MIN_LOST_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_AMOUNT_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_AMOUNT_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_BOOST_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_BOOST_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_BOOST_POOL_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_BOOST_POOL_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_FEE_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_FEE_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_FEE_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_FEE_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_LOST_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_POPULATION_LOST_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_AMOUNT_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_AMOUNT_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_BOOST_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_BOOST_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_BOOST_POOL_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_BOOST_POOL_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_FEE_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_FEE_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_FEE_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_FEE_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_LOST_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_STDDEV_SAMPLE_LOST_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_SUM_AMOUNT_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_SUM_AMOUNT_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_SUM_AMOUNT_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_SUM_AMOUNT_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_SUM_BOOST_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_SUM_BOOST_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_SUM_BOOST_POOL_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_SUM_BOOST_POOL_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_SUM_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_SUM_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_SUM_FEE_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_SUM_FEE_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_SUM_FEE_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_SUM_FEE_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_SUM_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_SUM_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_SUM_LOST_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_SUM_LOST_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_AMOUNT_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_AMOUNT_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_BOOST_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_BOOST_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_BOOST_POOL_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_BOOST_POOL_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_FEE_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_FEE_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_FEE_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_FEE_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_LOST_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_POPULATION_LOST_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_AMOUNT_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_AMOUNT_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_BOOST_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_BOOST_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_BOOST_POOL_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_BOOST_POOL_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_FEE_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_FEE_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_FEE_USD_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_FEE_USD_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_LOST_ASC'
  | 'BOOST_SHARES_BY_BOOST_ID_VARIANCE_SAMPLE_LOST_DESC'
  | 'CHAIN_ASC'
  | 'CHAIN_DESC'
  | 'DEPOSIT_AMOUNT_ASC'
  | 'DEPOSIT_AMOUNT_DESC'
  | 'DEPOSIT_AMOUNT_USD_ASC'
  | 'DEPOSIT_AMOUNT_USD_DESC'
  | 'DEPOSIT_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNEL_ID_DESC'
  | 'EXECUTED_AT_EVENT_ID_ASC'
  | 'EXECUTED_AT_EVENT_ID_DESC'
  | 'EXECUTED_AT_TIMESTAMP_ASC'
  | 'EXECUTED_AT_TIMESTAMP_DESC'
  | 'FEE_ASC'
  | 'FEE_DESC'
  | 'FEE_USD_ASC'
  | 'FEE_USD_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'LOST_AT_EVENT_ID_ASC'
  | 'LOST_AT_EVENT_ID_DESC'
  | 'LOST_AT_TIMESTAMP_ASC'
  | 'LOST_AT_TIMESTAMP_DESC'
  | 'NATURAL'
  | 'NETWORK_FEE_PORTION_ASC'
  | 'NETWORK_FEE_PORTION_DESC'
  | 'NETWORK_FEE_PORTION_USD_ASC'
  | 'NETWORK_FEE_PORTION_USD_DESC'
  | 'NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_AVERAGE_BOOST_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_AVERAGE_BOOST_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_AVERAGE_FINALIZED_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_AVERAGE_FINALIZED_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_AVERAGE_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_AVERAGE_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_AVERAGE_LOST_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_AVERAGE_LOST_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_AVERAGE_STOPPED_BOOSTING_EVENT_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_AVERAGE_STOPPED_BOOSTING_EVENT_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_COUNT_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_COUNT_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_DISTINCT_COUNT_BOOST_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_DISTINCT_COUNT_BOOST_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_DISTINCT_COUNT_FINALIZED_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_DISTINCT_COUNT_FINALIZED_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_DISTINCT_COUNT_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_DISTINCT_COUNT_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_DISTINCT_COUNT_LOST_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_DISTINCT_COUNT_LOST_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_DISTINCT_COUNT_STOPPED_BOOSTING_EVENT_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_DISTINCT_COUNT_STOPPED_BOOSTING_EVENT_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_MAX_BOOST_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_MAX_BOOST_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_MAX_FINALIZED_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_MAX_FINALIZED_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_MAX_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_MAX_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_MAX_LOST_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_MAX_LOST_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_MAX_STOPPED_BOOSTING_EVENT_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_MAX_STOPPED_BOOSTING_EVENT_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_MIN_BOOST_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_MIN_BOOST_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_MIN_FINALIZED_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_MIN_FINALIZED_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_MIN_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_MIN_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_MIN_LOST_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_MIN_LOST_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_MIN_STOPPED_BOOSTING_EVENT_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_MIN_STOPPED_BOOSTING_EVENT_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_STDDEV_POPULATION_BOOST_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_STDDEV_POPULATION_BOOST_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_STDDEV_POPULATION_FINALIZED_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_STDDEV_POPULATION_FINALIZED_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_STDDEV_POPULATION_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_STDDEV_POPULATION_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_STDDEV_POPULATION_LOST_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_STDDEV_POPULATION_LOST_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_STDDEV_POPULATION_STOPPED_BOOSTING_EVENT_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_STDDEV_POPULATION_STOPPED_BOOSTING_EVENT_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_STDDEV_SAMPLE_BOOST_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_STDDEV_SAMPLE_BOOST_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_STDDEV_SAMPLE_FINALIZED_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_STDDEV_SAMPLE_FINALIZED_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_STDDEV_SAMPLE_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_STDDEV_SAMPLE_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_STDDEV_SAMPLE_LOST_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_STDDEV_SAMPLE_LOST_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_STDDEV_SAMPLE_STOPPED_BOOSTING_EVENT_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_STDDEV_SAMPLE_STOPPED_BOOSTING_EVENT_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_SUM_BOOST_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_SUM_BOOST_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_SUM_FINALIZED_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_SUM_FINALIZED_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_SUM_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_SUM_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_SUM_LOST_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_SUM_LOST_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_SUM_STOPPED_BOOSTING_EVENT_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_SUM_STOPPED_BOOSTING_EVENT_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_VARIANCE_POPULATION_BOOST_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_VARIANCE_POPULATION_BOOST_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_VARIANCE_POPULATION_FINALIZED_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_VARIANCE_POPULATION_FINALIZED_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_VARIANCE_POPULATION_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_VARIANCE_POPULATION_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_VARIANCE_POPULATION_LOST_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_VARIANCE_POPULATION_LOST_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_VARIANCE_POPULATION_STOPPED_BOOSTING_EVENT_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_VARIANCE_POPULATION_STOPPED_BOOSTING_EVENT_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_VARIANCE_SAMPLE_BOOST_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_VARIANCE_SAMPLE_BOOST_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_VARIANCE_SAMPLE_FINALIZED_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_VARIANCE_SAMPLE_FINALIZED_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_VARIANCE_SAMPLE_LOST_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_VARIANCE_SAMPLE_LOST_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_VARIANCE_SAMPLE_STOPPED_BOOSTING_EVENT_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_BOOST_ID_VARIANCE_SAMPLE_STOPPED_BOOSTING_EVENT_ID_DESC'
  | 'PREWITNESSED_DEPOSIT_ID_ASC'
  | 'PREWITNESSED_DEPOSIT_ID_DESC'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'SETTLED_AT_EVENT_ID_ASC'
  | 'SETTLED_AT_EVENT_ID_DESC'
  | 'SETTLED_AT_TIMESTAMP_ASC'
  | 'SETTLED_AT_TIMESTAMP_DESC'
  | 'SWAP_ID_ASC'
  | 'SWAP_ID_DESC'
  | 'SWAP_REQUEST_ID_ASC'
  | 'SWAP_REQUEST_ID_DESC';

export type ChainflipAsset =
  | 'ArbEth'
  | 'ArbUsdc'
  | 'Btc'
  | 'Dot'
  | 'Eth'
  | 'Flip'
  | 'HubDot'
  | 'HubUsdc'
  | 'HubUsdt'
  | 'Sol'
  | 'SolUsdc'
  | 'Usdc'
  | 'Usdt';

/** A filter to be used against ChainflipAsset fields. All fields are combined with a logical ‘and.’ */
export type ChainflipAssetFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<ChainflipAsset>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<ChainflipAsset>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<ChainflipAsset>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<ChainflipAsset>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<ChainflipAsset>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<ChainflipAsset>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<ChainflipAsset>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<ChainflipAsset>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<ChainflipAsset>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<ChainflipAsset>>;
};

export type ChainflipChain =
  | 'Arbitrum'
  | 'Assethub'
  | 'Bitcoin'
  | 'Ethereum'
  | 'Polkadot'
  | 'Solana';

/** A filter to be used against ChainflipChain fields. All fields are combined with a logical ‘and.’ */
export type ChainflipChainFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<ChainflipChain>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<ChainflipChain>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<ChainflipChain>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<ChainflipChain>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<ChainflipChain>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<ChainflipChain>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<ChainflipChain>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<ChainflipChain>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<ChainflipChain>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<ChainflipChain>>;
};

/** A filter to be used against Datetime fields. All fields are combined with a logical ‘and.’ */
export type DatetimeFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<Scalars['Datetime']['input']>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<Scalars['Datetime']['input']>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<Scalars['Datetime']['input']>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<Scalars['Datetime']['input']>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<Scalars['Datetime']['input']>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<Scalars['Datetime']['input']>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<Scalars['Datetime']['input']>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<Scalars['Datetime']['input']>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<Scalars['Datetime']['input']>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<Scalars['Datetime']['input']>>;
};

export type DepositChannel = Node & {
  __typename?: 'DepositChannel';
  /** Reads a single `Account` that is related to this `DepositChannel`. */
  accountByBrokerId?: Maybe<Account>;
  /** Reads a single `Account` that is related to this `DepositChannel`. */
  accountByLiquidityProviderId?: Maybe<Account>;
  address?: Maybe<Scalars['String']['output']>;
  boostFeeBps?: Maybe<Scalars['Int']['output']>;
  /** Reads and enables pagination through a set of `Boost`. */
  boostsByDepositChannelId: BoostsConnection;
  brokerId?: Maybe<Scalars['Int']['output']>;
  chain: ChainflipChain;
  channelId: Scalars['BigInt']['output'];
  closeBrokerChannelEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Reads a single `Event` that is related to this `DepositChannel`. */
  eventByCloseBrokerChannelEventId?: Maybe<Event>;
  /** Reads a single `Event` that is related to this `DepositChannel`. */
  eventByEventId: Event;
  eventId: Scalars['BigInt']['output'];
  id: Scalars['Int']['output'];
  issuedBlockId: Scalars['Int']['output'];
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  type: DepositChannelType;
};


export type DepositChannelBoostsByDepositChannelIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BoostCondition>;
  filter?: InputMaybe<BoostFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BoostsOrderBy>>;
};

export type DepositChannelAggregates = {
  __typename?: 'DepositChannelAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<DepositChannelAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<DepositChannelDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<DepositChannelMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<DepositChannelMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<DepositChannelStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<DepositChannelStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<DepositChannelSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<DepositChannelVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<DepositChannelVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `DepositChannel` object types. */
export type DepositChannelAggregatesFilter = {
  /** Mean average aggregate over matching `DepositChannel` objects. */
  average?: InputMaybe<DepositChannelAverageAggregateFilter>;
  /** Distinct count aggregate over matching `DepositChannel` objects. */
  distinctCount?: InputMaybe<DepositChannelDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `DepositChannel` object to be included within the aggregate. */
  filter?: InputMaybe<DepositChannelFilter>;
  /** Maximum aggregate over matching `DepositChannel` objects. */
  max?: InputMaybe<DepositChannelMaxAggregateFilter>;
  /** Minimum aggregate over matching `DepositChannel` objects. */
  min?: InputMaybe<DepositChannelMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `DepositChannel` objects. */
  stddevPopulation?: InputMaybe<DepositChannelStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `DepositChannel` objects. */
  stddevSample?: InputMaybe<DepositChannelStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `DepositChannel` objects. */
  sum?: InputMaybe<DepositChannelSumAggregateFilter>;
  /** Population variance aggregate over matching `DepositChannel` objects. */
  variancePopulation?: InputMaybe<DepositChannelVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `DepositChannel` objects. */
  varianceSample?: InputMaybe<DepositChannelVarianceSampleAggregateFilter>;
};

export type DepositChannelAverageAggregateFilter = {
  boostFeeBps?: InputMaybe<BigFloatFilter>;
  brokerId?: InputMaybe<BigFloatFilter>;
  channelId?: InputMaybe<BigFloatFilter>;
  closeBrokerChannelEventId?: InputMaybe<BigFloatFilter>;
  eventId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  issuedBlockId?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
};

export type DepositChannelAverageAggregates = {
  __typename?: 'DepositChannelAverageAggregates';
  /** Mean average of boostFeeBps across the matching connection */
  boostFeeBps?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of brokerId across the matching connection */
  brokerId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of channelId across the matching connection */
  channelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of closeBrokerChannelEventId across the matching connection */
  closeBrokerChannelEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of issuedBlockId across the matching connection */
  issuedBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `DepositChannel` object types. All fields are
 * tested for equality and combined with a logical ‘and.’
 */
export type DepositChannelCondition = {
  /** Checks for equality with the object’s `address` field. */
  address?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `boostFeeBps` field. */
  boostFeeBps?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `brokerId` field. */
  brokerId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `chain` field. */
  chain?: InputMaybe<ChainflipChain>;
  /** Checks for equality with the object’s `channelId` field. */
  channelId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `closeBrokerChannelEventId` field. */
  closeBrokerChannelEventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `eventId` field. */
  eventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `issuedBlockId` field. */
  issuedBlockId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `liquidityProviderId` field. */
  liquidityProviderId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `type` field. */
  type?: InputMaybe<DepositChannelType>;
};

export type DepositChannelDistinctCountAggregateFilter = {
  address?: InputMaybe<BigIntFilter>;
  boostFeeBps?: InputMaybe<BigIntFilter>;
  brokerId?: InputMaybe<BigIntFilter>;
  chain?: InputMaybe<BigIntFilter>;
  channelId?: InputMaybe<BigIntFilter>;
  closeBrokerChannelEventId?: InputMaybe<BigIntFilter>;
  eventId?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  issuedBlockId?: InputMaybe<BigIntFilter>;
  liquidityProviderId?: InputMaybe<BigIntFilter>;
  type?: InputMaybe<BigIntFilter>;
};

export type DepositChannelDistinctCountAggregates = {
  __typename?: 'DepositChannelDistinctCountAggregates';
  /** Distinct count of address across the matching connection */
  address?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of boostFeeBps across the matching connection */
  boostFeeBps?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of brokerId across the matching connection */
  brokerId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of chain across the matching connection */
  chain?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of channelId across the matching connection */
  channelId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of closeBrokerChannelEventId across the matching connection */
  closeBrokerChannelEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of issuedBlockId across the matching connection */
  issuedBlockId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of type across the matching connection */
  type?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `DepositChannel` object types. All fields are combined with a logical ‘and.’ */
export type DepositChannelFilter = {
  /** Filter by the object’s `accountByBrokerId` relation. */
  accountByBrokerId?: InputMaybe<AccountFilter>;
  /** A related `accountByBrokerId` exists. */
  accountByBrokerIdExists?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `accountByLiquidityProviderId` relation. */
  accountByLiquidityProviderId?: InputMaybe<AccountFilter>;
  /** A related `accountByLiquidityProviderId` exists. */
  accountByLiquidityProviderIdExists?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `address` field. */
  address?: InputMaybe<StringFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<DepositChannelFilter>>;
  /** Filter by the object’s `boostFeeBps` field. */
  boostFeeBps?: InputMaybe<IntFilter>;
  /** Filter by the object’s `boostsByDepositChannelId` relation. */
  boostsByDepositChannelId?: InputMaybe<DepositChannelToManyBoostFilter>;
  /** Some related `boostsByDepositChannelId` exist. */
  boostsByDepositChannelIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `brokerId` field. */
  brokerId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `chain` field. */
  chain?: InputMaybe<ChainflipChainFilter>;
  /** Filter by the object’s `channelId` field. */
  channelId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `closeBrokerChannelEventId` field. */
  closeBrokerChannelEventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `eventByCloseBrokerChannelEventId` relation. */
  eventByCloseBrokerChannelEventId?: InputMaybe<EventFilter>;
  /** A related `eventByCloseBrokerChannelEventId` exists. */
  eventByCloseBrokerChannelEventIdExists?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `eventByEventId` relation. */
  eventByEventId?: InputMaybe<EventFilter>;
  /** Filter by the object’s `eventId` field. */
  eventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Filter by the object’s `issuedBlockId` field. */
  issuedBlockId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `liquidityProviderId` field. */
  liquidityProviderId?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<DepositChannelFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<DepositChannelFilter>>;
  /** Filter by the object’s `type` field. */
  type?: InputMaybe<DepositChannelTypeFilter>;
};

/** Grouping methods for `DepositChannel` for usage during aggregation. */
export type DepositChannelGroupBy =
  | 'ADDRESS'
  | 'BOOST_FEE_BPS'
  | 'BROKER_ID'
  | 'CHAIN'
  | 'CHANNEL_ID'
  | 'CLOSE_BROKER_CHANNEL_EVENT_ID'
  | 'EVENT_ID'
  | 'ISSUED_BLOCK_ID'
  | 'LIQUIDITY_PROVIDER_ID'
  | 'TYPE';

export type DepositChannelHavingAverageInput = {
  boostFeeBps?: InputMaybe<HavingIntFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  channelId?: InputMaybe<HavingBigintFilter>;
  closeBrokerChannelEventId?: InputMaybe<HavingBigintFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  issuedBlockId?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type DepositChannelHavingDistinctCountInput = {
  boostFeeBps?: InputMaybe<HavingIntFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  channelId?: InputMaybe<HavingBigintFilter>;
  closeBrokerChannelEventId?: InputMaybe<HavingBigintFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  issuedBlockId?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `DepositChannel` aggregates. */
export type DepositChannelHavingInput = {
  AND?: InputMaybe<Array<DepositChannelHavingInput>>;
  OR?: InputMaybe<Array<DepositChannelHavingInput>>;
  average?: InputMaybe<DepositChannelHavingAverageInput>;
  distinctCount?: InputMaybe<DepositChannelHavingDistinctCountInput>;
  max?: InputMaybe<DepositChannelHavingMaxInput>;
  min?: InputMaybe<DepositChannelHavingMinInput>;
  stddevPopulation?: InputMaybe<DepositChannelHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<DepositChannelHavingStddevSampleInput>;
  sum?: InputMaybe<DepositChannelHavingSumInput>;
  variancePopulation?: InputMaybe<DepositChannelHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<DepositChannelHavingVarianceSampleInput>;
};

export type DepositChannelHavingMaxInput = {
  boostFeeBps?: InputMaybe<HavingIntFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  channelId?: InputMaybe<HavingBigintFilter>;
  closeBrokerChannelEventId?: InputMaybe<HavingBigintFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  issuedBlockId?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type DepositChannelHavingMinInput = {
  boostFeeBps?: InputMaybe<HavingIntFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  channelId?: InputMaybe<HavingBigintFilter>;
  closeBrokerChannelEventId?: InputMaybe<HavingBigintFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  issuedBlockId?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type DepositChannelHavingStddevPopulationInput = {
  boostFeeBps?: InputMaybe<HavingIntFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  channelId?: InputMaybe<HavingBigintFilter>;
  closeBrokerChannelEventId?: InputMaybe<HavingBigintFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  issuedBlockId?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type DepositChannelHavingStddevSampleInput = {
  boostFeeBps?: InputMaybe<HavingIntFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  channelId?: InputMaybe<HavingBigintFilter>;
  closeBrokerChannelEventId?: InputMaybe<HavingBigintFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  issuedBlockId?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type DepositChannelHavingSumInput = {
  boostFeeBps?: InputMaybe<HavingIntFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  channelId?: InputMaybe<HavingBigintFilter>;
  closeBrokerChannelEventId?: InputMaybe<HavingBigintFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  issuedBlockId?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type DepositChannelHavingVariancePopulationInput = {
  boostFeeBps?: InputMaybe<HavingIntFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  channelId?: InputMaybe<HavingBigintFilter>;
  closeBrokerChannelEventId?: InputMaybe<HavingBigintFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  issuedBlockId?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type DepositChannelHavingVarianceSampleInput = {
  boostFeeBps?: InputMaybe<HavingIntFilter>;
  brokerId?: InputMaybe<HavingIntFilter>;
  channelId?: InputMaybe<HavingBigintFilter>;
  closeBrokerChannelEventId?: InputMaybe<HavingBigintFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  issuedBlockId?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type DepositChannelMaxAggregateFilter = {
  boostFeeBps?: InputMaybe<IntFilter>;
  brokerId?: InputMaybe<IntFilter>;
  channelId?: InputMaybe<BigIntFilter>;
  closeBrokerChannelEventId?: InputMaybe<BigIntFilter>;
  eventId?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<IntFilter>;
  issuedBlockId?: InputMaybe<IntFilter>;
  liquidityProviderId?: InputMaybe<IntFilter>;
};

export type DepositChannelMaxAggregates = {
  __typename?: 'DepositChannelMaxAggregates';
  /** Maximum of boostFeeBps across the matching connection */
  boostFeeBps?: Maybe<Scalars['Int']['output']>;
  /** Maximum of brokerId across the matching connection */
  brokerId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of channelId across the matching connection */
  channelId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of closeBrokerChannelEventId across the matching connection */
  closeBrokerChannelEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of issuedBlockId across the matching connection */
  issuedBlockId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
};

export type DepositChannelMinAggregateFilter = {
  boostFeeBps?: InputMaybe<IntFilter>;
  brokerId?: InputMaybe<IntFilter>;
  channelId?: InputMaybe<BigIntFilter>;
  closeBrokerChannelEventId?: InputMaybe<BigIntFilter>;
  eventId?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<IntFilter>;
  issuedBlockId?: InputMaybe<IntFilter>;
  liquidityProviderId?: InputMaybe<IntFilter>;
};

export type DepositChannelMinAggregates = {
  __typename?: 'DepositChannelMinAggregates';
  /** Minimum of boostFeeBps across the matching connection */
  boostFeeBps?: Maybe<Scalars['Int']['output']>;
  /** Minimum of brokerId across the matching connection */
  brokerId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of channelId across the matching connection */
  channelId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of closeBrokerChannelEventId across the matching connection */
  closeBrokerChannelEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of issuedBlockId across the matching connection */
  issuedBlockId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
};

export type DepositChannelStddevPopulationAggregateFilter = {
  boostFeeBps?: InputMaybe<BigFloatFilter>;
  brokerId?: InputMaybe<BigFloatFilter>;
  channelId?: InputMaybe<BigFloatFilter>;
  closeBrokerChannelEventId?: InputMaybe<BigFloatFilter>;
  eventId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  issuedBlockId?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
};

export type DepositChannelStddevPopulationAggregates = {
  __typename?: 'DepositChannelStddevPopulationAggregates';
  /** Population standard deviation of boostFeeBps across the matching connection */
  boostFeeBps?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of brokerId across the matching connection */
  brokerId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of channelId across the matching connection */
  channelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of closeBrokerChannelEventId across the matching connection */
  closeBrokerChannelEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of issuedBlockId across the matching connection */
  issuedBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
};

export type DepositChannelStddevSampleAggregateFilter = {
  boostFeeBps?: InputMaybe<BigFloatFilter>;
  brokerId?: InputMaybe<BigFloatFilter>;
  channelId?: InputMaybe<BigFloatFilter>;
  closeBrokerChannelEventId?: InputMaybe<BigFloatFilter>;
  eventId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  issuedBlockId?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
};

export type DepositChannelStddevSampleAggregates = {
  __typename?: 'DepositChannelStddevSampleAggregates';
  /** Sample standard deviation of boostFeeBps across the matching connection */
  boostFeeBps?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of brokerId across the matching connection */
  brokerId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of channelId across the matching connection */
  channelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of closeBrokerChannelEventId across the matching connection */
  closeBrokerChannelEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of issuedBlockId across the matching connection */
  issuedBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
};

export type DepositChannelSumAggregateFilter = {
  boostFeeBps?: InputMaybe<BigIntFilter>;
  brokerId?: InputMaybe<BigIntFilter>;
  channelId?: InputMaybe<BigFloatFilter>;
  closeBrokerChannelEventId?: InputMaybe<BigFloatFilter>;
  eventId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigIntFilter>;
  issuedBlockId?: InputMaybe<BigIntFilter>;
  liquidityProviderId?: InputMaybe<BigIntFilter>;
};

export type DepositChannelSumAggregates = {
  __typename?: 'DepositChannelSumAggregates';
  /** Sum of boostFeeBps across the matching connection */
  boostFeeBps: Scalars['BigInt']['output'];
  /** Sum of brokerId across the matching connection */
  brokerId: Scalars['BigInt']['output'];
  /** Sum of channelId across the matching connection */
  channelId: Scalars['BigFloat']['output'];
  /** Sum of closeBrokerChannelEventId across the matching connection */
  closeBrokerChannelEventId: Scalars['BigFloat']['output'];
  /** Sum of eventId across the matching connection */
  eventId: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of issuedBlockId across the matching connection */
  issuedBlockId: Scalars['BigInt']['output'];
  /** Sum of liquidityProviderId across the matching connection */
  liquidityProviderId: Scalars['BigInt']['output'];
};

/** A filter to be used against many `Boost` object types. All fields are combined with a logical ‘and.’ */
export type DepositChannelToManyBoostFilter = {
  /** Aggregates across related `Boost` match the filter criteria. */
  aggregates?: InputMaybe<BoostAggregatesFilter>;
  /** Every related `Boost` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<BoostFilter>;
  /** No related `Boost` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<BoostFilter>;
  /** Some related `Boost` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<BoostFilter>;
};

export type DepositChannelType =
  | 'BROKER'
  | 'LIQUIDITY'
  | 'SWAP';

/** A filter to be used against DepositChannelType fields. All fields are combined with a logical ‘and.’ */
export type DepositChannelTypeFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<DepositChannelType>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<DepositChannelType>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<DepositChannelType>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<DepositChannelType>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<DepositChannelType>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<DepositChannelType>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<DepositChannelType>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<DepositChannelType>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<DepositChannelType>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<DepositChannelType>>;
};

export type DepositChannelVariancePopulationAggregateFilter = {
  boostFeeBps?: InputMaybe<BigFloatFilter>;
  brokerId?: InputMaybe<BigFloatFilter>;
  channelId?: InputMaybe<BigFloatFilter>;
  closeBrokerChannelEventId?: InputMaybe<BigFloatFilter>;
  eventId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  issuedBlockId?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
};

export type DepositChannelVariancePopulationAggregates = {
  __typename?: 'DepositChannelVariancePopulationAggregates';
  /** Population variance of boostFeeBps across the matching connection */
  boostFeeBps?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of brokerId across the matching connection */
  brokerId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of channelId across the matching connection */
  channelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of closeBrokerChannelEventId across the matching connection */
  closeBrokerChannelEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of issuedBlockId across the matching connection */
  issuedBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
};

export type DepositChannelVarianceSampleAggregateFilter = {
  boostFeeBps?: InputMaybe<BigFloatFilter>;
  brokerId?: InputMaybe<BigFloatFilter>;
  channelId?: InputMaybe<BigFloatFilter>;
  closeBrokerChannelEventId?: InputMaybe<BigFloatFilter>;
  eventId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  issuedBlockId?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
};

export type DepositChannelVarianceSampleAggregates = {
  __typename?: 'DepositChannelVarianceSampleAggregates';
  /** Sample variance of boostFeeBps across the matching connection */
  boostFeeBps?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of brokerId across the matching connection */
  brokerId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of channelId across the matching connection */
  channelId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of closeBrokerChannelEventId across the matching connection */
  closeBrokerChannelEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of issuedBlockId across the matching connection */
  issuedBlockId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `DepositChannel` values. */
export type DepositChannelsConnection = {
  __typename?: 'DepositChannelsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<DepositChannelAggregates>;
  /** A list of edges which contains the `DepositChannel` and cursor to aid in pagination. */
  edges: Array<DepositChannelsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<DepositChannelAggregates>>;
  /** A list of `DepositChannel` objects. */
  nodes: Array<DepositChannel>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `DepositChannel` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `DepositChannel` values. */
export type DepositChannelsConnectionGroupedAggregatesArgs = {
  groupBy: Array<DepositChannelGroupBy>;
  having?: InputMaybe<DepositChannelHavingInput>;
};

/** A `DepositChannel` edge in the connection. */
export type DepositChannelsEdge = {
  __typename?: 'DepositChannelsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `DepositChannel` at the end of the edge. */
  node: DepositChannel;
};

/** Methods to use when ordering `DepositChannel`. */
export type DepositChannelsOrderBy =
  | 'ADDRESS_ASC'
  | 'ADDRESS_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_ASSET_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_ASSET_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_CHAIN_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_CHAIN_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_FEE_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_FEE_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_FEE_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_FEE_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_SWAP_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_SWAP_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_AVERAGE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_COUNT_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_COUNT_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_ASSET_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_ASSET_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_CHAIN_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_CHAIN_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_FEE_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_FEE_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_FEE_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_FEE_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SWAP_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SWAP_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_DISTINCT_COUNT_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_ASSET_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_ASSET_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_CHAIN_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_CHAIN_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_FEE_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_FEE_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_FEE_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_FEE_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_SWAP_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_SWAP_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MAX_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_ASSET_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_ASSET_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_CHAIN_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_CHAIN_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_FEE_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_FEE_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_FEE_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_FEE_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_SWAP_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_SWAP_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_MIN_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_ASSET_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_ASSET_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_CHAIN_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_CHAIN_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_FEE_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_FEE_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_FEE_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_FEE_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SWAP_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SWAP_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_POPULATION_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_ASSET_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_ASSET_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_CHAIN_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_CHAIN_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_FEE_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_FEE_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_FEE_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_FEE_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SWAP_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SWAP_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_STDDEV_SAMPLE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_ASSET_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_ASSET_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_CHAIN_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_CHAIN_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_FEE_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_FEE_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_FEE_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_FEE_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_SWAP_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_SWAP_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_SUM_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_ASSET_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_ASSET_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_CHAIN_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_CHAIN_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_FEE_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_FEE_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_FEE_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_FEE_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SWAP_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SWAP_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_POPULATION_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_ASSET_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_ASSET_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_CHAIN_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_CHAIN_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_FEE_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_FEE_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_FEE_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_FEE_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SWAP_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SWAP_ID_DESC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_DEPOSIT_CHANNEL_ID_VARIANCE_SAMPLE_SWAP_REQUEST_ID_DESC'
  | 'BOOST_FEE_BPS_ASC'
  | 'BOOST_FEE_BPS_DESC'
  | 'BROKER_ID_ASC'
  | 'BROKER_ID_DESC'
  | 'CHAIN_ASC'
  | 'CHAIN_DESC'
  | 'CHANNEL_ID_ASC'
  | 'CHANNEL_ID_DESC'
  | 'CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'EVENT_ID_ASC'
  | 'EVENT_ID_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'ISSUED_BLOCK_ID_ASC'
  | 'ISSUED_BLOCK_ID_DESC'
  | 'LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_ID_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'TYPE_ASC'
  | 'TYPE_DESC';

export type Event = Node & {
  __typename?: 'Event';
  block: Scalars['Int']['output'];
  /** Reads and enables pagination through a set of `BoostLiquidityBalanceChange`. */
  boostLiquidityBalanceChangesByEventId: BoostLiquidityBalanceChangesConnection;
  /** Reads and enables pagination through a set of `Boost`. */
  boostsByExecutedAtEventId: BoostsConnection;
  /** Reads and enables pagination through a set of `Boost`. */
  boostsByLostAtEventId: BoostsConnection;
  /** Reads and enables pagination through a set of `Boost`. */
  boostsBySettledAtEventId: BoostsConnection;
  /** Reads and enables pagination through a set of `DepositChannel`. */
  depositChannelsByCloseBrokerChannelEventId: DepositChannelsConnection;
  /** Reads and enables pagination through a set of `DepositChannel`. */
  depositChannelsByEventId: DepositChannelsConnection;
  id: Scalars['BigInt']['output'];
  indexInBlock: Scalars['Int']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  /** Reads and enables pagination through a set of `PendingBoostLiquidityWithdrawal`. */
  pendingBoostLiquidityWithdrawalsByStoppedBoostingEventId: PendingBoostLiquidityWithdrawalsConnection;
  /** Reads and enables pagination through a set of `PoolOrder`. */
  poolOrdersByOrderCreatedEventId: PoolOrdersConnection;
  /** Reads and enables pagination through a set of `PoolOrder`. */
  poolOrdersByOrderLastUpdatedEventId: PoolOrdersConnection;
  timestamp: Scalars['Datetime']['output'];
  /** Reads and enables pagination through a set of `TradingStrategy`. */
  tradingStrategiesByClosedAtEventId: TradingStrategiesConnection;
  /** Reads and enables pagination through a set of `TradingStrategy`. */
  tradingStrategiesByCreatedAtEventId: TradingStrategiesConnection;
  /** Reads and enables pagination through a set of `TradingStrategyBalanceChangeEvent`. */
  tradingStrategyBalanceChangeEventsByEventId: TradingStrategyBalanceChangeEventsConnection;
};


export type EventBoostLiquidityBalanceChangesByEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BoostLiquidityBalanceChangeCondition>;
  filter?: InputMaybe<BoostLiquidityBalanceChangeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BoostLiquidityBalanceChangesOrderBy>>;
};


export type EventBoostsByExecutedAtEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BoostCondition>;
  filter?: InputMaybe<BoostFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BoostsOrderBy>>;
};


export type EventBoostsByLostAtEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BoostCondition>;
  filter?: InputMaybe<BoostFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BoostsOrderBy>>;
};


export type EventBoostsBySettledAtEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BoostCondition>;
  filter?: InputMaybe<BoostFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BoostsOrderBy>>;
};


export type EventDepositChannelsByCloseBrokerChannelEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<DepositChannelCondition>;
  filter?: InputMaybe<DepositChannelFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DepositChannelsOrderBy>>;
};


export type EventDepositChannelsByEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<DepositChannelCondition>;
  filter?: InputMaybe<DepositChannelFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DepositChannelsOrderBy>>;
};


export type EventPendingBoostLiquidityWithdrawalsByStoppedBoostingEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<PendingBoostLiquidityWithdrawalCondition>;
  filter?: InputMaybe<PendingBoostLiquidityWithdrawalFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PendingBoostLiquidityWithdrawalsOrderBy>>;
};


export type EventPoolOrdersByOrderCreatedEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<PoolOrderCondition>;
  filter?: InputMaybe<PoolOrderFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PoolOrdersOrderBy>>;
};


export type EventPoolOrdersByOrderLastUpdatedEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<PoolOrderCondition>;
  filter?: InputMaybe<PoolOrderFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PoolOrdersOrderBy>>;
};


export type EventTradingStrategiesByClosedAtEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<TradingStrategyCondition>;
  filter?: InputMaybe<TradingStrategyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TradingStrategiesOrderBy>>;
};


export type EventTradingStrategiesByCreatedAtEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<TradingStrategyCondition>;
  filter?: InputMaybe<TradingStrategyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TradingStrategiesOrderBy>>;
};


export type EventTradingStrategyBalanceChangeEventsByEventIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<TradingStrategyBalanceChangeEventCondition>;
  filter?: InputMaybe<TradingStrategyBalanceChangeEventFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TradingStrategyBalanceChangeEventsOrderBy>>;
};

export type EventAggregates = {
  __typename?: 'EventAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<EventAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<EventDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<EventMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<EventMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<EventStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<EventStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<EventSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<EventVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<EventVarianceSampleAggregates>;
};

export type EventAverageAggregates = {
  __typename?: 'EventAverageAggregates';
  /** Mean average of block across the matching connection */
  block?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of indexInBlock across the matching connection */
  indexInBlock?: Maybe<Scalars['BigFloat']['output']>;
};

/** A condition to be used against `Event` object types. All fields are tested for equality and combined with a logical ‘and.’ */
export type EventCondition = {
  /** Checks for equality with the object’s `block` field. */
  block?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `indexInBlock` field. */
  indexInBlock?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `timestamp` field. */
  timestamp?: InputMaybe<Scalars['Datetime']['input']>;
};

export type EventDistinctCountAggregates = {
  __typename?: 'EventDistinctCountAggregates';
  /** Distinct count of block across the matching connection */
  block?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of indexInBlock across the matching connection */
  indexInBlock?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of timestamp across the matching connection */
  timestamp?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `Event` object types. All fields are combined with a logical ‘and.’ */
export type EventFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<EventFilter>>;
  /** Filter by the object’s `block` field. */
  block?: InputMaybe<IntFilter>;
  /** Filter by the object’s `boostLiquidityBalanceChangesByEventId` relation. */
  boostLiquidityBalanceChangesByEventId?: InputMaybe<EventToManyBoostLiquidityBalanceChangeFilter>;
  /** Some related `boostLiquidityBalanceChangesByEventId` exist. */
  boostLiquidityBalanceChangesByEventIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `boostsByExecutedAtEventId` relation. */
  boostsByExecutedAtEventId?: InputMaybe<EventToManyBoostFilter>;
  /** Some related `boostsByExecutedAtEventId` exist. */
  boostsByExecutedAtEventIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `boostsByLostAtEventId` relation. */
  boostsByLostAtEventId?: InputMaybe<EventToManyBoostFilter>;
  /** Some related `boostsByLostAtEventId` exist. */
  boostsByLostAtEventIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `boostsBySettledAtEventId` relation. */
  boostsBySettledAtEventId?: InputMaybe<EventToManyBoostFilter>;
  /** Some related `boostsBySettledAtEventId` exist. */
  boostsBySettledAtEventIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `depositChannelsByCloseBrokerChannelEventId` relation. */
  depositChannelsByCloseBrokerChannelEventId?: InputMaybe<EventToManyDepositChannelFilter>;
  /** Some related `depositChannelsByCloseBrokerChannelEventId` exist. */
  depositChannelsByCloseBrokerChannelEventIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `depositChannelsByEventId` relation. */
  depositChannelsByEventId?: InputMaybe<EventToManyDepositChannelFilter>;
  /** Some related `depositChannelsByEventId` exist. */
  depositChannelsByEventIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `indexInBlock` field. */
  indexInBlock?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<EventFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<EventFilter>>;
  /** Filter by the object’s `pendingBoostLiquidityWithdrawalsByStoppedBoostingEventId` relation. */
  pendingBoostLiquidityWithdrawalsByStoppedBoostingEventId?: InputMaybe<EventToManyPendingBoostLiquidityWithdrawalFilter>;
  /** Some related `pendingBoostLiquidityWithdrawalsByStoppedBoostingEventId` exist. */
  pendingBoostLiquidityWithdrawalsByStoppedBoostingEventIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `poolOrdersByOrderCreatedEventId` relation. */
  poolOrdersByOrderCreatedEventId?: InputMaybe<EventToManyPoolOrderFilter>;
  /** Some related `poolOrdersByOrderCreatedEventId` exist. */
  poolOrdersByOrderCreatedEventIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `poolOrdersByOrderLastUpdatedEventId` relation. */
  poolOrdersByOrderLastUpdatedEventId?: InputMaybe<EventToManyPoolOrderFilter>;
  /** Some related `poolOrdersByOrderLastUpdatedEventId` exist. */
  poolOrdersByOrderLastUpdatedEventIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `timestamp` field. */
  timestamp?: InputMaybe<DatetimeFilter>;
  /** Filter by the object’s `tradingStrategiesByClosedAtEventId` relation. */
  tradingStrategiesByClosedAtEventId?: InputMaybe<EventToManyTradingStrategyFilter>;
  /** Some related `tradingStrategiesByClosedAtEventId` exist. */
  tradingStrategiesByClosedAtEventIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `tradingStrategiesByCreatedAtEventId` relation. */
  tradingStrategiesByCreatedAtEventId?: InputMaybe<EventToManyTradingStrategyFilter>;
  /** Some related `tradingStrategiesByCreatedAtEventId` exist. */
  tradingStrategiesByCreatedAtEventIdExist?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `tradingStrategyBalanceChangeEventsByEventId` relation. */
  tradingStrategyBalanceChangeEventsByEventId?: InputMaybe<EventToManyTradingStrategyBalanceChangeEventFilter>;
  /** Some related `tradingStrategyBalanceChangeEventsByEventId` exist. */
  tradingStrategyBalanceChangeEventsByEventIdExist?: InputMaybe<Scalars['Boolean']['input']>;
};

/** Grouping methods for `Event` for usage during aggregation. */
export type EventGroupBy =
  | 'BLOCK'
  | 'INDEX_IN_BLOCK'
  | 'TIMESTAMP'
  | 'TIMESTAMP_TRUNCATED_TO_DAY'
  | 'TIMESTAMP_TRUNCATED_TO_HOUR';

export type EventHavingAverageInput = {
  block?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  indexInBlock?: InputMaybe<HavingIntFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type EventHavingDistinctCountInput = {
  block?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  indexInBlock?: InputMaybe<HavingIntFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

/** Conditions for `Event` aggregates. */
export type EventHavingInput = {
  AND?: InputMaybe<Array<EventHavingInput>>;
  OR?: InputMaybe<Array<EventHavingInput>>;
  average?: InputMaybe<EventHavingAverageInput>;
  distinctCount?: InputMaybe<EventHavingDistinctCountInput>;
  max?: InputMaybe<EventHavingMaxInput>;
  min?: InputMaybe<EventHavingMinInput>;
  stddevPopulation?: InputMaybe<EventHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<EventHavingStddevSampleInput>;
  sum?: InputMaybe<EventHavingSumInput>;
  variancePopulation?: InputMaybe<EventHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<EventHavingVarianceSampleInput>;
};

export type EventHavingMaxInput = {
  block?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  indexInBlock?: InputMaybe<HavingIntFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type EventHavingMinInput = {
  block?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  indexInBlock?: InputMaybe<HavingIntFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type EventHavingStddevPopulationInput = {
  block?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  indexInBlock?: InputMaybe<HavingIntFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type EventHavingStddevSampleInput = {
  block?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  indexInBlock?: InputMaybe<HavingIntFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type EventHavingSumInput = {
  block?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  indexInBlock?: InputMaybe<HavingIntFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type EventHavingVariancePopulationInput = {
  block?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  indexInBlock?: InputMaybe<HavingIntFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type EventHavingVarianceSampleInput = {
  block?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  indexInBlock?: InputMaybe<HavingIntFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type EventMaxAggregates = {
  __typename?: 'EventMaxAggregates';
  /** Maximum of block across the matching connection */
  block?: Maybe<Scalars['Int']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of indexInBlock across the matching connection */
  indexInBlock?: Maybe<Scalars['Int']['output']>;
};

export type EventMinAggregates = {
  __typename?: 'EventMinAggregates';
  /** Minimum of block across the matching connection */
  block?: Maybe<Scalars['Int']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of indexInBlock across the matching connection */
  indexInBlock?: Maybe<Scalars['Int']['output']>;
};

export type EventStddevPopulationAggregates = {
  __typename?: 'EventStddevPopulationAggregates';
  /** Population standard deviation of block across the matching connection */
  block?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of indexInBlock across the matching connection */
  indexInBlock?: Maybe<Scalars['BigFloat']['output']>;
};

export type EventStddevSampleAggregates = {
  __typename?: 'EventStddevSampleAggregates';
  /** Sample standard deviation of block across the matching connection */
  block?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of indexInBlock across the matching connection */
  indexInBlock?: Maybe<Scalars['BigFloat']['output']>;
};

export type EventSumAggregates = {
  __typename?: 'EventSumAggregates';
  /** Sum of block across the matching connection */
  block: Scalars['BigInt']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigFloat']['output'];
  /** Sum of indexInBlock across the matching connection */
  indexInBlock: Scalars['BigInt']['output'];
};

/** A filter to be used against many `Boost` object types. All fields are combined with a logical ‘and.’ */
export type EventToManyBoostFilter = {
  /** Aggregates across related `Boost` match the filter criteria. */
  aggregates?: InputMaybe<BoostAggregatesFilter>;
  /** Every related `Boost` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<BoostFilter>;
  /** No related `Boost` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<BoostFilter>;
  /** Some related `Boost` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<BoostFilter>;
};

/** A filter to be used against many `BoostLiquidityBalanceChange` object types. All fields are combined with a logical ‘and.’ */
export type EventToManyBoostLiquidityBalanceChangeFilter = {
  /** Aggregates across related `BoostLiquidityBalanceChange` match the filter criteria. */
  aggregates?: InputMaybe<BoostLiquidityBalanceChangeAggregatesFilter>;
  /** Every related `BoostLiquidityBalanceChange` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<BoostLiquidityBalanceChangeFilter>;
  /** No related `BoostLiquidityBalanceChange` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<BoostLiquidityBalanceChangeFilter>;
  /** Some related `BoostLiquidityBalanceChange` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<BoostLiquidityBalanceChangeFilter>;
};

/** A filter to be used against many `DepositChannel` object types. All fields are combined with a logical ‘and.’ */
export type EventToManyDepositChannelFilter = {
  /** Aggregates across related `DepositChannel` match the filter criteria. */
  aggregates?: InputMaybe<DepositChannelAggregatesFilter>;
  /** Every related `DepositChannel` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<DepositChannelFilter>;
  /** No related `DepositChannel` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<DepositChannelFilter>;
  /** Some related `DepositChannel` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<DepositChannelFilter>;
};

/** A filter to be used against many `PendingBoostLiquidityWithdrawal` object types. All fields are combined with a logical ‘and.’ */
export type EventToManyPendingBoostLiquidityWithdrawalFilter = {
  /** Aggregates across related `PendingBoostLiquidityWithdrawal` match the filter criteria. */
  aggregates?: InputMaybe<PendingBoostLiquidityWithdrawalAggregatesFilter>;
  /** Every related `PendingBoostLiquidityWithdrawal` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<PendingBoostLiquidityWithdrawalFilter>;
  /** No related `PendingBoostLiquidityWithdrawal` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<PendingBoostLiquidityWithdrawalFilter>;
  /** Some related `PendingBoostLiquidityWithdrawal` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<PendingBoostLiquidityWithdrawalFilter>;
};

/** A filter to be used against many `PoolOrder` object types. All fields are combined with a logical ‘and.’ */
export type EventToManyPoolOrderFilter = {
  /** Aggregates across related `PoolOrder` match the filter criteria. */
  aggregates?: InputMaybe<PoolOrderAggregatesFilter>;
  /** Every related `PoolOrder` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<PoolOrderFilter>;
  /** No related `PoolOrder` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<PoolOrderFilter>;
  /** Some related `PoolOrder` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<PoolOrderFilter>;
};

/** A filter to be used against many `TradingStrategyBalanceChangeEvent` object types. All fields are combined with a logical ‘and.’ */
export type EventToManyTradingStrategyBalanceChangeEventFilter = {
  /** Aggregates across related `TradingStrategyBalanceChangeEvent` match the filter criteria. */
  aggregates?: InputMaybe<TradingStrategyBalanceChangeEventAggregatesFilter>;
  /** Every related `TradingStrategyBalanceChangeEvent` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<TradingStrategyBalanceChangeEventFilter>;
  /** No related `TradingStrategyBalanceChangeEvent` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<TradingStrategyBalanceChangeEventFilter>;
  /** Some related `TradingStrategyBalanceChangeEvent` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<TradingStrategyBalanceChangeEventFilter>;
};

/** A filter to be used against many `TradingStrategy` object types. All fields are combined with a logical ‘and.’ */
export type EventToManyTradingStrategyFilter = {
  /** Aggregates across related `TradingStrategy` match the filter criteria. */
  aggregates?: InputMaybe<TradingStrategyAggregatesFilter>;
  /** Every related `TradingStrategy` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<TradingStrategyFilter>;
  /** No related `TradingStrategy` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<TradingStrategyFilter>;
  /** Some related `TradingStrategy` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<TradingStrategyFilter>;
};

export type EventVariancePopulationAggregates = {
  __typename?: 'EventVariancePopulationAggregates';
  /** Population variance of block across the matching connection */
  block?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of indexInBlock across the matching connection */
  indexInBlock?: Maybe<Scalars['BigFloat']['output']>;
};

export type EventVarianceSampleAggregates = {
  __typename?: 'EventVarianceSampleAggregates';
  /** Sample variance of block across the matching connection */
  block?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of indexInBlock across the matching connection */
  indexInBlock?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `Event` values. */
export type EventsConnection = {
  __typename?: 'EventsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<EventAggregates>;
  /** A list of edges which contains the `Event` and cursor to aid in pagination. */
  edges: Array<EventsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<EventAggregates>>;
  /** A list of `Event` objects. */
  nodes: Array<Event>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `Event` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `Event` values. */
export type EventsConnectionGroupedAggregatesArgs = {
  groupBy: Array<EventGroupBy>;
  having?: InputMaybe<EventHavingInput>;
};

/** A `Event` edge in the connection. */
export type EventsEdge = {
  __typename?: 'EventsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `Event` at the end of the edge. */
  node: Event;
};

/** Methods to use when ordering `Event`. */
export type EventsOrderBy =
  | 'BLOCK_ASC'
  | 'BLOCK_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_ASSET_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_ASSET_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_CHAIN_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_CHAIN_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_FEE_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_FEE_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_FEE_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_FEE_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_SWAP_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_SWAP_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_AVERAGE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_COUNT_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_COUNT_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_ASSET_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_ASSET_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_CHAIN_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_CHAIN_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_FEE_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_FEE_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_FEE_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_FEE_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_SWAP_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_SWAP_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_DISTINCT_COUNT_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_ASSET_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_ASSET_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_CHAIN_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_CHAIN_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_FEE_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_FEE_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_FEE_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_FEE_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_SWAP_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_SWAP_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MAX_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_ASSET_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_ASSET_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_CHAIN_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_CHAIN_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_FEE_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_FEE_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_FEE_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_FEE_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_SWAP_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_SWAP_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_MIN_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_ASSET_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_ASSET_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_CHAIN_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_CHAIN_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_FEE_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_FEE_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_FEE_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_FEE_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_SWAP_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_SWAP_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_POPULATION_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_ASSET_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_ASSET_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_CHAIN_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_CHAIN_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_FEE_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_FEE_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_FEE_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_FEE_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_SWAP_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_SWAP_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_STDDEV_SAMPLE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_ASSET_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_ASSET_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_CHAIN_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_CHAIN_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_FEE_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_FEE_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_FEE_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_FEE_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_SWAP_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_SWAP_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_SUM_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_ASSET_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_ASSET_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_CHAIN_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_CHAIN_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_FEE_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_FEE_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_FEE_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_FEE_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_SWAP_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_SWAP_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_POPULATION_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_ASSET_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_ASSET_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_CHAIN_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_CHAIN_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_FEE_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_FEE_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_FEE_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_FEE_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_SWAP_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_SWAP_ID_DESC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_EXECUTED_AT_EVENT_ID_VARIANCE_SAMPLE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_ASSET_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_ASSET_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_CHAIN_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_CHAIN_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_FEE_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_FEE_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_FEE_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_FEE_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_SWAP_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_SWAP_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_AVERAGE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_COUNT_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_COUNT_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_ASSET_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_ASSET_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_CHAIN_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_CHAIN_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_FEE_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_FEE_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_FEE_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_FEE_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_SWAP_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_SWAP_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_DISTINCT_COUNT_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_ASSET_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_ASSET_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_CHAIN_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_CHAIN_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_FEE_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_FEE_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_FEE_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_FEE_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_SWAP_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_SWAP_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MAX_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_ASSET_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_ASSET_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_CHAIN_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_CHAIN_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_FEE_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_FEE_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_FEE_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_FEE_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_SWAP_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_SWAP_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_MIN_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_ASSET_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_ASSET_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_CHAIN_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_CHAIN_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_FEE_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_FEE_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_FEE_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_FEE_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_SWAP_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_SWAP_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_POPULATION_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_ASSET_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_ASSET_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_CHAIN_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_CHAIN_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_FEE_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_FEE_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_FEE_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_FEE_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_SWAP_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_SWAP_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_STDDEV_SAMPLE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_ASSET_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_ASSET_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_CHAIN_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_CHAIN_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_FEE_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_FEE_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_FEE_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_FEE_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_SWAP_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_SWAP_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_SUM_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_ASSET_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_ASSET_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_CHAIN_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_CHAIN_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_FEE_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_FEE_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_FEE_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_FEE_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_SWAP_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_SWAP_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_POPULATION_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_ASSET_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_ASSET_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_CHAIN_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_CHAIN_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_FEE_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_FEE_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_FEE_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_FEE_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_SWAP_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_SWAP_ID_DESC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_LOST_AT_EVENT_ID_VARIANCE_SAMPLE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_ASSET_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_ASSET_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_CHAIN_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_CHAIN_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_FEE_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_FEE_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_FEE_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_FEE_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_SWAP_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_SWAP_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_AVERAGE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_COUNT_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_COUNT_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_ASSET_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_ASSET_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_CHAIN_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_CHAIN_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_FEE_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_FEE_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_FEE_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_FEE_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_SWAP_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_SWAP_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_DISTINCT_COUNT_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_ASSET_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_ASSET_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_CHAIN_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_CHAIN_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_FEE_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_FEE_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_FEE_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_FEE_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_SWAP_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_SWAP_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MAX_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_ASSET_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_ASSET_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_CHAIN_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_CHAIN_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_FEE_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_FEE_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_FEE_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_FEE_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_SWAP_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_SWAP_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_MIN_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_ASSET_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_ASSET_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_CHAIN_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_CHAIN_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_FEE_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_FEE_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_FEE_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_FEE_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_SWAP_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_SWAP_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_POPULATION_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_ASSET_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_ASSET_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_CHAIN_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_CHAIN_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_FEE_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_FEE_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_FEE_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_FEE_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_SWAP_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_SWAP_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_STDDEV_SAMPLE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_ASSET_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_ASSET_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_CHAIN_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_CHAIN_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_FEE_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_FEE_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_FEE_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_FEE_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_SWAP_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_SWAP_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_SUM_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_ASSET_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_ASSET_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_CHAIN_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_CHAIN_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_FEE_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_FEE_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_FEE_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_FEE_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_SWAP_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_SWAP_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_POPULATION_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_ASSET_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_ASSET_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_CHAIN_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_CHAIN_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_AMOUNT_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_CHANNEL_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_DEPOSIT_CHANNEL_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_EXECUTED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_EXECUTED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_EXECUTED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_EXECUTED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_FEE_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_FEE_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_FEE_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_FEE_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_FEE_PORTION_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_FEE_PORTION_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_LOST_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_LOST_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_LOST_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_LOST_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_NETWORK_FEE_PORTION_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_NETWORK_FEE_PORTION_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_NETWORK_FEE_PORTION_USD_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_NETWORK_FEE_PORTION_USD_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_NETWORK_FEE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_NETWORK_FEE_SWAP_REQUEST_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_PREWITNESSED_DEPOSIT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_PREWITNESSED_DEPOSIT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_SETTLED_AT_EVENT_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_SETTLED_AT_EVENT_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_SETTLED_AT_TIMESTAMP_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_SETTLED_AT_TIMESTAMP_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_SWAP_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_SWAP_ID_DESC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_SWAP_REQUEST_ID_ASC'
  | 'BOOSTS_BY_SETTLED_AT_EVENT_ID_VARIANCE_SAMPLE_SWAP_REQUEST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_AVERAGE_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_AVERAGE_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_AVERAGE_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_AVERAGE_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_AVERAGE_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_AVERAGE_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_AVERAGE_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_AVERAGE_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_AVERAGE_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_AVERAGE_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_AVERAGE_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_AVERAGE_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_AVERAGE_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_AVERAGE_TYPE_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_COUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_COUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_DISTINCT_COUNT_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_DISTINCT_COUNT_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_DISTINCT_COUNT_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_DISTINCT_COUNT_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_DISTINCT_COUNT_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_DISTINCT_COUNT_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_DISTINCT_COUNT_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_DISTINCT_COUNT_TYPE_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_MAX_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_MAX_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_MAX_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_MAX_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_MAX_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_MAX_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_MAX_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_MAX_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_MAX_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_MAX_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_MAX_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_MAX_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_MAX_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_MAX_TYPE_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_MIN_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_MIN_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_MIN_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_MIN_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_MIN_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_MIN_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_MIN_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_MIN_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_MIN_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_MIN_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_MIN_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_MIN_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_MIN_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_MIN_TYPE_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_STDDEV_POPULATION_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_STDDEV_POPULATION_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_STDDEV_POPULATION_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_STDDEV_POPULATION_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_STDDEV_POPULATION_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_STDDEV_POPULATION_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_STDDEV_POPULATION_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_STDDEV_POPULATION_TYPE_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_STDDEV_SAMPLE_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_STDDEV_SAMPLE_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_STDDEV_SAMPLE_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_STDDEV_SAMPLE_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_STDDEV_SAMPLE_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_STDDEV_SAMPLE_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_STDDEV_SAMPLE_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_STDDEV_SAMPLE_TYPE_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_SUM_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_SUM_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_SUM_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_SUM_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_SUM_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_SUM_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_SUM_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_SUM_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_SUM_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_SUM_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_SUM_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_SUM_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_SUM_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_SUM_TYPE_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_VARIANCE_POPULATION_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_VARIANCE_POPULATION_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_VARIANCE_POPULATION_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_VARIANCE_POPULATION_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_VARIANCE_POPULATION_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_VARIANCE_POPULATION_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_VARIANCE_POPULATION_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_VARIANCE_POPULATION_TYPE_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_VARIANCE_SAMPLE_AMOUNT_USD_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_VARIANCE_SAMPLE_AMOUNT_USD_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_VARIANCE_SAMPLE_BOOST_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_VARIANCE_SAMPLE_BOOST_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_VARIANCE_SAMPLE_BOOST_POOL_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_VARIANCE_SAMPLE_BOOST_POOL_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_VARIANCE_SAMPLE_TYPE_ASC'
  | 'BOOST_LIQUIDITY_BALANCE_CHANGES_BY_EVENT_ID_VARIANCE_SAMPLE_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_AVERAGE_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_AVERAGE_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_AVERAGE_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_AVERAGE_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_AVERAGE_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_AVERAGE_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_AVERAGE_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_AVERAGE_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_AVERAGE_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_AVERAGE_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_AVERAGE_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_AVERAGE_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_AVERAGE_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_AVERAGE_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_AVERAGE_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_AVERAGE_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_AVERAGE_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_AVERAGE_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_AVERAGE_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_AVERAGE_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_COUNT_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_COUNT_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_DISTINCT_COUNT_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_DISTINCT_COUNT_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_DISTINCT_COUNT_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_DISTINCT_COUNT_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_DISTINCT_COUNT_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_DISTINCT_COUNT_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_DISTINCT_COUNT_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_DISTINCT_COUNT_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_DISTINCT_COUNT_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_DISTINCT_COUNT_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_DISTINCT_COUNT_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_DISTINCT_COUNT_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_DISTINCT_COUNT_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_DISTINCT_COUNT_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_DISTINCT_COUNT_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_DISTINCT_COUNT_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MAX_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MAX_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MAX_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MAX_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MAX_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MAX_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MAX_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MAX_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MAX_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MAX_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MAX_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MAX_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MAX_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MAX_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MAX_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MAX_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MAX_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MAX_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MAX_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MAX_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MIN_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MIN_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MIN_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MIN_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MIN_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MIN_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MIN_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MIN_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MIN_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MIN_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MIN_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MIN_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MIN_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MIN_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MIN_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MIN_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MIN_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MIN_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MIN_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_MIN_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_POPULATION_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_POPULATION_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_POPULATION_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_POPULATION_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_POPULATION_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_POPULATION_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_POPULATION_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_POPULATION_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_POPULATION_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_POPULATION_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_POPULATION_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_POPULATION_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_POPULATION_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_POPULATION_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_POPULATION_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_POPULATION_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_SAMPLE_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_SAMPLE_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_SAMPLE_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_SAMPLE_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_SAMPLE_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_SAMPLE_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_SAMPLE_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_SAMPLE_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_SAMPLE_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_SAMPLE_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_SAMPLE_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_SAMPLE_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_SAMPLE_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_SAMPLE_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_SAMPLE_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_STDDEV_SAMPLE_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_SUM_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_SUM_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_SUM_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_SUM_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_SUM_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_SUM_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_SUM_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_SUM_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_SUM_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_SUM_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_SUM_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_SUM_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_SUM_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_SUM_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_SUM_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_SUM_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_SUM_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_SUM_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_SUM_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_SUM_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_POPULATION_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_POPULATION_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_POPULATION_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_POPULATION_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_POPULATION_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_POPULATION_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_POPULATION_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_POPULATION_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_POPULATION_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_POPULATION_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_POPULATION_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_POPULATION_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_POPULATION_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_POPULATION_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_POPULATION_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_POPULATION_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_SAMPLE_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_SAMPLE_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_SAMPLE_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_SAMPLE_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_SAMPLE_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_SAMPLE_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_SAMPLE_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_SAMPLE_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_SAMPLE_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_SAMPLE_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_SAMPLE_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_SAMPLE_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_SAMPLE_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_SAMPLE_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_SAMPLE_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_CLOSE_BROKER_CHANNEL_EVENT_ID_VARIANCE_SAMPLE_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_AVERAGE_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_AVERAGE_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_AVERAGE_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_AVERAGE_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_AVERAGE_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_AVERAGE_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_AVERAGE_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_AVERAGE_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_AVERAGE_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_AVERAGE_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_AVERAGE_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_AVERAGE_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_AVERAGE_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_AVERAGE_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_AVERAGE_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_AVERAGE_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_AVERAGE_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_AVERAGE_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_AVERAGE_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_AVERAGE_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_COUNT_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_COUNT_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_DISTINCT_COUNT_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_DISTINCT_COUNT_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_DISTINCT_COUNT_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_DISTINCT_COUNT_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_DISTINCT_COUNT_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_DISTINCT_COUNT_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_DISTINCT_COUNT_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_DISTINCT_COUNT_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_DISTINCT_COUNT_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_DISTINCT_COUNT_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_DISTINCT_COUNT_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_DISTINCT_COUNT_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_DISTINCT_COUNT_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_DISTINCT_COUNT_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_DISTINCT_COUNT_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_DISTINCT_COUNT_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MAX_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MAX_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MAX_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MAX_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MAX_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MAX_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MAX_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MAX_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MAX_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MAX_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MAX_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MAX_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MAX_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MAX_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MAX_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MAX_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MAX_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MAX_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MAX_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MAX_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MIN_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MIN_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MIN_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MIN_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MIN_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MIN_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MIN_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MIN_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MIN_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MIN_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MIN_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MIN_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MIN_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MIN_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MIN_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MIN_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MIN_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MIN_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MIN_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_MIN_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_POPULATION_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_POPULATION_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_POPULATION_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_POPULATION_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_POPULATION_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_POPULATION_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_POPULATION_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_POPULATION_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_POPULATION_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_POPULATION_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_POPULATION_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_POPULATION_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_POPULATION_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_POPULATION_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_POPULATION_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_POPULATION_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_SAMPLE_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_SAMPLE_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_SAMPLE_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_SAMPLE_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_SAMPLE_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_SAMPLE_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_SAMPLE_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_SAMPLE_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_SAMPLE_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_SAMPLE_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_SAMPLE_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_SAMPLE_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_SAMPLE_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_SAMPLE_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_SAMPLE_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_STDDEV_SAMPLE_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_SUM_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_SUM_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_SUM_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_SUM_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_SUM_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_SUM_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_SUM_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_SUM_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_SUM_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_SUM_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_SUM_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_SUM_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_SUM_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_SUM_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_SUM_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_SUM_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_SUM_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_SUM_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_SUM_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_SUM_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_POPULATION_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_POPULATION_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_POPULATION_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_POPULATION_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_POPULATION_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_POPULATION_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_POPULATION_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_POPULATION_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_POPULATION_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_POPULATION_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_POPULATION_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_POPULATION_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_POPULATION_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_POPULATION_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_POPULATION_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_POPULATION_TYPE_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_SAMPLE_ADDRESS_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_SAMPLE_ADDRESS_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_SAMPLE_BOOST_FEE_BPS_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_SAMPLE_BOOST_FEE_BPS_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_SAMPLE_BROKER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_SAMPLE_BROKER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_SAMPLE_CHAIN_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_SAMPLE_CHAIN_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_SAMPLE_CHANNEL_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_SAMPLE_CHANNEL_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_SAMPLE_CLOSE_BROKER_CHANNEL_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_SAMPLE_CLOSE_BROKER_CHANNEL_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_SAMPLE_ISSUED_BLOCK_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_SAMPLE_ISSUED_BLOCK_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_SAMPLE_TYPE_ASC'
  | 'DEPOSIT_CHANNELS_BY_EVENT_ID_VARIANCE_SAMPLE_TYPE_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'INDEX_IN_BLOCK_ASC'
  | 'INDEX_IN_BLOCK_DESC'
  | 'NATURAL'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_AVERAGE_BOOST_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_AVERAGE_BOOST_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_AVERAGE_FINALIZED_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_AVERAGE_FINALIZED_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_AVERAGE_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_AVERAGE_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_AVERAGE_LOST_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_AVERAGE_LOST_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_AVERAGE_STOPPED_BOOSTING_EVENT_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_AVERAGE_STOPPED_BOOSTING_EVENT_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_COUNT_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_COUNT_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_DISTINCT_COUNT_BOOST_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_DISTINCT_COUNT_BOOST_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_DISTINCT_COUNT_FINALIZED_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_DISTINCT_COUNT_FINALIZED_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_DISTINCT_COUNT_LOST_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_DISTINCT_COUNT_LOST_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_DISTINCT_COUNT_STOPPED_BOOSTING_EVENT_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_DISTINCT_COUNT_STOPPED_BOOSTING_EVENT_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_MAX_BOOST_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_MAX_BOOST_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_MAX_FINALIZED_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_MAX_FINALIZED_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_MAX_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_MAX_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_MAX_LOST_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_MAX_LOST_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_MAX_STOPPED_BOOSTING_EVENT_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_MAX_STOPPED_BOOSTING_EVENT_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_MIN_BOOST_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_MIN_BOOST_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_MIN_FINALIZED_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_MIN_FINALIZED_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_MIN_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_MIN_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_MIN_LOST_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_MIN_LOST_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_MIN_STOPPED_BOOSTING_EVENT_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_MIN_STOPPED_BOOSTING_EVENT_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_STDDEV_POPULATION_BOOST_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_STDDEV_POPULATION_BOOST_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_STDDEV_POPULATION_FINALIZED_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_STDDEV_POPULATION_FINALIZED_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_STDDEV_POPULATION_LOST_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_STDDEV_POPULATION_LOST_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_STDDEV_POPULATION_STOPPED_BOOSTING_EVENT_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_STDDEV_POPULATION_STOPPED_BOOSTING_EVENT_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_STDDEV_SAMPLE_BOOST_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_STDDEV_SAMPLE_BOOST_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_STDDEV_SAMPLE_FINALIZED_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_STDDEV_SAMPLE_FINALIZED_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_STDDEV_SAMPLE_LOST_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_STDDEV_SAMPLE_LOST_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_STDDEV_SAMPLE_STOPPED_BOOSTING_EVENT_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_STDDEV_SAMPLE_STOPPED_BOOSTING_EVENT_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_SUM_BOOST_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_SUM_BOOST_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_SUM_FINALIZED_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_SUM_FINALIZED_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_SUM_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_SUM_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_SUM_LOST_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_SUM_LOST_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_SUM_STOPPED_BOOSTING_EVENT_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_SUM_STOPPED_BOOSTING_EVENT_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_VARIANCE_POPULATION_BOOST_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_VARIANCE_POPULATION_BOOST_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_VARIANCE_POPULATION_FINALIZED_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_VARIANCE_POPULATION_FINALIZED_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_VARIANCE_POPULATION_LOST_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_VARIANCE_POPULATION_LOST_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_VARIANCE_POPULATION_STOPPED_BOOSTING_EVENT_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_VARIANCE_POPULATION_STOPPED_BOOSTING_EVENT_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_VARIANCE_SAMPLE_BOOST_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_VARIANCE_SAMPLE_BOOST_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_VARIANCE_SAMPLE_FINALIZED_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_VARIANCE_SAMPLE_FINALIZED_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_VARIANCE_SAMPLE_LOST_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_VARIANCE_SAMPLE_LOST_DESC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_VARIANCE_SAMPLE_STOPPED_BOOSTING_EVENT_ID_ASC'
  | 'PENDING_BOOST_LIQUIDITY_WITHDRAWALS_BY_STOPPED_BOOSTING_EVENT_ID_VARIANCE_SAMPLE_STOPPED_BOOSTING_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_OPEN_POOL_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_OPEN_POOL_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_ORDER_CREATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_ORDER_CREATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_ORDER_LAST_UPDATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_ORDER_LAST_UPDATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_PROCESSOR_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_PROCESSOR_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_AVERAGE_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_COUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_COUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_OPEN_POOL_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_OPEN_POOL_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_ORDER_CREATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_ORDER_CREATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_ORDER_LAST_UPDATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_ORDER_LAST_UPDATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_PROCESSOR_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_PROCESSOR_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_DISTINCT_COUNT_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_OPEN_POOL_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_OPEN_POOL_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_ORDER_CREATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_ORDER_CREATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_ORDER_LAST_UPDATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_ORDER_LAST_UPDATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_PROCESSOR_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_PROCESSOR_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MAX_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_OPEN_POOL_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_OPEN_POOL_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_ORDER_CREATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_ORDER_CREATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_ORDER_LAST_UPDATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_ORDER_LAST_UPDATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_PROCESSOR_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_PROCESSOR_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_MIN_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_OPEN_POOL_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_OPEN_POOL_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_ORDER_CREATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_ORDER_CREATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_ORDER_LAST_UPDATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_ORDER_LAST_UPDATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_PROCESSOR_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_PROCESSOR_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_POPULATION_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_OPEN_POOL_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_OPEN_POOL_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_ORDER_CREATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_ORDER_CREATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_ORDER_LAST_UPDATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_ORDER_LAST_UPDATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_PROCESSOR_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_PROCESSOR_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_STDDEV_SAMPLE_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_OPEN_POOL_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_OPEN_POOL_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_ORDER_CREATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_ORDER_CREATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_ORDER_LAST_UPDATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_ORDER_LAST_UPDATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_PROCESSOR_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_PROCESSOR_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_SUM_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_OPEN_POOL_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_OPEN_POOL_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_ORDER_CREATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_ORDER_CREATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_ORDER_LAST_UPDATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_ORDER_LAST_UPDATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_PROCESSOR_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_PROCESSOR_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_POPULATION_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_OPEN_POOL_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_OPEN_POOL_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_CREATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_CREATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_LAST_UPDATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_LAST_UPDATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_PROCESSOR_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_PROCESSOR_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_CREATED_EVENT_ID_VARIANCE_SAMPLE_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_OPEN_POOL_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_OPEN_POOL_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_ORDER_CREATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_ORDER_CREATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_ORDER_LAST_UPDATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_ORDER_LAST_UPDATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_PROCESSOR_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_PROCESSOR_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_AVERAGE_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_COUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_COUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_OPEN_POOL_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_OPEN_POOL_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_ORDER_CREATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_ORDER_CREATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_ORDER_LAST_UPDATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_ORDER_LAST_UPDATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_PROCESSOR_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_PROCESSOR_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_DISTINCT_COUNT_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_OPEN_POOL_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_OPEN_POOL_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_ORDER_CREATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_ORDER_CREATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_ORDER_LAST_UPDATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_ORDER_LAST_UPDATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_PROCESSOR_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_PROCESSOR_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MAX_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_OPEN_POOL_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_OPEN_POOL_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_ORDER_CREATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_ORDER_CREATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_ORDER_LAST_UPDATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_ORDER_LAST_UPDATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_PROCESSOR_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_PROCESSOR_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_MIN_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_OPEN_POOL_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_OPEN_POOL_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_ORDER_CREATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_ORDER_CREATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_ORDER_LAST_UPDATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_ORDER_LAST_UPDATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_PROCESSOR_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_PROCESSOR_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_POPULATION_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_OPEN_POOL_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_OPEN_POOL_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_ORDER_CREATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_ORDER_CREATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_ORDER_LAST_UPDATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_ORDER_LAST_UPDATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_PROCESSOR_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_PROCESSOR_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_STDDEV_SAMPLE_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_OPEN_POOL_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_OPEN_POOL_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_ORDER_CREATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_ORDER_CREATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_ORDER_LAST_UPDATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_ORDER_LAST_UPDATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_PROCESSOR_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_PROCESSOR_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_SUM_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_OPEN_POOL_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_OPEN_POOL_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_ORDER_CREATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_ORDER_CREATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_ORDER_LAST_UPDATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_ORDER_LAST_UPDATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_PROCESSOR_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_PROCESSOR_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_POPULATION_UPPER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_BASE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_BASE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_BASE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_BASE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_BASE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_BASE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_FILLED_BASE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_FILLED_BASE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_FILLED_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_FILLED_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_LIQUIDITY_PROVIDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_LOWER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_LOWER_TICK_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_OPEN_POOL_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_OPEN_POOL_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_CREATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_CREATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_LAST_UPDATED_TIMESTAMP_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_LAST_UPDATED_TIMESTAMP_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_TYPE_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_ORDER_TYPE_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_PROCESSOR_ORDER_CREATED_EVENT_ID_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_PROCESSOR_ORDER_CREATED_EVENT_ID_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_QUOTE_AMOUNT_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_QUOTE_AMOUNT_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_QUOTE_ASSET_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_QUOTE_ASSET_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_QUOTE_COLLECTED_FEES_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_QUOTE_COLLECTED_FEES_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_QUOTE_COLLECTED_FEES_USD_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_QUOTE_COLLECTED_FEES_USD_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_STATUS_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_STATUS_DESC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_UPPER_TICK_ASC'
  | 'POOL_ORDERS_BY_ORDER_LAST_UPDATED_EVENT_ID_VARIANCE_SAMPLE_UPPER_TICK_DESC'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'TIMESTAMP_ASC'
  | 'TIMESTAMP_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_AVERAGE_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_AVERAGE_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_AVERAGE_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_AVERAGE_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_AVERAGE_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_AVERAGE_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_AVERAGE_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_AVERAGE_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_AVERAGE_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_AVERAGE_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_AVERAGE_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_AVERAGE_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_AVERAGE_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_AVERAGE_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_AVERAGE_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_AVERAGE_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_AVERAGE_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_AVERAGE_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_COUNT_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_COUNT_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_DISTINCT_COUNT_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_DISTINCT_COUNT_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_DISTINCT_COUNT_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_DISTINCT_COUNT_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_DISTINCT_COUNT_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_DISTINCT_COUNT_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_DISTINCT_COUNT_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_DISTINCT_COUNT_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_DISTINCT_COUNT_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_DISTINCT_COUNT_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_DISTINCT_COUNT_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_DISTINCT_COUNT_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_DISTINCT_COUNT_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_DISTINCT_COUNT_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_DISTINCT_COUNT_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_DISTINCT_COUNT_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MAX_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MAX_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MAX_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MAX_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MAX_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MAX_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MAX_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MAX_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MAX_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MAX_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MAX_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MAX_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MAX_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MAX_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MAX_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MAX_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MAX_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MAX_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MIN_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MIN_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MIN_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MIN_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MIN_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MIN_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MIN_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MIN_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MIN_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MIN_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MIN_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MIN_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MIN_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MIN_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MIN_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MIN_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MIN_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_MIN_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_POPULATION_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_POPULATION_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_POPULATION_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_POPULATION_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_POPULATION_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_POPULATION_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_POPULATION_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_POPULATION_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_POPULATION_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_POPULATION_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_POPULATION_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_POPULATION_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_POPULATION_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_POPULATION_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_POPULATION_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_POPULATION_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_SAMPLE_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_SAMPLE_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_SAMPLE_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_SAMPLE_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_SAMPLE_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_SAMPLE_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_SAMPLE_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_SAMPLE_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_SAMPLE_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_SAMPLE_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_SAMPLE_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_SAMPLE_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_SAMPLE_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_SAMPLE_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_SAMPLE_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_STDDEV_SAMPLE_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_SUM_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_SUM_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_SUM_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_SUM_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_SUM_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_SUM_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_SUM_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_SUM_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_SUM_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_SUM_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_SUM_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_SUM_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_SUM_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_SUM_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_SUM_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_SUM_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_SUM_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_SUM_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_POPULATION_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_POPULATION_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_POPULATION_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_POPULATION_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_POPULATION_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_POPULATION_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_POPULATION_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_POPULATION_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_POPULATION_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_POPULATION_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_POPULATION_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_POPULATION_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_POPULATION_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_POPULATION_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_POPULATION_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_POPULATION_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_SAMPLE_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_SAMPLE_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_SAMPLE_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_SAMPLE_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_SAMPLE_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_SAMPLE_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_SAMPLE_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_SAMPLE_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_SAMPLE_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_SAMPLE_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_SAMPLE_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_SAMPLE_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_SAMPLE_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_SAMPLE_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_SAMPLE_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CLOSED_AT_EVENT_ID_VARIANCE_SAMPLE_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_AVERAGE_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_AVERAGE_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_AVERAGE_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_AVERAGE_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_AVERAGE_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_AVERAGE_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_AVERAGE_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_AVERAGE_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_AVERAGE_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_AVERAGE_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_AVERAGE_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_AVERAGE_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_AVERAGE_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_AVERAGE_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_AVERAGE_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_AVERAGE_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_AVERAGE_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_AVERAGE_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_COUNT_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_COUNT_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_DISTINCT_COUNT_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_DISTINCT_COUNT_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_DISTINCT_COUNT_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_DISTINCT_COUNT_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_DISTINCT_COUNT_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_DISTINCT_COUNT_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_DISTINCT_COUNT_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_DISTINCT_COUNT_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_DISTINCT_COUNT_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_DISTINCT_COUNT_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_DISTINCT_COUNT_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_DISTINCT_COUNT_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_DISTINCT_COUNT_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_DISTINCT_COUNT_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_DISTINCT_COUNT_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_DISTINCT_COUNT_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MAX_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MAX_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MAX_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MAX_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MAX_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MAX_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MAX_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MAX_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MAX_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MAX_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MAX_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MAX_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MAX_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MAX_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MAX_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MAX_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MAX_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MAX_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MIN_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MIN_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MIN_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MIN_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MIN_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MIN_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MIN_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MIN_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MIN_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MIN_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MIN_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MIN_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MIN_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MIN_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MIN_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MIN_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MIN_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_MIN_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_POPULATION_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_POPULATION_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_POPULATION_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_POPULATION_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_POPULATION_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_POPULATION_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_POPULATION_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_POPULATION_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_POPULATION_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_POPULATION_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_POPULATION_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_POPULATION_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_POPULATION_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_POPULATION_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_POPULATION_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_POPULATION_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_SAMPLE_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_SAMPLE_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_SAMPLE_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_SAMPLE_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_SAMPLE_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_SAMPLE_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_SAMPLE_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_SAMPLE_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_SAMPLE_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_SAMPLE_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_SAMPLE_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_SAMPLE_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_SAMPLE_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_SAMPLE_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_SAMPLE_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_STDDEV_SAMPLE_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_SUM_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_SUM_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_SUM_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_SUM_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_SUM_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_SUM_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_SUM_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_SUM_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_SUM_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_SUM_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_SUM_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_SUM_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_SUM_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_SUM_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_SUM_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_SUM_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_SUM_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_SUM_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_POPULATION_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_POPULATION_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_POPULATION_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_POPULATION_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_POPULATION_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_POPULATION_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_POPULATION_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_POPULATION_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_POPULATION_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_POPULATION_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_POPULATION_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_POPULATION_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_POPULATION_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_POPULATION_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_POPULATION_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_POPULATION_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_SAMPLE_BASE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_SAMPLE_BASE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_SAMPLE_BUY_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_SAMPLE_BUY_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_SAMPLE_CLOSED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_SAMPLE_CLOSED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_SAMPLE_CREATED_AT_EVENT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_SAMPLE_CREATED_AT_EVENT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_SAMPLE_OWNER_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_SAMPLE_OWNER_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_SAMPLE_QUOTE_ASSET_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_SAMPLE_QUOTE_ASSET_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_SAMPLE_SELL_TICK_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_SAMPLE_SELL_TICK_DESC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_SAMPLE_STRATEGY_ACCOUNT_ID_ASC'
  | 'TRADING_STRATEGIES_BY_CREATED_AT_EVENT_ID_VARIANCE_SAMPLE_STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_AVERAGE_AMOUNT_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_AVERAGE_AMOUNT_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_AVERAGE_AMOUNT_USD_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_AVERAGE_AMOUNT_USD_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_AVERAGE_ASSET_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_AVERAGE_ASSET_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_AVERAGE_EVENT_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_AVERAGE_EVENT_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_AVERAGE_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_AVERAGE_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_AVERAGE_TRADING_STRATEGY_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_AVERAGE_TRADING_STRATEGY_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_AVERAGE_TYPE_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_AVERAGE_TYPE_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_COUNT_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_COUNT_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_AMOUNT_USD_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_AMOUNT_USD_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_ASSET_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_ASSET_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_TRADING_STRATEGY_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_TRADING_STRATEGY_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_TYPE_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_DISTINCT_COUNT_TYPE_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_MAX_AMOUNT_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_MAX_AMOUNT_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_MAX_AMOUNT_USD_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_MAX_AMOUNT_USD_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_MAX_ASSET_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_MAX_ASSET_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_MAX_EVENT_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_MAX_EVENT_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_MAX_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_MAX_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_MAX_TRADING_STRATEGY_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_MAX_TRADING_STRATEGY_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_MAX_TYPE_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_MAX_TYPE_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_MIN_AMOUNT_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_MIN_AMOUNT_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_MIN_AMOUNT_USD_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_MIN_AMOUNT_USD_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_MIN_ASSET_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_MIN_ASSET_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_MIN_EVENT_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_MIN_EVENT_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_MIN_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_MIN_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_MIN_TRADING_STRATEGY_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_MIN_TRADING_STRATEGY_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_MIN_TYPE_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_MIN_TYPE_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_AMOUNT_USD_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_AMOUNT_USD_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_ASSET_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_ASSET_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_TRADING_STRATEGY_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_TRADING_STRATEGY_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_TYPE_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_STDDEV_POPULATION_TYPE_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_AMOUNT_USD_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_AMOUNT_USD_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_ASSET_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_ASSET_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_TRADING_STRATEGY_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_TRADING_STRATEGY_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_TYPE_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_STDDEV_SAMPLE_TYPE_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_SUM_AMOUNT_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_SUM_AMOUNT_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_SUM_AMOUNT_USD_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_SUM_AMOUNT_USD_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_SUM_ASSET_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_SUM_ASSET_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_SUM_EVENT_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_SUM_EVENT_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_SUM_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_SUM_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_SUM_TRADING_STRATEGY_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_SUM_TRADING_STRATEGY_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_SUM_TYPE_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_SUM_TYPE_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_AMOUNT_USD_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_AMOUNT_USD_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_ASSET_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_ASSET_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_TRADING_STRATEGY_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_TRADING_STRATEGY_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_TYPE_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_VARIANCE_POPULATION_TYPE_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_AMOUNT_USD_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_AMOUNT_USD_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_ASSET_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_ASSET_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_TRADING_STRATEGY_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_TRADING_STRATEGY_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_TYPE_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_EVENT_ID_VARIANCE_SAMPLE_TYPE_DESC';

export type HavingBigfloatFilter = {
  equalTo?: InputMaybe<Scalars['BigFloat']['input']>;
  greaterThan?: InputMaybe<Scalars['BigFloat']['input']>;
  greaterThanOrEqualTo?: InputMaybe<Scalars['BigFloat']['input']>;
  lessThan?: InputMaybe<Scalars['BigFloat']['input']>;
  lessThanOrEqualTo?: InputMaybe<Scalars['BigFloat']['input']>;
  notEqualTo?: InputMaybe<Scalars['BigFloat']['input']>;
};

export type HavingBigintFilter = {
  equalTo?: InputMaybe<Scalars['BigInt']['input']>;
  greaterThan?: InputMaybe<Scalars['BigInt']['input']>;
  greaterThanOrEqualTo?: InputMaybe<Scalars['BigInt']['input']>;
  lessThan?: InputMaybe<Scalars['BigInt']['input']>;
  lessThanOrEqualTo?: InputMaybe<Scalars['BigInt']['input']>;
  notEqualTo?: InputMaybe<Scalars['BigInt']['input']>;
};

export type HavingDatetimeFilter = {
  equalTo?: InputMaybe<Scalars['Datetime']['input']>;
  greaterThan?: InputMaybe<Scalars['Datetime']['input']>;
  greaterThanOrEqualTo?: InputMaybe<Scalars['Datetime']['input']>;
  lessThan?: InputMaybe<Scalars['Datetime']['input']>;
  lessThanOrEqualTo?: InputMaybe<Scalars['Datetime']['input']>;
  notEqualTo?: InputMaybe<Scalars['Datetime']['input']>;
};

export type HavingIntFilter = {
  equalTo?: InputMaybe<Scalars['Int']['input']>;
  greaterThan?: InputMaybe<Scalars['Int']['input']>;
  greaterThanOrEqualTo?: InputMaybe<Scalars['Int']['input']>;
  lessThan?: InputMaybe<Scalars['Int']['input']>;
  lessThanOrEqualTo?: InputMaybe<Scalars['Int']['input']>;
  notEqualTo?: InputMaybe<Scalars['Int']['input']>;
};

/** A filter to be used against Int fields. All fields are combined with a logical ‘and.’ */
export type IntFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<Scalars['Int']['input']>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<Scalars['Int']['input']>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<Scalars['Int']['input']>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<Scalars['Int']['input']>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<Scalars['Int']['input']>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<Scalars['Int']['input']>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<Scalars['Int']['input']>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<Scalars['Int']['input']>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<Scalars['Int']['input']>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<Scalars['Int']['input']>>;
};

export type LastBlock = Node & {
  __typename?: 'LastBlock';
  height: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  timestamp: Scalars['Datetime']['output'];
};

export type LastBlockAggregates = {
  __typename?: 'LastBlockAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<LastBlockAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<LastBlockDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<LastBlockMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<LastBlockMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<LastBlockStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<LastBlockStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<LastBlockSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<LastBlockVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<LastBlockVarianceSampleAggregates>;
};

export type LastBlockAverageAggregates = {
  __typename?: 'LastBlockAverageAggregates';
  /** Mean average of height across the matching connection */
  height?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `LastBlock` object types. All fields are tested
 * for equality and combined with a logical ‘and.’
 */
export type LastBlockCondition = {
  /** Checks for equality with the object’s `height` field. */
  height?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `timestamp` field. */
  timestamp?: InputMaybe<Scalars['Datetime']['input']>;
};

export type LastBlockDistinctCountAggregates = {
  __typename?: 'LastBlockDistinctCountAggregates';
  /** Distinct count of height across the matching connection */
  height?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of timestamp across the matching connection */
  timestamp?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `LastBlock` object types. All fields are combined with a logical ‘and.’ */
export type LastBlockFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<LastBlockFilter>>;
  /** Filter by the object’s `height` field. */
  height?: InputMaybe<IntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<LastBlockFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<LastBlockFilter>>;
  /** Filter by the object’s `timestamp` field. */
  timestamp?: InputMaybe<DatetimeFilter>;
};

/** Grouping methods for `LastBlock` for usage during aggregation. */
export type LastBlockGroupBy =
  | 'HEIGHT'
  | 'TIMESTAMP'
  | 'TIMESTAMP_TRUNCATED_TO_DAY'
  | 'TIMESTAMP_TRUNCATED_TO_HOUR';

export type LastBlockHavingAverageInput = {
  height?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type LastBlockHavingDistinctCountInput = {
  height?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

/** Conditions for `LastBlock` aggregates. */
export type LastBlockHavingInput = {
  AND?: InputMaybe<Array<LastBlockHavingInput>>;
  OR?: InputMaybe<Array<LastBlockHavingInput>>;
  average?: InputMaybe<LastBlockHavingAverageInput>;
  distinctCount?: InputMaybe<LastBlockHavingDistinctCountInput>;
  max?: InputMaybe<LastBlockHavingMaxInput>;
  min?: InputMaybe<LastBlockHavingMinInput>;
  stddevPopulation?: InputMaybe<LastBlockHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<LastBlockHavingStddevSampleInput>;
  sum?: InputMaybe<LastBlockHavingSumInput>;
  variancePopulation?: InputMaybe<LastBlockHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<LastBlockHavingVarianceSampleInput>;
};

export type LastBlockHavingMaxInput = {
  height?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type LastBlockHavingMinInput = {
  height?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type LastBlockHavingStddevPopulationInput = {
  height?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type LastBlockHavingStddevSampleInput = {
  height?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type LastBlockHavingSumInput = {
  height?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type LastBlockHavingVariancePopulationInput = {
  height?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type LastBlockHavingVarianceSampleInput = {
  height?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
};

export type LastBlockMaxAggregates = {
  __typename?: 'LastBlockMaxAggregates';
  /** Maximum of height across the matching connection */
  height?: Maybe<Scalars['Int']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
};

export type LastBlockMinAggregates = {
  __typename?: 'LastBlockMinAggregates';
  /** Minimum of height across the matching connection */
  height?: Maybe<Scalars['Int']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
};

export type LastBlockStddevPopulationAggregates = {
  __typename?: 'LastBlockStddevPopulationAggregates';
  /** Population standard deviation of height across the matching connection */
  height?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type LastBlockStddevSampleAggregates = {
  __typename?: 'LastBlockStddevSampleAggregates';
  /** Sample standard deviation of height across the matching connection */
  height?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type LastBlockSumAggregates = {
  __typename?: 'LastBlockSumAggregates';
  /** Sum of height across the matching connection */
  height: Scalars['BigInt']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
};

export type LastBlockVariancePopulationAggregates = {
  __typename?: 'LastBlockVariancePopulationAggregates';
  /** Population variance of height across the matching connection */
  height?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

export type LastBlockVarianceSampleAggregates = {
  __typename?: 'LastBlockVarianceSampleAggregates';
  /** Sample variance of height across the matching connection */
  height?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `LastBlock` values. */
export type LastBlocksConnection = {
  __typename?: 'LastBlocksConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<LastBlockAggregates>;
  /** A list of edges which contains the `LastBlock` and cursor to aid in pagination. */
  edges: Array<LastBlocksEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<LastBlockAggregates>>;
  /** A list of `LastBlock` objects. */
  nodes: Array<LastBlock>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `LastBlock` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `LastBlock` values. */
export type LastBlocksConnectionGroupedAggregatesArgs = {
  groupBy: Array<LastBlockGroupBy>;
  having?: InputMaybe<LastBlockHavingInput>;
};

/** A `LastBlock` edge in the connection. */
export type LastBlocksEdge = {
  __typename?: 'LastBlocksEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `LastBlock` at the end of the edge. */
  node: LastBlock;
};

/** Methods to use when ordering `LastBlock`. */
export type LastBlocksOrderBy =
  | 'HEIGHT_ASC'
  | 'HEIGHT_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'TIMESTAMP_ASC'
  | 'TIMESTAMP_DESC';

export type LimitOrderFill = Node & {
  __typename?: 'LimitOrderFill';
  /** Reads a single `Account` that is related to this `LimitOrderFill`. */
  accountByLiquidityProviderId: Account;
  baseAsset: ChainflipAsset;
  block: Scalars['Int']['output'];
  blockTimestamp?: Maybe<Scalars['Datetime']['output']>;
  feesEarned: Scalars['BigFloat']['output'];
  feesEarnedValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  filledAmount: Scalars['BigFloat']['output'];
  filledAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  id: Scalars['Int']['output'];
  liquidityProviderId: Scalars['Int']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  orderId: Scalars['String']['output'];
  originalSellAmount: Scalars['BigFloat']['output'];
  originalSellAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  sellAmount: Scalars['BigFloat']['output'];
  sellAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  tick: Scalars['Int']['output'];
  type: LimitOrderType;
};

export type LimitOrderFillAggregates = {
  __typename?: 'LimitOrderFillAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<LimitOrderFillAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<LimitOrderFillDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<LimitOrderFillMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<LimitOrderFillMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<LimitOrderFillStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<LimitOrderFillStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<LimitOrderFillSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<LimitOrderFillVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<LimitOrderFillVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `LimitOrderFill` object types. */
export type LimitOrderFillAggregatesFilter = {
  /** Mean average aggregate over matching `LimitOrderFill` objects. */
  average?: InputMaybe<LimitOrderFillAverageAggregateFilter>;
  /** Distinct count aggregate over matching `LimitOrderFill` objects. */
  distinctCount?: InputMaybe<LimitOrderFillDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `LimitOrderFill` object to be included within the aggregate. */
  filter?: InputMaybe<LimitOrderFillFilter>;
  /** Maximum aggregate over matching `LimitOrderFill` objects. */
  max?: InputMaybe<LimitOrderFillMaxAggregateFilter>;
  /** Minimum aggregate over matching `LimitOrderFill` objects. */
  min?: InputMaybe<LimitOrderFillMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `LimitOrderFill` objects. */
  stddevPopulation?: InputMaybe<LimitOrderFillStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `LimitOrderFill` objects. */
  stddevSample?: InputMaybe<LimitOrderFillStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `LimitOrderFill` objects. */
  sum?: InputMaybe<LimitOrderFillSumAggregateFilter>;
  /** Population variance aggregate over matching `LimitOrderFill` objects. */
  variancePopulation?: InputMaybe<LimitOrderFillVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `LimitOrderFill` objects. */
  varianceSample?: InputMaybe<LimitOrderFillVarianceSampleAggregateFilter>;
};

export type LimitOrderFillAverageAggregateFilter = {
  block?: InputMaybe<BigFloatFilter>;
  feesEarned?: InputMaybe<BigFloatFilter>;
  feesEarnedValueUsd?: InputMaybe<BigFloatFilter>;
  filledAmount?: InputMaybe<BigFloatFilter>;
  filledAmountValueUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
  originalSellAmount?: InputMaybe<BigFloatFilter>;
  originalSellAmountValueUsd?: InputMaybe<BigFloatFilter>;
  sellAmount?: InputMaybe<BigFloatFilter>;
  sellAmountValueUsd?: InputMaybe<BigFloatFilter>;
  tick?: InputMaybe<BigFloatFilter>;
};

export type LimitOrderFillAverageAggregates = {
  __typename?: 'LimitOrderFillAverageAggregates';
  /** Mean average of block across the matching connection */
  block?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of feesEarned across the matching connection */
  feesEarned?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of feesEarnedValueUsd across the matching connection */
  feesEarnedValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of filledAmount across the matching connection */
  filledAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of filledAmountValueUsd across the matching connection */
  filledAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of originalSellAmount across the matching connection */
  originalSellAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of originalSellAmountValueUsd across the matching connection */
  originalSellAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of sellAmount across the matching connection */
  sellAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of sellAmountValueUsd across the matching connection */
  sellAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of tick across the matching connection */
  tick?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `LimitOrderFill` object types. All fields are
 * tested for equality and combined with a logical ‘and.’
 */
export type LimitOrderFillCondition = {
  /** Checks for equality with the object’s `baseAsset` field. */
  baseAsset?: InputMaybe<ChainflipAsset>;
  /** Checks for equality with the object’s `block` field. */
  block?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `blockTimestamp` field. */
  blockTimestamp?: InputMaybe<Scalars['Datetime']['input']>;
  /** Checks for equality with the object’s `feesEarned` field. */
  feesEarned?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `feesEarnedValueUsd` field. */
  feesEarnedValueUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `filledAmount` field. */
  filledAmount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `filledAmountValueUsd` field. */
  filledAmountValueUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `liquidityProviderId` field. */
  liquidityProviderId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `orderId` field. */
  orderId?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `originalSellAmount` field. */
  originalSellAmount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `originalSellAmountValueUsd` field. */
  originalSellAmountValueUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `sellAmount` field. */
  sellAmount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `sellAmountValueUsd` field. */
  sellAmountValueUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `tick` field. */
  tick?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `type` field. */
  type?: InputMaybe<LimitOrderType>;
};

export type LimitOrderFillDistinctCountAggregateFilter = {
  baseAsset?: InputMaybe<BigIntFilter>;
  block?: InputMaybe<BigIntFilter>;
  blockTimestamp?: InputMaybe<BigIntFilter>;
  feesEarned?: InputMaybe<BigIntFilter>;
  feesEarnedValueUsd?: InputMaybe<BigIntFilter>;
  filledAmount?: InputMaybe<BigIntFilter>;
  filledAmountValueUsd?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  liquidityProviderId?: InputMaybe<BigIntFilter>;
  orderId?: InputMaybe<BigIntFilter>;
  originalSellAmount?: InputMaybe<BigIntFilter>;
  originalSellAmountValueUsd?: InputMaybe<BigIntFilter>;
  sellAmount?: InputMaybe<BigIntFilter>;
  sellAmountValueUsd?: InputMaybe<BigIntFilter>;
  tick?: InputMaybe<BigIntFilter>;
  type?: InputMaybe<BigIntFilter>;
};

export type LimitOrderFillDistinctCountAggregates = {
  __typename?: 'LimitOrderFillDistinctCountAggregates';
  /** Distinct count of baseAsset across the matching connection */
  baseAsset?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of block across the matching connection */
  block?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of blockTimestamp across the matching connection */
  blockTimestamp?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of feesEarned across the matching connection */
  feesEarned?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of feesEarnedValueUsd across the matching connection */
  feesEarnedValueUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of filledAmount across the matching connection */
  filledAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of filledAmountValueUsd across the matching connection */
  filledAmountValueUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of orderId across the matching connection */
  orderId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of originalSellAmount across the matching connection */
  originalSellAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of originalSellAmountValueUsd across the matching connection */
  originalSellAmountValueUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of sellAmount across the matching connection */
  sellAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of sellAmountValueUsd across the matching connection */
  sellAmountValueUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of tick across the matching connection */
  tick?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of type across the matching connection */
  type?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `LimitOrderFill` object types. All fields are combined with a logical ‘and.’ */
export type LimitOrderFillFilter = {
  /** Filter by the object’s `accountByLiquidityProviderId` relation. */
  accountByLiquidityProviderId?: InputMaybe<AccountFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<LimitOrderFillFilter>>;
  /** Filter by the object’s `baseAsset` field. */
  baseAsset?: InputMaybe<ChainflipAssetFilter>;
  /** Filter by the object’s `block` field. */
  block?: InputMaybe<IntFilter>;
  /** Filter by the object’s `blockTimestamp` field. */
  blockTimestamp?: InputMaybe<DatetimeFilter>;
  /** Filter by the object’s `feesEarned` field. */
  feesEarned?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `feesEarnedValueUsd` field. */
  feesEarnedValueUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `filledAmount` field. */
  filledAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `filledAmountValueUsd` field. */
  filledAmountValueUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Filter by the object’s `liquidityProviderId` field. */
  liquidityProviderId?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<LimitOrderFillFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<LimitOrderFillFilter>>;
  /** Filter by the object’s `orderId` field. */
  orderId?: InputMaybe<StringFilter>;
  /** Filter by the object’s `originalSellAmount` field. */
  originalSellAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `originalSellAmountValueUsd` field. */
  originalSellAmountValueUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `sellAmount` field. */
  sellAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `sellAmountValueUsd` field. */
  sellAmountValueUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `tick` field. */
  tick?: InputMaybe<IntFilter>;
  /** Filter by the object’s `type` field. */
  type?: InputMaybe<LimitOrderTypeFilter>;
};

/** Grouping methods for `LimitOrderFill` for usage during aggregation. */
export type LimitOrderFillGroupBy =
  | 'BASE_ASSET'
  | 'BLOCK'
  | 'BLOCK_TIMESTAMP'
  | 'BLOCK_TIMESTAMP_TRUNCATED_TO_DAY'
  | 'BLOCK_TIMESTAMP_TRUNCATED_TO_HOUR'
  | 'FEES_EARNED'
  | 'FEES_EARNED_VALUE_USD'
  | 'FILLED_AMOUNT'
  | 'FILLED_AMOUNT_VALUE_USD'
  | 'LIQUIDITY_PROVIDER_ID'
  | 'ORDER_ID'
  | 'ORIGINAL_SELL_AMOUNT'
  | 'ORIGINAL_SELL_AMOUNT_VALUE_USD'
  | 'SELL_AMOUNT'
  | 'SELL_AMOUNT_VALUE_USD'
  | 'TICK'
  | 'TYPE';

export type LimitOrderFillHavingAverageInput = {
  block?: InputMaybe<HavingIntFilter>;
  blockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  feesEarned?: InputMaybe<HavingBigfloatFilter>;
  feesEarnedValueUsd?: InputMaybe<HavingBigfloatFilter>;
  filledAmount?: InputMaybe<HavingBigfloatFilter>;
  filledAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  originalSellAmount?: InputMaybe<HavingBigfloatFilter>;
  originalSellAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  sellAmount?: InputMaybe<HavingBigfloatFilter>;
  sellAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  tick?: InputMaybe<HavingIntFilter>;
};

export type LimitOrderFillHavingDistinctCountInput = {
  block?: InputMaybe<HavingIntFilter>;
  blockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  feesEarned?: InputMaybe<HavingBigfloatFilter>;
  feesEarnedValueUsd?: InputMaybe<HavingBigfloatFilter>;
  filledAmount?: InputMaybe<HavingBigfloatFilter>;
  filledAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  originalSellAmount?: InputMaybe<HavingBigfloatFilter>;
  originalSellAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  sellAmount?: InputMaybe<HavingBigfloatFilter>;
  sellAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  tick?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `LimitOrderFill` aggregates. */
export type LimitOrderFillHavingInput = {
  AND?: InputMaybe<Array<LimitOrderFillHavingInput>>;
  OR?: InputMaybe<Array<LimitOrderFillHavingInput>>;
  average?: InputMaybe<LimitOrderFillHavingAverageInput>;
  distinctCount?: InputMaybe<LimitOrderFillHavingDistinctCountInput>;
  max?: InputMaybe<LimitOrderFillHavingMaxInput>;
  min?: InputMaybe<LimitOrderFillHavingMinInput>;
  stddevPopulation?: InputMaybe<LimitOrderFillHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<LimitOrderFillHavingStddevSampleInput>;
  sum?: InputMaybe<LimitOrderFillHavingSumInput>;
  variancePopulation?: InputMaybe<LimitOrderFillHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<LimitOrderFillHavingVarianceSampleInput>;
};

export type LimitOrderFillHavingMaxInput = {
  block?: InputMaybe<HavingIntFilter>;
  blockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  feesEarned?: InputMaybe<HavingBigfloatFilter>;
  feesEarnedValueUsd?: InputMaybe<HavingBigfloatFilter>;
  filledAmount?: InputMaybe<HavingBigfloatFilter>;
  filledAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  originalSellAmount?: InputMaybe<HavingBigfloatFilter>;
  originalSellAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  sellAmount?: InputMaybe<HavingBigfloatFilter>;
  sellAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  tick?: InputMaybe<HavingIntFilter>;
};

export type LimitOrderFillHavingMinInput = {
  block?: InputMaybe<HavingIntFilter>;
  blockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  feesEarned?: InputMaybe<HavingBigfloatFilter>;
  feesEarnedValueUsd?: InputMaybe<HavingBigfloatFilter>;
  filledAmount?: InputMaybe<HavingBigfloatFilter>;
  filledAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  originalSellAmount?: InputMaybe<HavingBigfloatFilter>;
  originalSellAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  sellAmount?: InputMaybe<HavingBigfloatFilter>;
  sellAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  tick?: InputMaybe<HavingIntFilter>;
};

export type LimitOrderFillHavingStddevPopulationInput = {
  block?: InputMaybe<HavingIntFilter>;
  blockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  feesEarned?: InputMaybe<HavingBigfloatFilter>;
  feesEarnedValueUsd?: InputMaybe<HavingBigfloatFilter>;
  filledAmount?: InputMaybe<HavingBigfloatFilter>;
  filledAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  originalSellAmount?: InputMaybe<HavingBigfloatFilter>;
  originalSellAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  sellAmount?: InputMaybe<HavingBigfloatFilter>;
  sellAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  tick?: InputMaybe<HavingIntFilter>;
};

export type LimitOrderFillHavingStddevSampleInput = {
  block?: InputMaybe<HavingIntFilter>;
  blockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  feesEarned?: InputMaybe<HavingBigfloatFilter>;
  feesEarnedValueUsd?: InputMaybe<HavingBigfloatFilter>;
  filledAmount?: InputMaybe<HavingBigfloatFilter>;
  filledAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  originalSellAmount?: InputMaybe<HavingBigfloatFilter>;
  originalSellAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  sellAmount?: InputMaybe<HavingBigfloatFilter>;
  sellAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  tick?: InputMaybe<HavingIntFilter>;
};

export type LimitOrderFillHavingSumInput = {
  block?: InputMaybe<HavingIntFilter>;
  blockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  feesEarned?: InputMaybe<HavingBigfloatFilter>;
  feesEarnedValueUsd?: InputMaybe<HavingBigfloatFilter>;
  filledAmount?: InputMaybe<HavingBigfloatFilter>;
  filledAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  originalSellAmount?: InputMaybe<HavingBigfloatFilter>;
  originalSellAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  sellAmount?: InputMaybe<HavingBigfloatFilter>;
  sellAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  tick?: InputMaybe<HavingIntFilter>;
};

export type LimitOrderFillHavingVariancePopulationInput = {
  block?: InputMaybe<HavingIntFilter>;
  blockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  feesEarned?: InputMaybe<HavingBigfloatFilter>;
  feesEarnedValueUsd?: InputMaybe<HavingBigfloatFilter>;
  filledAmount?: InputMaybe<HavingBigfloatFilter>;
  filledAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  originalSellAmount?: InputMaybe<HavingBigfloatFilter>;
  originalSellAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  sellAmount?: InputMaybe<HavingBigfloatFilter>;
  sellAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  tick?: InputMaybe<HavingIntFilter>;
};

export type LimitOrderFillHavingVarianceSampleInput = {
  block?: InputMaybe<HavingIntFilter>;
  blockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  feesEarned?: InputMaybe<HavingBigfloatFilter>;
  feesEarnedValueUsd?: InputMaybe<HavingBigfloatFilter>;
  filledAmount?: InputMaybe<HavingBigfloatFilter>;
  filledAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  originalSellAmount?: InputMaybe<HavingBigfloatFilter>;
  originalSellAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  sellAmount?: InputMaybe<HavingBigfloatFilter>;
  sellAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  tick?: InputMaybe<HavingIntFilter>;
};

export type LimitOrderFillMaxAggregateFilter = {
  block?: InputMaybe<IntFilter>;
  feesEarned?: InputMaybe<BigFloatFilter>;
  feesEarnedValueUsd?: InputMaybe<BigFloatFilter>;
  filledAmount?: InputMaybe<BigFloatFilter>;
  filledAmountValueUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<IntFilter>;
  liquidityProviderId?: InputMaybe<IntFilter>;
  originalSellAmount?: InputMaybe<BigFloatFilter>;
  originalSellAmountValueUsd?: InputMaybe<BigFloatFilter>;
  sellAmount?: InputMaybe<BigFloatFilter>;
  sellAmountValueUsd?: InputMaybe<BigFloatFilter>;
  tick?: InputMaybe<IntFilter>;
};

export type LimitOrderFillMaxAggregates = {
  __typename?: 'LimitOrderFillMaxAggregates';
  /** Maximum of block across the matching connection */
  block?: Maybe<Scalars['Int']['output']>;
  /** Maximum of feesEarned across the matching connection */
  feesEarned?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of feesEarnedValueUsd across the matching connection */
  feesEarnedValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of filledAmount across the matching connection */
  filledAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of filledAmountValueUsd across the matching connection */
  filledAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of originalSellAmount across the matching connection */
  originalSellAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of originalSellAmountValueUsd across the matching connection */
  originalSellAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of sellAmount across the matching connection */
  sellAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of sellAmountValueUsd across the matching connection */
  sellAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of tick across the matching connection */
  tick?: Maybe<Scalars['Int']['output']>;
};

export type LimitOrderFillMinAggregateFilter = {
  block?: InputMaybe<IntFilter>;
  feesEarned?: InputMaybe<BigFloatFilter>;
  feesEarnedValueUsd?: InputMaybe<BigFloatFilter>;
  filledAmount?: InputMaybe<BigFloatFilter>;
  filledAmountValueUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<IntFilter>;
  liquidityProviderId?: InputMaybe<IntFilter>;
  originalSellAmount?: InputMaybe<BigFloatFilter>;
  originalSellAmountValueUsd?: InputMaybe<BigFloatFilter>;
  sellAmount?: InputMaybe<BigFloatFilter>;
  sellAmountValueUsd?: InputMaybe<BigFloatFilter>;
  tick?: InputMaybe<IntFilter>;
};

export type LimitOrderFillMinAggregates = {
  __typename?: 'LimitOrderFillMinAggregates';
  /** Minimum of block across the matching connection */
  block?: Maybe<Scalars['Int']['output']>;
  /** Minimum of feesEarned across the matching connection */
  feesEarned?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of feesEarnedValueUsd across the matching connection */
  feesEarnedValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of filledAmount across the matching connection */
  filledAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of filledAmountValueUsd across the matching connection */
  filledAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of originalSellAmount across the matching connection */
  originalSellAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of originalSellAmountValueUsd across the matching connection */
  originalSellAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of sellAmount across the matching connection */
  sellAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of sellAmountValueUsd across the matching connection */
  sellAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of tick across the matching connection */
  tick?: Maybe<Scalars['Int']['output']>;
};

export type LimitOrderFillStddevPopulationAggregateFilter = {
  block?: InputMaybe<BigFloatFilter>;
  feesEarned?: InputMaybe<BigFloatFilter>;
  feesEarnedValueUsd?: InputMaybe<BigFloatFilter>;
  filledAmount?: InputMaybe<BigFloatFilter>;
  filledAmountValueUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
  originalSellAmount?: InputMaybe<BigFloatFilter>;
  originalSellAmountValueUsd?: InputMaybe<BigFloatFilter>;
  sellAmount?: InputMaybe<BigFloatFilter>;
  sellAmountValueUsd?: InputMaybe<BigFloatFilter>;
  tick?: InputMaybe<BigFloatFilter>;
};

export type LimitOrderFillStddevPopulationAggregates = {
  __typename?: 'LimitOrderFillStddevPopulationAggregates';
  /** Population standard deviation of block across the matching connection */
  block?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of feesEarned across the matching connection */
  feesEarned?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of feesEarnedValueUsd across the matching connection */
  feesEarnedValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of filledAmount across the matching connection */
  filledAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of filledAmountValueUsd across the matching connection */
  filledAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of originalSellAmount across the matching connection */
  originalSellAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of originalSellAmountValueUsd across the matching connection */
  originalSellAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of sellAmount across the matching connection */
  sellAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of sellAmountValueUsd across the matching connection */
  sellAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of tick across the matching connection */
  tick?: Maybe<Scalars['BigFloat']['output']>;
};

export type LimitOrderFillStddevSampleAggregateFilter = {
  block?: InputMaybe<BigFloatFilter>;
  feesEarned?: InputMaybe<BigFloatFilter>;
  feesEarnedValueUsd?: InputMaybe<BigFloatFilter>;
  filledAmount?: InputMaybe<BigFloatFilter>;
  filledAmountValueUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
  originalSellAmount?: InputMaybe<BigFloatFilter>;
  originalSellAmountValueUsd?: InputMaybe<BigFloatFilter>;
  sellAmount?: InputMaybe<BigFloatFilter>;
  sellAmountValueUsd?: InputMaybe<BigFloatFilter>;
  tick?: InputMaybe<BigFloatFilter>;
};

export type LimitOrderFillStddevSampleAggregates = {
  __typename?: 'LimitOrderFillStddevSampleAggregates';
  /** Sample standard deviation of block across the matching connection */
  block?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of feesEarned across the matching connection */
  feesEarned?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of feesEarnedValueUsd across the matching connection */
  feesEarnedValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of filledAmount across the matching connection */
  filledAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of filledAmountValueUsd across the matching connection */
  filledAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of originalSellAmount across the matching connection */
  originalSellAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of originalSellAmountValueUsd across the matching connection */
  originalSellAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of sellAmount across the matching connection */
  sellAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of sellAmountValueUsd across the matching connection */
  sellAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of tick across the matching connection */
  tick?: Maybe<Scalars['BigFloat']['output']>;
};

export type LimitOrderFillSumAggregateFilter = {
  block?: InputMaybe<BigIntFilter>;
  feesEarned?: InputMaybe<BigFloatFilter>;
  feesEarnedValueUsd?: InputMaybe<BigFloatFilter>;
  filledAmount?: InputMaybe<BigFloatFilter>;
  filledAmountValueUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigIntFilter>;
  liquidityProviderId?: InputMaybe<BigIntFilter>;
  originalSellAmount?: InputMaybe<BigFloatFilter>;
  originalSellAmountValueUsd?: InputMaybe<BigFloatFilter>;
  sellAmount?: InputMaybe<BigFloatFilter>;
  sellAmountValueUsd?: InputMaybe<BigFloatFilter>;
  tick?: InputMaybe<BigIntFilter>;
};

export type LimitOrderFillSumAggregates = {
  __typename?: 'LimitOrderFillSumAggregates';
  /** Sum of block across the matching connection */
  block: Scalars['BigInt']['output'];
  /** Sum of feesEarned across the matching connection */
  feesEarned: Scalars['BigFloat']['output'];
  /** Sum of feesEarnedValueUsd across the matching connection */
  feesEarnedValueUsd: Scalars['BigFloat']['output'];
  /** Sum of filledAmount across the matching connection */
  filledAmount: Scalars['BigFloat']['output'];
  /** Sum of filledAmountValueUsd across the matching connection */
  filledAmountValueUsd: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of liquidityProviderId across the matching connection */
  liquidityProviderId: Scalars['BigInt']['output'];
  /** Sum of originalSellAmount across the matching connection */
  originalSellAmount: Scalars['BigFloat']['output'];
  /** Sum of originalSellAmountValueUsd across the matching connection */
  originalSellAmountValueUsd: Scalars['BigFloat']['output'];
  /** Sum of sellAmount across the matching connection */
  sellAmount: Scalars['BigFloat']['output'];
  /** Sum of sellAmountValueUsd across the matching connection */
  sellAmountValueUsd: Scalars['BigFloat']['output'];
  /** Sum of tick across the matching connection */
  tick: Scalars['BigInt']['output'];
};

export type LimitOrderFillVariancePopulationAggregateFilter = {
  block?: InputMaybe<BigFloatFilter>;
  feesEarned?: InputMaybe<BigFloatFilter>;
  feesEarnedValueUsd?: InputMaybe<BigFloatFilter>;
  filledAmount?: InputMaybe<BigFloatFilter>;
  filledAmountValueUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
  originalSellAmount?: InputMaybe<BigFloatFilter>;
  originalSellAmountValueUsd?: InputMaybe<BigFloatFilter>;
  sellAmount?: InputMaybe<BigFloatFilter>;
  sellAmountValueUsd?: InputMaybe<BigFloatFilter>;
  tick?: InputMaybe<BigFloatFilter>;
};

export type LimitOrderFillVariancePopulationAggregates = {
  __typename?: 'LimitOrderFillVariancePopulationAggregates';
  /** Population variance of block across the matching connection */
  block?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of feesEarned across the matching connection */
  feesEarned?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of feesEarnedValueUsd across the matching connection */
  feesEarnedValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of filledAmount across the matching connection */
  filledAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of filledAmountValueUsd across the matching connection */
  filledAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of originalSellAmount across the matching connection */
  originalSellAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of originalSellAmountValueUsd across the matching connection */
  originalSellAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of sellAmount across the matching connection */
  sellAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of sellAmountValueUsd across the matching connection */
  sellAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of tick across the matching connection */
  tick?: Maybe<Scalars['BigFloat']['output']>;
};

export type LimitOrderFillVarianceSampleAggregateFilter = {
  block?: InputMaybe<BigFloatFilter>;
  feesEarned?: InputMaybe<BigFloatFilter>;
  feesEarnedValueUsd?: InputMaybe<BigFloatFilter>;
  filledAmount?: InputMaybe<BigFloatFilter>;
  filledAmountValueUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
  originalSellAmount?: InputMaybe<BigFloatFilter>;
  originalSellAmountValueUsd?: InputMaybe<BigFloatFilter>;
  sellAmount?: InputMaybe<BigFloatFilter>;
  sellAmountValueUsd?: InputMaybe<BigFloatFilter>;
  tick?: InputMaybe<BigFloatFilter>;
};

export type LimitOrderFillVarianceSampleAggregates = {
  __typename?: 'LimitOrderFillVarianceSampleAggregates';
  /** Sample variance of block across the matching connection */
  block?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of feesEarned across the matching connection */
  feesEarned?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of feesEarnedValueUsd across the matching connection */
  feesEarnedValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of filledAmount across the matching connection */
  filledAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of filledAmountValueUsd across the matching connection */
  filledAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of originalSellAmount across the matching connection */
  originalSellAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of originalSellAmountValueUsd across the matching connection */
  originalSellAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of sellAmount across the matching connection */
  sellAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of sellAmountValueUsd across the matching connection */
  sellAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of tick across the matching connection */
  tick?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `LimitOrderFill` values. */
export type LimitOrderFillsConnection = {
  __typename?: 'LimitOrderFillsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<LimitOrderFillAggregates>;
  /** A list of edges which contains the `LimitOrderFill` and cursor to aid in pagination. */
  edges: Array<LimitOrderFillsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<LimitOrderFillAggregates>>;
  /** A list of `LimitOrderFill` objects. */
  nodes: Array<LimitOrderFill>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `LimitOrderFill` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `LimitOrderFill` values. */
export type LimitOrderFillsConnectionGroupedAggregatesArgs = {
  groupBy: Array<LimitOrderFillGroupBy>;
  having?: InputMaybe<LimitOrderFillHavingInput>;
};

/** A `LimitOrderFill` edge in the connection. */
export type LimitOrderFillsEdge = {
  __typename?: 'LimitOrderFillsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `LimitOrderFill` at the end of the edge. */
  node: LimitOrderFill;
};

/** Methods to use when ordering `LimitOrderFill`. */
export type LimitOrderFillsOrderBy =
  | 'BASE_ASSET_ASC'
  | 'BASE_ASSET_DESC'
  | 'BLOCK_ASC'
  | 'BLOCK_DESC'
  | 'BLOCK_TIMESTAMP_ASC'
  | 'BLOCK_TIMESTAMP_DESC'
  | 'FEES_EARNED_ASC'
  | 'FEES_EARNED_DESC'
  | 'FEES_EARNED_VALUE_USD_ASC'
  | 'FEES_EARNED_VALUE_USD_DESC'
  | 'FILLED_AMOUNT_ASC'
  | 'FILLED_AMOUNT_DESC'
  | 'FILLED_AMOUNT_VALUE_USD_ASC'
  | 'FILLED_AMOUNT_VALUE_USD_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_ID_DESC'
  | 'NATURAL'
  | 'ORDER_ID_ASC'
  | 'ORDER_ID_DESC'
  | 'ORIGINAL_SELL_AMOUNT_ASC'
  | 'ORIGINAL_SELL_AMOUNT_DESC'
  | 'ORIGINAL_SELL_AMOUNT_VALUE_USD_ASC'
  | 'ORIGINAL_SELL_AMOUNT_VALUE_USD_DESC'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'SELL_AMOUNT_ASC'
  | 'SELL_AMOUNT_DESC'
  | 'SELL_AMOUNT_VALUE_USD_ASC'
  | 'SELL_AMOUNT_VALUE_USD_DESC'
  | 'TICK_ASC'
  | 'TICK_DESC'
  | 'TYPE_ASC'
  | 'TYPE_DESC';

export type LimitOrderType =
  | 'Ask'
  | 'Bid';

/** A filter to be used against LimitOrderType fields. All fields are combined with a logical ‘and.’ */
export type LimitOrderTypeFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<LimitOrderType>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<LimitOrderType>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<LimitOrderType>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<LimitOrderType>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<LimitOrderType>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<LimitOrderType>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<LimitOrderType>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<LimitOrderType>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<LimitOrderType>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<LimitOrderType>>;
};

/** A connection to a list of `LiquidityProviderBoostPoolSummary` values. */
export type LiquidityProviderBoostPoolSummariesConnection = {
  __typename?: 'LiquidityProviderBoostPoolSummariesConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<LiquidityProviderBoostPoolSummaryAggregates>;
  /** A list of edges which contains the `LiquidityProviderBoostPoolSummary` and cursor to aid in pagination. */
  edges: Array<LiquidityProviderBoostPoolSummariesEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<LiquidityProviderBoostPoolSummaryAggregates>>;
  /** A list of `LiquidityProviderBoostPoolSummary` objects. */
  nodes: Array<LiquidityProviderBoostPoolSummary>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `LiquidityProviderBoostPoolSummary` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `LiquidityProviderBoostPoolSummary` values. */
export type LiquidityProviderBoostPoolSummariesConnectionGroupedAggregatesArgs = {
  groupBy: Array<LiquidityProviderBoostPoolSummaryGroupBy>;
  having?: InputMaybe<LiquidityProviderBoostPoolSummaryHavingInput>;
};

/** A `LiquidityProviderBoostPoolSummary` edge in the connection. */
export type LiquidityProviderBoostPoolSummariesEdge = {
  __typename?: 'LiquidityProviderBoostPoolSummariesEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `LiquidityProviderBoostPoolSummary` at the end of the edge. */
  node: LiquidityProviderBoostPoolSummary;
};

/** Methods to use when ordering `LiquidityProviderBoostPoolSummary`. */
export type LiquidityProviderBoostPoolSummariesOrderBy =
  | 'AMOUNT_ASC'
  | 'AMOUNT_DESC'
  | 'AMOUNT_USD_ASC'
  | 'AMOUNT_USD_DESC'
  | 'BOOST_POOL_ID_ASC'
  | 'BOOST_POOL_ID_DESC'
  | 'FEE_ASC'
  | 'FEE_DESC'
  | 'FEE_USD_ASC'
  | 'FEE_USD_DESC'
  | 'LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_ID_DESC'
  | 'NATURAL';

export type LiquidityProviderBoostPoolSummary = {
  __typename?: 'LiquidityProviderBoostPoolSummary';
  /** Reads a single `Account` that is related to this `LiquidityProviderBoostPoolSummary`. */
  accountByLiquidityProviderId?: Maybe<Account>;
  amount: Scalars['BigFloat']['output'];
  amountUsd: Scalars['BigFloat']['output'];
  /** Reads a single `BoostPool` that is related to this `LiquidityProviderBoostPoolSummary`. */
  boostPoolByBoostPoolId?: Maybe<BoostPool>;
  boostPoolId: Scalars['Int']['output'];
  fee: Scalars['BigFloat']['output'];
  feeUsd: Scalars['BigFloat']['output'];
  liquidityProviderId: Scalars['Int']['output'];
};

export type LiquidityProviderBoostPoolSummaryAggregates = {
  __typename?: 'LiquidityProviderBoostPoolSummaryAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<LiquidityProviderBoostPoolSummaryAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<LiquidityProviderBoostPoolSummaryDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<LiquidityProviderBoostPoolSummaryMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<LiquidityProviderBoostPoolSummaryMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<LiquidityProviderBoostPoolSummaryStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<LiquidityProviderBoostPoolSummaryStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<LiquidityProviderBoostPoolSummarySumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<LiquidityProviderBoostPoolSummaryVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<LiquidityProviderBoostPoolSummaryVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `LiquidityProviderBoostPoolSummary` object types. */
export type LiquidityProviderBoostPoolSummaryAggregatesFilter = {
  /** Mean average aggregate over matching `LiquidityProviderBoostPoolSummary` objects. */
  average?: InputMaybe<LiquidityProviderBoostPoolSummaryAverageAggregateFilter>;
  /** Distinct count aggregate over matching `LiquidityProviderBoostPoolSummary` objects. */
  distinctCount?: InputMaybe<LiquidityProviderBoostPoolSummaryDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `LiquidityProviderBoostPoolSummary` object to be included within the aggregate. */
  filter?: InputMaybe<LiquidityProviderBoostPoolSummaryFilter>;
  /** Maximum aggregate over matching `LiquidityProviderBoostPoolSummary` objects. */
  max?: InputMaybe<LiquidityProviderBoostPoolSummaryMaxAggregateFilter>;
  /** Minimum aggregate over matching `LiquidityProviderBoostPoolSummary` objects. */
  min?: InputMaybe<LiquidityProviderBoostPoolSummaryMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `LiquidityProviderBoostPoolSummary` objects. */
  stddevPopulation?: InputMaybe<LiquidityProviderBoostPoolSummaryStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `LiquidityProviderBoostPoolSummary` objects. */
  stddevSample?: InputMaybe<LiquidityProviderBoostPoolSummaryStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `LiquidityProviderBoostPoolSummary` objects. */
  sum?: InputMaybe<LiquidityProviderBoostPoolSummarySumAggregateFilter>;
  /** Population variance aggregate over matching `LiquidityProviderBoostPoolSummary` objects. */
  variancePopulation?: InputMaybe<LiquidityProviderBoostPoolSummaryVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `LiquidityProviderBoostPoolSummary` objects. */
  varianceSample?: InputMaybe<LiquidityProviderBoostPoolSummaryVarianceSampleAggregateFilter>;
};

export type LiquidityProviderBoostPoolSummaryAverageAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<BigFloatFilter>;
  fee?: InputMaybe<BigFloatFilter>;
  feeUsd?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
};

export type LiquidityProviderBoostPoolSummaryAverageAggregates = {
  __typename?: 'LiquidityProviderBoostPoolSummaryAverageAggregates';
  /** Mean average of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `LiquidityProviderBoostPoolSummary` object types.
 * All fields are tested for equality and combined with a logical ‘and.’
 */
export type LiquidityProviderBoostPoolSummaryCondition = {
  /** Checks for equality with the object’s `amount` field. */
  amount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `amountUsd` field. */
  amountUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `boostPoolId` field. */
  boostPoolId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `fee` field. */
  fee?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `feeUsd` field. */
  feeUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `liquidityProviderId` field. */
  liquidityProviderId?: InputMaybe<Scalars['Int']['input']>;
};

export type LiquidityProviderBoostPoolSummaryDistinctCountAggregateFilter = {
  amount?: InputMaybe<BigIntFilter>;
  amountUsd?: InputMaybe<BigIntFilter>;
  boostPoolId?: InputMaybe<BigIntFilter>;
  fee?: InputMaybe<BigIntFilter>;
  feeUsd?: InputMaybe<BigIntFilter>;
  liquidityProviderId?: InputMaybe<BigIntFilter>;
};

export type LiquidityProviderBoostPoolSummaryDistinctCountAggregates = {
  __typename?: 'LiquidityProviderBoostPoolSummaryDistinctCountAggregates';
  /** Distinct count of amount across the matching connection */
  amount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of fee across the matching connection */
  fee?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `LiquidityProviderBoostPoolSummary` object types. All fields are combined with a logical ‘and.’ */
export type LiquidityProviderBoostPoolSummaryFilter = {
  /** Filter by the object’s `accountByLiquidityProviderId` relation. */
  accountByLiquidityProviderId?: InputMaybe<AccountFilter>;
  /** A related `accountByLiquidityProviderId` exists. */
  accountByLiquidityProviderIdExists?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `amount` field. */
  amount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `amountUsd` field. */
  amountUsd?: InputMaybe<BigFloatFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<LiquidityProviderBoostPoolSummaryFilter>>;
  /** Filter by the object’s `boostPoolByBoostPoolId` relation. */
  boostPoolByBoostPoolId?: InputMaybe<BoostPoolFilter>;
  /** A related `boostPoolByBoostPoolId` exists. */
  boostPoolByBoostPoolIdExists?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `boostPoolId` field. */
  boostPoolId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `fee` field. */
  fee?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `feeUsd` field. */
  feeUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `liquidityProviderId` field. */
  liquidityProviderId?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<LiquidityProviderBoostPoolSummaryFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<LiquidityProviderBoostPoolSummaryFilter>>;
};

/** Grouping methods for `LiquidityProviderBoostPoolSummary` for usage during aggregation. */
export type LiquidityProviderBoostPoolSummaryGroupBy =
  | 'AMOUNT'
  | 'AMOUNT_USD'
  | 'BOOST_POOL_ID'
  | 'FEE'
  | 'FEE_USD'
  | 'LIQUIDITY_PROVIDER_ID';

export type LiquidityProviderBoostPoolSummaryHavingAverageInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type LiquidityProviderBoostPoolSummaryHavingDistinctCountInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `LiquidityProviderBoostPoolSummary` aggregates. */
export type LiquidityProviderBoostPoolSummaryHavingInput = {
  AND?: InputMaybe<Array<LiquidityProviderBoostPoolSummaryHavingInput>>;
  OR?: InputMaybe<Array<LiquidityProviderBoostPoolSummaryHavingInput>>;
  average?: InputMaybe<LiquidityProviderBoostPoolSummaryHavingAverageInput>;
  distinctCount?: InputMaybe<LiquidityProviderBoostPoolSummaryHavingDistinctCountInput>;
  max?: InputMaybe<LiquidityProviderBoostPoolSummaryHavingMaxInput>;
  min?: InputMaybe<LiquidityProviderBoostPoolSummaryHavingMinInput>;
  stddevPopulation?: InputMaybe<LiquidityProviderBoostPoolSummaryHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<LiquidityProviderBoostPoolSummaryHavingStddevSampleInput>;
  sum?: InputMaybe<LiquidityProviderBoostPoolSummaryHavingSumInput>;
  variancePopulation?: InputMaybe<LiquidityProviderBoostPoolSummaryHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<LiquidityProviderBoostPoolSummaryHavingVarianceSampleInput>;
};

export type LiquidityProviderBoostPoolSummaryHavingMaxInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type LiquidityProviderBoostPoolSummaryHavingMinInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type LiquidityProviderBoostPoolSummaryHavingStddevPopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type LiquidityProviderBoostPoolSummaryHavingStddevSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type LiquidityProviderBoostPoolSummaryHavingSumInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type LiquidityProviderBoostPoolSummaryHavingVariancePopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type LiquidityProviderBoostPoolSummaryHavingVarianceSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  boostPoolId?: InputMaybe<HavingIntFilter>;
  fee?: InputMaybe<HavingBigfloatFilter>;
  feeUsd?: InputMaybe<HavingBigfloatFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
};

export type LiquidityProviderBoostPoolSummaryMaxAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<IntFilter>;
  fee?: InputMaybe<BigFloatFilter>;
  feeUsd?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<IntFilter>;
};

export type LiquidityProviderBoostPoolSummaryMaxAggregates = {
  __typename?: 'LiquidityProviderBoostPoolSummaryMaxAggregates';
  /** Maximum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
};

export type LiquidityProviderBoostPoolSummaryMinAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<IntFilter>;
  fee?: InputMaybe<BigFloatFilter>;
  feeUsd?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<IntFilter>;
};

export type LiquidityProviderBoostPoolSummaryMinAggregates = {
  __typename?: 'LiquidityProviderBoostPoolSummaryMinAggregates';
  /** Minimum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
};

export type LiquidityProviderBoostPoolSummaryStddevPopulationAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<BigFloatFilter>;
  fee?: InputMaybe<BigFloatFilter>;
  feeUsd?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
};

export type LiquidityProviderBoostPoolSummaryStddevPopulationAggregates = {
  __typename?: 'LiquidityProviderBoostPoolSummaryStddevPopulationAggregates';
  /** Population standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
};

export type LiquidityProviderBoostPoolSummaryStddevSampleAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<BigFloatFilter>;
  fee?: InputMaybe<BigFloatFilter>;
  feeUsd?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
};

export type LiquidityProviderBoostPoolSummaryStddevSampleAggregates = {
  __typename?: 'LiquidityProviderBoostPoolSummaryStddevSampleAggregates';
  /** Sample standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
};

export type LiquidityProviderBoostPoolSummarySumAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<BigIntFilter>;
  fee?: InputMaybe<BigFloatFilter>;
  feeUsd?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigIntFilter>;
};

export type LiquidityProviderBoostPoolSummarySumAggregates = {
  __typename?: 'LiquidityProviderBoostPoolSummarySumAggregates';
  /** Sum of amount across the matching connection */
  amount: Scalars['BigFloat']['output'];
  /** Sum of amountUsd across the matching connection */
  amountUsd: Scalars['BigFloat']['output'];
  /** Sum of boostPoolId across the matching connection */
  boostPoolId: Scalars['BigInt']['output'];
  /** Sum of fee across the matching connection */
  fee: Scalars['BigFloat']['output'];
  /** Sum of feeUsd across the matching connection */
  feeUsd: Scalars['BigFloat']['output'];
  /** Sum of liquidityProviderId across the matching connection */
  liquidityProviderId: Scalars['BigInt']['output'];
};

export type LiquidityProviderBoostPoolSummaryVariancePopulationAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<BigFloatFilter>;
  fee?: InputMaybe<BigFloatFilter>;
  feeUsd?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
};

export type LiquidityProviderBoostPoolSummaryVariancePopulationAggregates = {
  __typename?: 'LiquidityProviderBoostPoolSummaryVariancePopulationAggregates';
  /** Population variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
};

export type LiquidityProviderBoostPoolSummaryVarianceSampleAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  boostPoolId?: InputMaybe<BigFloatFilter>;
  fee?: InputMaybe<BigFloatFilter>;
  feeUsd?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
};

export type LiquidityProviderBoostPoolSummaryVarianceSampleAggregates = {
  __typename?: 'LiquidityProviderBoostPoolSummaryVarianceSampleAggregates';
  /** Sample variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of boostPoolId across the matching connection */
  boostPoolId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of fee across the matching connection */
  fee?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of feeUsd across the matching connection */
  feeUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
};

export type LiquiditySnapshot = Node & {
  __typename?: 'LiquiditySnapshot';
  /** Reads a single `Account` that is related to this `LiquiditySnapshot`. */
  accountByLiquidityProviderId: Account;
  block: Scalars['Int']['output'];
  boostLiquidityUsd: Scalars['BigFloat']['output'];
  deployedLiquidityUsd: Scalars['BigFloat']['output'];
  id: Scalars['BigInt']['output'];
  liquidityProviderId: Scalars['Int']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  pnl1HUsd: Scalars['BigFloat']['output'];
  strategyLiquidityUsd: Scalars['BigFloat']['output'];
  timestamp: Scalars['Datetime']['output'];
  totalLiquidityUsd: Scalars['BigFloat']['output'];
  undeployedLiquidityUsd: Scalars['BigFloat']['output'];
};

export type LiquiditySnapshotAggregates = {
  __typename?: 'LiquiditySnapshotAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<LiquiditySnapshotAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<LiquiditySnapshotDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<LiquiditySnapshotMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<LiquiditySnapshotMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<LiquiditySnapshotStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<LiquiditySnapshotStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<LiquiditySnapshotSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<LiquiditySnapshotVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<LiquiditySnapshotVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `LiquiditySnapshot` object types. */
export type LiquiditySnapshotAggregatesFilter = {
  /** Mean average aggregate over matching `LiquiditySnapshot` objects. */
  average?: InputMaybe<LiquiditySnapshotAverageAggregateFilter>;
  /** Distinct count aggregate over matching `LiquiditySnapshot` objects. */
  distinctCount?: InputMaybe<LiquiditySnapshotDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `LiquiditySnapshot` object to be included within the aggregate. */
  filter?: InputMaybe<LiquiditySnapshotFilter>;
  /** Maximum aggregate over matching `LiquiditySnapshot` objects. */
  max?: InputMaybe<LiquiditySnapshotMaxAggregateFilter>;
  /** Minimum aggregate over matching `LiquiditySnapshot` objects. */
  min?: InputMaybe<LiquiditySnapshotMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `LiquiditySnapshot` objects. */
  stddevPopulation?: InputMaybe<LiquiditySnapshotStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `LiquiditySnapshot` objects. */
  stddevSample?: InputMaybe<LiquiditySnapshotStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `LiquiditySnapshot` objects. */
  sum?: InputMaybe<LiquiditySnapshotSumAggregateFilter>;
  /** Population variance aggregate over matching `LiquiditySnapshot` objects. */
  variancePopulation?: InputMaybe<LiquiditySnapshotVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `LiquiditySnapshot` objects. */
  varianceSample?: InputMaybe<LiquiditySnapshotVarianceSampleAggregateFilter>;
};

export type LiquiditySnapshotAverageAggregateFilter = {
  block?: InputMaybe<BigFloatFilter>;
  boostLiquidityUsd?: InputMaybe<BigFloatFilter>;
  deployedLiquidityUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
  pnl1HUsd?: InputMaybe<BigFloatFilter>;
  strategyLiquidityUsd?: InputMaybe<BigFloatFilter>;
  totalLiquidityUsd?: InputMaybe<BigFloatFilter>;
  undeployedLiquidityUsd?: InputMaybe<BigFloatFilter>;
};

export type LiquiditySnapshotAverageAggregates = {
  __typename?: 'LiquiditySnapshotAverageAggregates';
  /** Mean average of block across the matching connection */
  block?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of boostLiquidityUsd across the matching connection */
  boostLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of deployedLiquidityUsd across the matching connection */
  deployedLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of pnl1HUsd across the matching connection */
  pnl1HUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of strategyLiquidityUsd across the matching connection */
  strategyLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of totalLiquidityUsd across the matching connection */
  totalLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of undeployedLiquidityUsd across the matching connection */
  undeployedLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `LiquiditySnapshot` object types. All fields are
 * tested for equality and combined with a logical ‘and.’
 */
export type LiquiditySnapshotCondition = {
  /** Checks for equality with the object’s `block` field. */
  block?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `boostLiquidityUsd` field. */
  boostLiquidityUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `deployedLiquidityUsd` field. */
  deployedLiquidityUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `liquidityProviderId` field. */
  liquidityProviderId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `pnl1HUsd` field. */
  pnl1HUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `strategyLiquidityUsd` field. */
  strategyLiquidityUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `timestamp` field. */
  timestamp?: InputMaybe<Scalars['Datetime']['input']>;
  /** Checks for equality with the object’s `totalLiquidityUsd` field. */
  totalLiquidityUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `undeployedLiquidityUsd` field. */
  undeployedLiquidityUsd?: InputMaybe<Scalars['BigFloat']['input']>;
};

export type LiquiditySnapshotDistinctCountAggregateFilter = {
  block?: InputMaybe<BigIntFilter>;
  boostLiquidityUsd?: InputMaybe<BigIntFilter>;
  deployedLiquidityUsd?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  liquidityProviderId?: InputMaybe<BigIntFilter>;
  pnl1HUsd?: InputMaybe<BigIntFilter>;
  strategyLiquidityUsd?: InputMaybe<BigIntFilter>;
  timestamp?: InputMaybe<BigIntFilter>;
  totalLiquidityUsd?: InputMaybe<BigIntFilter>;
  undeployedLiquidityUsd?: InputMaybe<BigIntFilter>;
};

export type LiquiditySnapshotDistinctCountAggregates = {
  __typename?: 'LiquiditySnapshotDistinctCountAggregates';
  /** Distinct count of block across the matching connection */
  block?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of boostLiquidityUsd across the matching connection */
  boostLiquidityUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of deployedLiquidityUsd across the matching connection */
  deployedLiquidityUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of pnl1HUsd across the matching connection */
  pnl1HUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of strategyLiquidityUsd across the matching connection */
  strategyLiquidityUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of timestamp across the matching connection */
  timestamp?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of totalLiquidityUsd across the matching connection */
  totalLiquidityUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of undeployedLiquidityUsd across the matching connection */
  undeployedLiquidityUsd?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `LiquiditySnapshot` object types. All fields are combined with a logical ‘and.’ */
export type LiquiditySnapshotFilter = {
  /** Filter by the object’s `accountByLiquidityProviderId` relation. */
  accountByLiquidityProviderId?: InputMaybe<AccountFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<LiquiditySnapshotFilter>>;
  /** Filter by the object’s `block` field. */
  block?: InputMaybe<IntFilter>;
  /** Filter by the object’s `boostLiquidityUsd` field. */
  boostLiquidityUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `deployedLiquidityUsd` field. */
  deployedLiquidityUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `liquidityProviderId` field. */
  liquidityProviderId?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<LiquiditySnapshotFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<LiquiditySnapshotFilter>>;
  /** Filter by the object’s `pnl1HUsd` field. */
  pnl1HUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `strategyLiquidityUsd` field. */
  strategyLiquidityUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `timestamp` field. */
  timestamp?: InputMaybe<DatetimeFilter>;
  /** Filter by the object’s `totalLiquidityUsd` field. */
  totalLiquidityUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `undeployedLiquidityUsd` field. */
  undeployedLiquidityUsd?: InputMaybe<BigFloatFilter>;
};

/** Grouping methods for `LiquiditySnapshot` for usage during aggregation. */
export type LiquiditySnapshotGroupBy =
  | 'BLOCK'
  | 'BOOST_LIQUIDITY_USD'
  | 'DEPLOYED_LIQUIDITY_USD'
  | 'LIQUIDITY_PROVIDER_ID'
  | 'PNL1H_USD'
  | 'STRATEGY_LIQUIDITY_USD'
  | 'TIMESTAMP'
  | 'TIMESTAMP_TRUNCATED_TO_DAY'
  | 'TIMESTAMP_TRUNCATED_TO_HOUR'
  | 'TOTAL_LIQUIDITY_USD'
  | 'UNDEPLOYED_LIQUIDITY_USD';

export type LiquiditySnapshotHavingAverageInput = {
  block?: InputMaybe<HavingIntFilter>;
  boostLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  deployedLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  pnl1HUsd?: InputMaybe<HavingBigfloatFilter>;
  strategyLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  totalLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  undeployedLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type LiquiditySnapshotHavingDistinctCountInput = {
  block?: InputMaybe<HavingIntFilter>;
  boostLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  deployedLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  pnl1HUsd?: InputMaybe<HavingBigfloatFilter>;
  strategyLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  totalLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  undeployedLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
};

/** Conditions for `LiquiditySnapshot` aggregates. */
export type LiquiditySnapshotHavingInput = {
  AND?: InputMaybe<Array<LiquiditySnapshotHavingInput>>;
  OR?: InputMaybe<Array<LiquiditySnapshotHavingInput>>;
  average?: InputMaybe<LiquiditySnapshotHavingAverageInput>;
  distinctCount?: InputMaybe<LiquiditySnapshotHavingDistinctCountInput>;
  max?: InputMaybe<LiquiditySnapshotHavingMaxInput>;
  min?: InputMaybe<LiquiditySnapshotHavingMinInput>;
  stddevPopulation?: InputMaybe<LiquiditySnapshotHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<LiquiditySnapshotHavingStddevSampleInput>;
  sum?: InputMaybe<LiquiditySnapshotHavingSumInput>;
  variancePopulation?: InputMaybe<LiquiditySnapshotHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<LiquiditySnapshotHavingVarianceSampleInput>;
};

export type LiquiditySnapshotHavingMaxInput = {
  block?: InputMaybe<HavingIntFilter>;
  boostLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  deployedLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  pnl1HUsd?: InputMaybe<HavingBigfloatFilter>;
  strategyLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  totalLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  undeployedLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type LiquiditySnapshotHavingMinInput = {
  block?: InputMaybe<HavingIntFilter>;
  boostLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  deployedLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  pnl1HUsd?: InputMaybe<HavingBigfloatFilter>;
  strategyLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  totalLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  undeployedLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type LiquiditySnapshotHavingStddevPopulationInput = {
  block?: InputMaybe<HavingIntFilter>;
  boostLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  deployedLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  pnl1HUsd?: InputMaybe<HavingBigfloatFilter>;
  strategyLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  totalLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  undeployedLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type LiquiditySnapshotHavingStddevSampleInput = {
  block?: InputMaybe<HavingIntFilter>;
  boostLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  deployedLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  pnl1HUsd?: InputMaybe<HavingBigfloatFilter>;
  strategyLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  totalLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  undeployedLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type LiquiditySnapshotHavingSumInput = {
  block?: InputMaybe<HavingIntFilter>;
  boostLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  deployedLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  pnl1HUsd?: InputMaybe<HavingBigfloatFilter>;
  strategyLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  totalLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  undeployedLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type LiquiditySnapshotHavingVariancePopulationInput = {
  block?: InputMaybe<HavingIntFilter>;
  boostLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  deployedLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  pnl1HUsd?: InputMaybe<HavingBigfloatFilter>;
  strategyLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  totalLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  undeployedLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type LiquiditySnapshotHavingVarianceSampleInput = {
  block?: InputMaybe<HavingIntFilter>;
  boostLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  deployedLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  pnl1HUsd?: InputMaybe<HavingBigfloatFilter>;
  strategyLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  timestamp?: InputMaybe<HavingDatetimeFilter>;
  totalLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
  undeployedLiquidityUsd?: InputMaybe<HavingBigfloatFilter>;
};

export type LiquiditySnapshotMaxAggregateFilter = {
  block?: InputMaybe<IntFilter>;
  boostLiquidityUsd?: InputMaybe<BigFloatFilter>;
  deployedLiquidityUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigIntFilter>;
  liquidityProviderId?: InputMaybe<IntFilter>;
  pnl1HUsd?: InputMaybe<BigFloatFilter>;
  strategyLiquidityUsd?: InputMaybe<BigFloatFilter>;
  totalLiquidityUsd?: InputMaybe<BigFloatFilter>;
  undeployedLiquidityUsd?: InputMaybe<BigFloatFilter>;
};

export type LiquiditySnapshotMaxAggregates = {
  __typename?: 'LiquiditySnapshotMaxAggregates';
  /** Maximum of block across the matching connection */
  block?: Maybe<Scalars['Int']['output']>;
  /** Maximum of boostLiquidityUsd across the matching connection */
  boostLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of deployedLiquidityUsd across the matching connection */
  deployedLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of pnl1HUsd across the matching connection */
  pnl1HUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of strategyLiquidityUsd across the matching connection */
  strategyLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of totalLiquidityUsd across the matching connection */
  totalLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of undeployedLiquidityUsd across the matching connection */
  undeployedLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type LiquiditySnapshotMinAggregateFilter = {
  block?: InputMaybe<IntFilter>;
  boostLiquidityUsd?: InputMaybe<BigFloatFilter>;
  deployedLiquidityUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigIntFilter>;
  liquidityProviderId?: InputMaybe<IntFilter>;
  pnl1HUsd?: InputMaybe<BigFloatFilter>;
  strategyLiquidityUsd?: InputMaybe<BigFloatFilter>;
  totalLiquidityUsd?: InputMaybe<BigFloatFilter>;
  undeployedLiquidityUsd?: InputMaybe<BigFloatFilter>;
};

export type LiquiditySnapshotMinAggregates = {
  __typename?: 'LiquiditySnapshotMinAggregates';
  /** Minimum of block across the matching connection */
  block?: Maybe<Scalars['Int']['output']>;
  /** Minimum of boostLiquidityUsd across the matching connection */
  boostLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of deployedLiquidityUsd across the matching connection */
  deployedLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of pnl1HUsd across the matching connection */
  pnl1HUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of strategyLiquidityUsd across the matching connection */
  strategyLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of totalLiquidityUsd across the matching connection */
  totalLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of undeployedLiquidityUsd across the matching connection */
  undeployedLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type LiquiditySnapshotStddevPopulationAggregateFilter = {
  block?: InputMaybe<BigFloatFilter>;
  boostLiquidityUsd?: InputMaybe<BigFloatFilter>;
  deployedLiquidityUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
  pnl1HUsd?: InputMaybe<BigFloatFilter>;
  strategyLiquidityUsd?: InputMaybe<BigFloatFilter>;
  totalLiquidityUsd?: InputMaybe<BigFloatFilter>;
  undeployedLiquidityUsd?: InputMaybe<BigFloatFilter>;
};

export type LiquiditySnapshotStddevPopulationAggregates = {
  __typename?: 'LiquiditySnapshotStddevPopulationAggregates';
  /** Population standard deviation of block across the matching connection */
  block?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of boostLiquidityUsd across the matching connection */
  boostLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of deployedLiquidityUsd across the matching connection */
  deployedLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of pnl1HUsd across the matching connection */
  pnl1HUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of strategyLiquidityUsd across the matching connection */
  strategyLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of totalLiquidityUsd across the matching connection */
  totalLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of undeployedLiquidityUsd across the matching connection */
  undeployedLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type LiquiditySnapshotStddevSampleAggregateFilter = {
  block?: InputMaybe<BigFloatFilter>;
  boostLiquidityUsd?: InputMaybe<BigFloatFilter>;
  deployedLiquidityUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
  pnl1HUsd?: InputMaybe<BigFloatFilter>;
  strategyLiquidityUsd?: InputMaybe<BigFloatFilter>;
  totalLiquidityUsd?: InputMaybe<BigFloatFilter>;
  undeployedLiquidityUsd?: InputMaybe<BigFloatFilter>;
};

export type LiquiditySnapshotStddevSampleAggregates = {
  __typename?: 'LiquiditySnapshotStddevSampleAggregates';
  /** Sample standard deviation of block across the matching connection */
  block?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of boostLiquidityUsd across the matching connection */
  boostLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of deployedLiquidityUsd across the matching connection */
  deployedLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of pnl1HUsd across the matching connection */
  pnl1HUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of strategyLiquidityUsd across the matching connection */
  strategyLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of totalLiquidityUsd across the matching connection */
  totalLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of undeployedLiquidityUsd across the matching connection */
  undeployedLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type LiquiditySnapshotSumAggregateFilter = {
  block?: InputMaybe<BigIntFilter>;
  boostLiquidityUsd?: InputMaybe<BigFloatFilter>;
  deployedLiquidityUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigIntFilter>;
  pnl1HUsd?: InputMaybe<BigFloatFilter>;
  strategyLiquidityUsd?: InputMaybe<BigFloatFilter>;
  totalLiquidityUsd?: InputMaybe<BigFloatFilter>;
  undeployedLiquidityUsd?: InputMaybe<BigFloatFilter>;
};

export type LiquiditySnapshotSumAggregates = {
  __typename?: 'LiquiditySnapshotSumAggregates';
  /** Sum of block across the matching connection */
  block: Scalars['BigInt']['output'];
  /** Sum of boostLiquidityUsd across the matching connection */
  boostLiquidityUsd: Scalars['BigFloat']['output'];
  /** Sum of deployedLiquidityUsd across the matching connection */
  deployedLiquidityUsd: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigFloat']['output'];
  /** Sum of liquidityProviderId across the matching connection */
  liquidityProviderId: Scalars['BigInt']['output'];
  /** Sum of pnl1HUsd across the matching connection */
  pnl1HUsd: Scalars['BigFloat']['output'];
  /** Sum of strategyLiquidityUsd across the matching connection */
  strategyLiquidityUsd: Scalars['BigFloat']['output'];
  /** Sum of totalLiquidityUsd across the matching connection */
  totalLiquidityUsd: Scalars['BigFloat']['output'];
  /** Sum of undeployedLiquidityUsd across the matching connection */
  undeployedLiquidityUsd: Scalars['BigFloat']['output'];
};

export type LiquiditySnapshotVariancePopulationAggregateFilter = {
  block?: InputMaybe<BigFloatFilter>;
  boostLiquidityUsd?: InputMaybe<BigFloatFilter>;
  deployedLiquidityUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
  pnl1HUsd?: InputMaybe<BigFloatFilter>;
  strategyLiquidityUsd?: InputMaybe<BigFloatFilter>;
  totalLiquidityUsd?: InputMaybe<BigFloatFilter>;
  undeployedLiquidityUsd?: InputMaybe<BigFloatFilter>;
};

export type LiquiditySnapshotVariancePopulationAggregates = {
  __typename?: 'LiquiditySnapshotVariancePopulationAggregates';
  /** Population variance of block across the matching connection */
  block?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of boostLiquidityUsd across the matching connection */
  boostLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of deployedLiquidityUsd across the matching connection */
  deployedLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of pnl1HUsd across the matching connection */
  pnl1HUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of strategyLiquidityUsd across the matching connection */
  strategyLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of totalLiquidityUsd across the matching connection */
  totalLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of undeployedLiquidityUsd across the matching connection */
  undeployedLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
};

export type LiquiditySnapshotVarianceSampleAggregateFilter = {
  block?: InputMaybe<BigFloatFilter>;
  boostLiquidityUsd?: InputMaybe<BigFloatFilter>;
  deployedLiquidityUsd?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
  pnl1HUsd?: InputMaybe<BigFloatFilter>;
  strategyLiquidityUsd?: InputMaybe<BigFloatFilter>;
  totalLiquidityUsd?: InputMaybe<BigFloatFilter>;
  undeployedLiquidityUsd?: InputMaybe<BigFloatFilter>;
};

export type LiquiditySnapshotVarianceSampleAggregates = {
  __typename?: 'LiquiditySnapshotVarianceSampleAggregates';
  /** Sample variance of block across the matching connection */
  block?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of boostLiquidityUsd across the matching connection */
  boostLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of deployedLiquidityUsd across the matching connection */
  deployedLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of pnl1HUsd across the matching connection */
  pnl1HUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of strategyLiquidityUsd across the matching connection */
  strategyLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of totalLiquidityUsd across the matching connection */
  totalLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of undeployedLiquidityUsd across the matching connection */
  undeployedLiquidityUsd?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `LiquiditySnapshot` values. */
export type LiquiditySnapshotsConnection = {
  __typename?: 'LiquiditySnapshotsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<LiquiditySnapshotAggregates>;
  /** A list of edges which contains the `LiquiditySnapshot` and cursor to aid in pagination. */
  edges: Array<LiquiditySnapshotsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<LiquiditySnapshotAggregates>>;
  /** A list of `LiquiditySnapshot` objects. */
  nodes: Array<LiquiditySnapshot>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `LiquiditySnapshot` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `LiquiditySnapshot` values. */
export type LiquiditySnapshotsConnectionGroupedAggregatesArgs = {
  groupBy: Array<LiquiditySnapshotGroupBy>;
  having?: InputMaybe<LiquiditySnapshotHavingInput>;
};

/** A `LiquiditySnapshot` edge in the connection. */
export type LiquiditySnapshotsEdge = {
  __typename?: 'LiquiditySnapshotsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `LiquiditySnapshot` at the end of the edge. */
  node: LiquiditySnapshot;
};

/** Methods to use when ordering `LiquiditySnapshot`. */
export type LiquiditySnapshotsOrderBy =
  | 'BLOCK_ASC'
  | 'BLOCK_DESC'
  | 'BOOST_LIQUIDITY_USD_ASC'
  | 'BOOST_LIQUIDITY_USD_DESC'
  | 'DEPLOYED_LIQUIDITY_USD_ASC'
  | 'DEPLOYED_LIQUIDITY_USD_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_ID_DESC'
  | 'NATURAL'
  | 'PNL1H_USD_ASC'
  | 'PNL1H_USD_DESC'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'STRATEGY_LIQUIDITY_USD_ASC'
  | 'STRATEGY_LIQUIDITY_USD_DESC'
  | 'TIMESTAMP_ASC'
  | 'TIMESTAMP_DESC'
  | 'TOTAL_LIQUIDITY_USD_ASC'
  | 'TOTAL_LIQUIDITY_USD_DESC'
  | 'UNDEPLOYED_LIQUIDITY_USD_ASC'
  | 'UNDEPLOYED_LIQUIDITY_USD_DESC';

/** An object with a globally unique `ID`. */
export type Node = {
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
};

/** Information about pagination in a connection. */
export type PageInfo = {
  __typename?: 'PageInfo';
  /** When paginating forwards, the cursor to continue. */
  endCursor?: Maybe<Scalars['Cursor']['output']>;
  /** When paginating forwards, are there more items? */
  hasNextPage: Scalars['Boolean']['output'];
  /** When paginating backwards, are there more items? */
  hasPreviousPage: Scalars['Boolean']['output'];
  /** When paginating backwards, the cursor to continue. */
  startCursor?: Maybe<Scalars['Cursor']['output']>;
};

export type PendingBoostLiquidityWithdrawal = Node & {
  __typename?: 'PendingBoostLiquidityWithdrawal';
  /** Reads a single `Account` that is related to this `PendingBoostLiquidityWithdrawal`. */
  accountByLiquidityProviderId: Account;
  /** Reads a single `Boost` that is related to this `PendingBoostLiquidityWithdrawal`. */
  boostByBoostId: Boost;
  boostId: Scalars['Int']['output'];
  /** Reads a single `Event` that is related to this `PendingBoostLiquidityWithdrawal`. */
  eventByStoppedBoostingEventId: Event;
  finalized: Scalars['Boolean']['output'];
  id: Scalars['Int']['output'];
  liquidityProviderId: Scalars['Int']['output'];
  lost: Scalars['Boolean']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  stoppedBoostingEventId: Scalars['BigInt']['output'];
};

export type PendingBoostLiquidityWithdrawalAggregates = {
  __typename?: 'PendingBoostLiquidityWithdrawalAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<PendingBoostLiquidityWithdrawalAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<PendingBoostLiquidityWithdrawalDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<PendingBoostLiquidityWithdrawalMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<PendingBoostLiquidityWithdrawalMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<PendingBoostLiquidityWithdrawalStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<PendingBoostLiquidityWithdrawalStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<PendingBoostLiquidityWithdrawalSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<PendingBoostLiquidityWithdrawalVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<PendingBoostLiquidityWithdrawalVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `PendingBoostLiquidityWithdrawal` object types. */
export type PendingBoostLiquidityWithdrawalAggregatesFilter = {
  /** Mean average aggregate over matching `PendingBoostLiquidityWithdrawal` objects. */
  average?: InputMaybe<PendingBoostLiquidityWithdrawalAverageAggregateFilter>;
  /** Distinct count aggregate over matching `PendingBoostLiquidityWithdrawal` objects. */
  distinctCount?: InputMaybe<PendingBoostLiquidityWithdrawalDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `PendingBoostLiquidityWithdrawal` object to be included within the aggregate. */
  filter?: InputMaybe<PendingBoostLiquidityWithdrawalFilter>;
  /** Maximum aggregate over matching `PendingBoostLiquidityWithdrawal` objects. */
  max?: InputMaybe<PendingBoostLiquidityWithdrawalMaxAggregateFilter>;
  /** Minimum aggregate over matching `PendingBoostLiquidityWithdrawal` objects. */
  min?: InputMaybe<PendingBoostLiquidityWithdrawalMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `PendingBoostLiquidityWithdrawal` objects. */
  stddevPopulation?: InputMaybe<PendingBoostLiquidityWithdrawalStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `PendingBoostLiquidityWithdrawal` objects. */
  stddevSample?: InputMaybe<PendingBoostLiquidityWithdrawalStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `PendingBoostLiquidityWithdrawal` objects. */
  sum?: InputMaybe<PendingBoostLiquidityWithdrawalSumAggregateFilter>;
  /** Population variance aggregate over matching `PendingBoostLiquidityWithdrawal` objects. */
  variancePopulation?: InputMaybe<PendingBoostLiquidityWithdrawalVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `PendingBoostLiquidityWithdrawal` objects. */
  varianceSample?: InputMaybe<PendingBoostLiquidityWithdrawalVarianceSampleAggregateFilter>;
};

export type PendingBoostLiquidityWithdrawalAverageAggregateFilter = {
  boostId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
  stoppedBoostingEventId?: InputMaybe<BigFloatFilter>;
};

export type PendingBoostLiquidityWithdrawalAverageAggregates = {
  __typename?: 'PendingBoostLiquidityWithdrawalAverageAggregates';
  /** Mean average of boostId across the matching connection */
  boostId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of stoppedBoostingEventId across the matching connection */
  stoppedBoostingEventId?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `PendingBoostLiquidityWithdrawal` object types.
 * All fields are tested for equality and combined with a logical ‘and.’
 */
export type PendingBoostLiquidityWithdrawalCondition = {
  /** Checks for equality with the object’s `boostId` field. */
  boostId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `finalized` field. */
  finalized?: InputMaybe<Scalars['Boolean']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `liquidityProviderId` field. */
  liquidityProviderId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `lost` field. */
  lost?: InputMaybe<Scalars['Boolean']['input']>;
  /** Checks for equality with the object’s `stoppedBoostingEventId` field. */
  stoppedBoostingEventId?: InputMaybe<Scalars['BigInt']['input']>;
};

export type PendingBoostLiquidityWithdrawalDistinctCountAggregateFilter = {
  boostId?: InputMaybe<BigIntFilter>;
  finalized?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  liquidityProviderId?: InputMaybe<BigIntFilter>;
  lost?: InputMaybe<BigIntFilter>;
  stoppedBoostingEventId?: InputMaybe<BigIntFilter>;
};

export type PendingBoostLiquidityWithdrawalDistinctCountAggregates = {
  __typename?: 'PendingBoostLiquidityWithdrawalDistinctCountAggregates';
  /** Distinct count of boostId across the matching connection */
  boostId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of finalized across the matching connection */
  finalized?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of lost across the matching connection */
  lost?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of stoppedBoostingEventId across the matching connection */
  stoppedBoostingEventId?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `PendingBoostLiquidityWithdrawal` object types. All fields are combined with a logical ‘and.’ */
export type PendingBoostLiquidityWithdrawalFilter = {
  /** Filter by the object’s `accountByLiquidityProviderId` relation. */
  accountByLiquidityProviderId?: InputMaybe<AccountFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<PendingBoostLiquidityWithdrawalFilter>>;
  /** Filter by the object’s `boostByBoostId` relation. */
  boostByBoostId?: InputMaybe<BoostFilter>;
  /** Filter by the object’s `boostId` field. */
  boostId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `eventByStoppedBoostingEventId` relation. */
  eventByStoppedBoostingEventId?: InputMaybe<EventFilter>;
  /** Filter by the object’s `finalized` field. */
  finalized?: InputMaybe<BooleanFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Filter by the object’s `liquidityProviderId` field. */
  liquidityProviderId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `lost` field. */
  lost?: InputMaybe<BooleanFilter>;
  /** Negates the expression. */
  not?: InputMaybe<PendingBoostLiquidityWithdrawalFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<PendingBoostLiquidityWithdrawalFilter>>;
  /** Filter by the object’s `stoppedBoostingEventId` field. */
  stoppedBoostingEventId?: InputMaybe<BigIntFilter>;
};

/** Grouping methods for `PendingBoostLiquidityWithdrawal` for usage during aggregation. */
export type PendingBoostLiquidityWithdrawalGroupBy =
  | 'BOOST_ID'
  | 'FINALIZED'
  | 'LIQUIDITY_PROVIDER_ID'
  | 'LOST'
  | 'STOPPED_BOOSTING_EVENT_ID';

export type PendingBoostLiquidityWithdrawalHavingAverageInput = {
  boostId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  stoppedBoostingEventId?: InputMaybe<HavingBigintFilter>;
};

export type PendingBoostLiquidityWithdrawalHavingDistinctCountInput = {
  boostId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  stoppedBoostingEventId?: InputMaybe<HavingBigintFilter>;
};

/** Conditions for `PendingBoostLiquidityWithdrawal` aggregates. */
export type PendingBoostLiquidityWithdrawalHavingInput = {
  AND?: InputMaybe<Array<PendingBoostLiquidityWithdrawalHavingInput>>;
  OR?: InputMaybe<Array<PendingBoostLiquidityWithdrawalHavingInput>>;
  average?: InputMaybe<PendingBoostLiquidityWithdrawalHavingAverageInput>;
  distinctCount?: InputMaybe<PendingBoostLiquidityWithdrawalHavingDistinctCountInput>;
  max?: InputMaybe<PendingBoostLiquidityWithdrawalHavingMaxInput>;
  min?: InputMaybe<PendingBoostLiquidityWithdrawalHavingMinInput>;
  stddevPopulation?: InputMaybe<PendingBoostLiquidityWithdrawalHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<PendingBoostLiquidityWithdrawalHavingStddevSampleInput>;
  sum?: InputMaybe<PendingBoostLiquidityWithdrawalHavingSumInput>;
  variancePopulation?: InputMaybe<PendingBoostLiquidityWithdrawalHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<PendingBoostLiquidityWithdrawalHavingVarianceSampleInput>;
};

export type PendingBoostLiquidityWithdrawalHavingMaxInput = {
  boostId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  stoppedBoostingEventId?: InputMaybe<HavingBigintFilter>;
};

export type PendingBoostLiquidityWithdrawalHavingMinInput = {
  boostId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  stoppedBoostingEventId?: InputMaybe<HavingBigintFilter>;
};

export type PendingBoostLiquidityWithdrawalHavingStddevPopulationInput = {
  boostId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  stoppedBoostingEventId?: InputMaybe<HavingBigintFilter>;
};

export type PendingBoostLiquidityWithdrawalHavingStddevSampleInput = {
  boostId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  stoppedBoostingEventId?: InputMaybe<HavingBigintFilter>;
};

export type PendingBoostLiquidityWithdrawalHavingSumInput = {
  boostId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  stoppedBoostingEventId?: InputMaybe<HavingBigintFilter>;
};

export type PendingBoostLiquidityWithdrawalHavingVariancePopulationInput = {
  boostId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  stoppedBoostingEventId?: InputMaybe<HavingBigintFilter>;
};

export type PendingBoostLiquidityWithdrawalHavingVarianceSampleInput = {
  boostId?: InputMaybe<HavingIntFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  stoppedBoostingEventId?: InputMaybe<HavingBigintFilter>;
};

export type PendingBoostLiquidityWithdrawalMaxAggregateFilter = {
  boostId?: InputMaybe<IntFilter>;
  id?: InputMaybe<IntFilter>;
  liquidityProviderId?: InputMaybe<IntFilter>;
  stoppedBoostingEventId?: InputMaybe<BigIntFilter>;
};

export type PendingBoostLiquidityWithdrawalMaxAggregates = {
  __typename?: 'PendingBoostLiquidityWithdrawalMaxAggregates';
  /** Maximum of boostId across the matching connection */
  boostId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of stoppedBoostingEventId across the matching connection */
  stoppedBoostingEventId?: Maybe<Scalars['BigInt']['output']>;
};

export type PendingBoostLiquidityWithdrawalMinAggregateFilter = {
  boostId?: InputMaybe<IntFilter>;
  id?: InputMaybe<IntFilter>;
  liquidityProviderId?: InputMaybe<IntFilter>;
  stoppedBoostingEventId?: InputMaybe<BigIntFilter>;
};

export type PendingBoostLiquidityWithdrawalMinAggregates = {
  __typename?: 'PendingBoostLiquidityWithdrawalMinAggregates';
  /** Minimum of boostId across the matching connection */
  boostId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of stoppedBoostingEventId across the matching connection */
  stoppedBoostingEventId?: Maybe<Scalars['BigInt']['output']>;
};

export type PendingBoostLiquidityWithdrawalStddevPopulationAggregateFilter = {
  boostId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
  stoppedBoostingEventId?: InputMaybe<BigFloatFilter>;
};

export type PendingBoostLiquidityWithdrawalStddevPopulationAggregates = {
  __typename?: 'PendingBoostLiquidityWithdrawalStddevPopulationAggregates';
  /** Population standard deviation of boostId across the matching connection */
  boostId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of stoppedBoostingEventId across the matching connection */
  stoppedBoostingEventId?: Maybe<Scalars['BigFloat']['output']>;
};

export type PendingBoostLiquidityWithdrawalStddevSampleAggregateFilter = {
  boostId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
  stoppedBoostingEventId?: InputMaybe<BigFloatFilter>;
};

export type PendingBoostLiquidityWithdrawalStddevSampleAggregates = {
  __typename?: 'PendingBoostLiquidityWithdrawalStddevSampleAggregates';
  /** Sample standard deviation of boostId across the matching connection */
  boostId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of stoppedBoostingEventId across the matching connection */
  stoppedBoostingEventId?: Maybe<Scalars['BigFloat']['output']>;
};

export type PendingBoostLiquidityWithdrawalSumAggregateFilter = {
  boostId?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  liquidityProviderId?: InputMaybe<BigIntFilter>;
  stoppedBoostingEventId?: InputMaybe<BigFloatFilter>;
};

export type PendingBoostLiquidityWithdrawalSumAggregates = {
  __typename?: 'PendingBoostLiquidityWithdrawalSumAggregates';
  /** Sum of boostId across the matching connection */
  boostId: Scalars['BigInt']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of liquidityProviderId across the matching connection */
  liquidityProviderId: Scalars['BigInt']['output'];
  /** Sum of stoppedBoostingEventId across the matching connection */
  stoppedBoostingEventId: Scalars['BigFloat']['output'];
};

export type PendingBoostLiquidityWithdrawalVariancePopulationAggregateFilter = {
  boostId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
  stoppedBoostingEventId?: InputMaybe<BigFloatFilter>;
};

export type PendingBoostLiquidityWithdrawalVariancePopulationAggregates = {
  __typename?: 'PendingBoostLiquidityWithdrawalVariancePopulationAggregates';
  /** Population variance of boostId across the matching connection */
  boostId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of stoppedBoostingEventId across the matching connection */
  stoppedBoostingEventId?: Maybe<Scalars['BigFloat']['output']>;
};

export type PendingBoostLiquidityWithdrawalVarianceSampleAggregateFilter = {
  boostId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
  stoppedBoostingEventId?: InputMaybe<BigFloatFilter>;
};

export type PendingBoostLiquidityWithdrawalVarianceSampleAggregates = {
  __typename?: 'PendingBoostLiquidityWithdrawalVarianceSampleAggregates';
  /** Sample variance of boostId across the matching connection */
  boostId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of stoppedBoostingEventId across the matching connection */
  stoppedBoostingEventId?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `PendingBoostLiquidityWithdrawal` values. */
export type PendingBoostLiquidityWithdrawalsConnection = {
  __typename?: 'PendingBoostLiquidityWithdrawalsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<PendingBoostLiquidityWithdrawalAggregates>;
  /** A list of edges which contains the `PendingBoostLiquidityWithdrawal` and cursor to aid in pagination. */
  edges: Array<PendingBoostLiquidityWithdrawalsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<PendingBoostLiquidityWithdrawalAggregates>>;
  /** A list of `PendingBoostLiquidityWithdrawal` objects. */
  nodes: Array<PendingBoostLiquidityWithdrawal>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `PendingBoostLiquidityWithdrawal` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `PendingBoostLiquidityWithdrawal` values. */
export type PendingBoostLiquidityWithdrawalsConnectionGroupedAggregatesArgs = {
  groupBy: Array<PendingBoostLiquidityWithdrawalGroupBy>;
  having?: InputMaybe<PendingBoostLiquidityWithdrawalHavingInput>;
};

/** A `PendingBoostLiquidityWithdrawal` edge in the connection. */
export type PendingBoostLiquidityWithdrawalsEdge = {
  __typename?: 'PendingBoostLiquidityWithdrawalsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `PendingBoostLiquidityWithdrawal` at the end of the edge. */
  node: PendingBoostLiquidityWithdrawal;
};

/** Methods to use when ordering `PendingBoostLiquidityWithdrawal`. */
export type PendingBoostLiquidityWithdrawalsOrderBy =
  | 'BOOST_ID_ASC'
  | 'BOOST_ID_DESC'
  | 'FINALIZED_ASC'
  | 'FINALIZED_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_ID_DESC'
  | 'LOST_ASC'
  | 'LOST_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'STOPPED_BOOSTING_EVENT_ID_ASC'
  | 'STOPPED_BOOSTING_EVENT_ID_DESC';

export type PoolOrder = Node & {
  __typename?: 'PoolOrder';
  /** Reads a single `Account` that is related to this `PoolOrder`. */
  accountByLiquidityProviderId: Account;
  baseAmount: Scalars['BigFloat']['output'];
  baseAsset: ChainflipAsset;
  baseCollectedFees: Scalars['BigFloat']['output'];
  baseCollectedFeesUsd: Scalars['BigFloat']['output'];
  /** Reads a single `Event` that is related to this `PoolOrder`. */
  eventByOrderCreatedEventId: Event;
  /** Reads a single `Event` that is related to this `PoolOrder`. */
  eventByOrderLastUpdatedEventId?: Maybe<Event>;
  filledBaseAmount: Scalars['BigFloat']['output'];
  filledQuoteAmount: Scalars['BigFloat']['output'];
  id: Scalars['BigInt']['output'];
  liquidityProviderId: Scalars['Int']['output'];
  lowerTick: Scalars['BigFloat']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  openPoolOrderId?: Maybe<Scalars['Int']['output']>;
  orderCreatedEventId: Scalars['BigInt']['output'];
  orderCreatedTimestamp: Scalars['Datetime']['output'];
  orderId: Scalars['String']['output'];
  orderLastUpdatedEventId?: Maybe<Scalars['BigInt']['output']>;
  orderLastUpdatedTimestamp?: Maybe<Scalars['Datetime']['output']>;
  orderType: PoolOrderType;
  processorOrderCreatedEventId?: Maybe<Scalars['BigInt']['output']>;
  quoteAmount: Scalars['BigFloat']['output'];
  quoteAsset: ChainflipAsset;
  quoteCollectedFees: Scalars['BigFloat']['output'];
  quoteCollectedFeesUsd: Scalars['BigFloat']['output'];
  status: PoolOrderStatus;
  upperTick: Scalars['BigFloat']['output'];
};

export type PoolOrderAggregates = {
  __typename?: 'PoolOrderAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<PoolOrderAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<PoolOrderDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<PoolOrderMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<PoolOrderMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<PoolOrderStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<PoolOrderStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<PoolOrderSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<PoolOrderVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<PoolOrderVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `PoolOrder` object types. */
export type PoolOrderAggregatesFilter = {
  /** Mean average aggregate over matching `PoolOrder` objects. */
  average?: InputMaybe<PoolOrderAverageAggregateFilter>;
  /** Distinct count aggregate over matching `PoolOrder` objects. */
  distinctCount?: InputMaybe<PoolOrderDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `PoolOrder` object to be included within the aggregate. */
  filter?: InputMaybe<PoolOrderFilter>;
  /** Maximum aggregate over matching `PoolOrder` objects. */
  max?: InputMaybe<PoolOrderMaxAggregateFilter>;
  /** Minimum aggregate over matching `PoolOrder` objects. */
  min?: InputMaybe<PoolOrderMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `PoolOrder` objects. */
  stddevPopulation?: InputMaybe<PoolOrderStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `PoolOrder` objects. */
  stddevSample?: InputMaybe<PoolOrderStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `PoolOrder` objects. */
  sum?: InputMaybe<PoolOrderSumAggregateFilter>;
  /** Population variance aggregate over matching `PoolOrder` objects. */
  variancePopulation?: InputMaybe<PoolOrderVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `PoolOrder` objects. */
  varianceSample?: InputMaybe<PoolOrderVarianceSampleAggregateFilter>;
};

export type PoolOrderAverageAggregateFilter = {
  baseAmount?: InputMaybe<BigFloatFilter>;
  baseCollectedFees?: InputMaybe<BigFloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<BigFloatFilter>;
  filledBaseAmount?: InputMaybe<BigFloatFilter>;
  filledQuoteAmount?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
  lowerTick?: InputMaybe<BigFloatFilter>;
  openPoolOrderId?: InputMaybe<BigFloatFilter>;
  orderCreatedEventId?: InputMaybe<BigFloatFilter>;
  orderLastUpdatedEventId?: InputMaybe<BigFloatFilter>;
  processorOrderCreatedEventId?: InputMaybe<BigFloatFilter>;
  quoteAmount?: InputMaybe<BigFloatFilter>;
  quoteCollectedFees?: InputMaybe<BigFloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<BigFloatFilter>;
  upperTick?: InputMaybe<BigFloatFilter>;
};

export type PoolOrderAverageAggregates = {
  __typename?: 'PoolOrderAverageAggregates';
  /** Mean average of baseAmount across the matching connection */
  baseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of baseCollectedFees across the matching connection */
  baseCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of baseCollectedFeesUsd across the matching connection */
  baseCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of filledBaseAmount across the matching connection */
  filledBaseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of filledQuoteAmount across the matching connection */
  filledQuoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of lowerTick across the matching connection */
  lowerTick?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of openPoolOrderId across the matching connection */
  openPoolOrderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of orderCreatedEventId across the matching connection */
  orderCreatedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of orderLastUpdatedEventId across the matching connection */
  orderLastUpdatedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of processorOrderCreatedEventId across the matching connection */
  processorOrderCreatedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of quoteAmount across the matching connection */
  quoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of quoteCollectedFees across the matching connection */
  quoteCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of quoteCollectedFeesUsd across the matching connection */
  quoteCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of upperTick across the matching connection */
  upperTick?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `PoolOrder` object types. All fields are tested
 * for equality and combined with a logical ‘and.’
 */
export type PoolOrderCondition = {
  /** Checks for equality with the object’s `baseAmount` field. */
  baseAmount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `baseAsset` field. */
  baseAsset?: InputMaybe<ChainflipAsset>;
  /** Checks for equality with the object’s `baseCollectedFees` field. */
  baseCollectedFees?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `baseCollectedFeesUsd` field. */
  baseCollectedFeesUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `filledBaseAmount` field. */
  filledBaseAmount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `filledQuoteAmount` field. */
  filledQuoteAmount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `liquidityProviderId` field. */
  liquidityProviderId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `lowerTick` field. */
  lowerTick?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `openPoolOrderId` field. */
  openPoolOrderId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `orderCreatedEventId` field. */
  orderCreatedEventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `orderCreatedTimestamp` field. */
  orderCreatedTimestamp?: InputMaybe<Scalars['Datetime']['input']>;
  /** Checks for equality with the object’s `orderId` field. */
  orderId?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `orderLastUpdatedEventId` field. */
  orderLastUpdatedEventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `orderLastUpdatedTimestamp` field. */
  orderLastUpdatedTimestamp?: InputMaybe<Scalars['Datetime']['input']>;
  /** Checks for equality with the object’s `orderType` field. */
  orderType?: InputMaybe<PoolOrderType>;
  /** Checks for equality with the object’s `processorOrderCreatedEventId` field. */
  processorOrderCreatedEventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `quoteAmount` field. */
  quoteAmount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `quoteAsset` field. */
  quoteAsset?: InputMaybe<ChainflipAsset>;
  /** Checks for equality with the object’s `quoteCollectedFees` field. */
  quoteCollectedFees?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `quoteCollectedFeesUsd` field. */
  quoteCollectedFeesUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `status` field. */
  status?: InputMaybe<PoolOrderStatus>;
  /** Checks for equality with the object’s `upperTick` field. */
  upperTick?: InputMaybe<Scalars['BigFloat']['input']>;
};

export type PoolOrderDistinctCountAggregateFilter = {
  baseAmount?: InputMaybe<BigIntFilter>;
  baseAsset?: InputMaybe<BigIntFilter>;
  baseCollectedFees?: InputMaybe<BigIntFilter>;
  baseCollectedFeesUsd?: InputMaybe<BigIntFilter>;
  filledBaseAmount?: InputMaybe<BigIntFilter>;
  filledQuoteAmount?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  liquidityProviderId?: InputMaybe<BigIntFilter>;
  lowerTick?: InputMaybe<BigIntFilter>;
  openPoolOrderId?: InputMaybe<BigIntFilter>;
  orderCreatedEventId?: InputMaybe<BigIntFilter>;
  orderCreatedTimestamp?: InputMaybe<BigIntFilter>;
  orderId?: InputMaybe<BigIntFilter>;
  orderLastUpdatedEventId?: InputMaybe<BigIntFilter>;
  orderLastUpdatedTimestamp?: InputMaybe<BigIntFilter>;
  orderType?: InputMaybe<BigIntFilter>;
  processorOrderCreatedEventId?: InputMaybe<BigIntFilter>;
  quoteAmount?: InputMaybe<BigIntFilter>;
  quoteAsset?: InputMaybe<BigIntFilter>;
  quoteCollectedFees?: InputMaybe<BigIntFilter>;
  quoteCollectedFeesUsd?: InputMaybe<BigIntFilter>;
  status?: InputMaybe<BigIntFilter>;
  upperTick?: InputMaybe<BigIntFilter>;
};

export type PoolOrderDistinctCountAggregates = {
  __typename?: 'PoolOrderDistinctCountAggregates';
  /** Distinct count of baseAmount across the matching connection */
  baseAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of baseAsset across the matching connection */
  baseAsset?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of baseCollectedFees across the matching connection */
  baseCollectedFees?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of baseCollectedFeesUsd across the matching connection */
  baseCollectedFeesUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of filledBaseAmount across the matching connection */
  filledBaseAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of filledQuoteAmount across the matching connection */
  filledQuoteAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of lowerTick across the matching connection */
  lowerTick?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of openPoolOrderId across the matching connection */
  openPoolOrderId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of orderCreatedEventId across the matching connection */
  orderCreatedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of orderCreatedTimestamp across the matching connection */
  orderCreatedTimestamp?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of orderId across the matching connection */
  orderId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of orderLastUpdatedEventId across the matching connection */
  orderLastUpdatedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of orderLastUpdatedTimestamp across the matching connection */
  orderLastUpdatedTimestamp?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of orderType across the matching connection */
  orderType?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of processorOrderCreatedEventId across the matching connection */
  processorOrderCreatedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of quoteAmount across the matching connection */
  quoteAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of quoteAsset across the matching connection */
  quoteAsset?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of quoteCollectedFees across the matching connection */
  quoteCollectedFees?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of quoteCollectedFeesUsd across the matching connection */
  quoteCollectedFeesUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of status across the matching connection */
  status?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of upperTick across the matching connection */
  upperTick?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `PoolOrder` object types. All fields are combined with a logical ‘and.’ */
export type PoolOrderFilter = {
  /** Filter by the object’s `accountByLiquidityProviderId` relation. */
  accountByLiquidityProviderId?: InputMaybe<AccountFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<PoolOrderFilter>>;
  /** Filter by the object’s `baseAmount` field. */
  baseAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `baseAsset` field. */
  baseAsset?: InputMaybe<ChainflipAssetFilter>;
  /** Filter by the object’s `baseCollectedFees` field. */
  baseCollectedFees?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `baseCollectedFeesUsd` field. */
  baseCollectedFeesUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `eventByOrderCreatedEventId` relation. */
  eventByOrderCreatedEventId?: InputMaybe<EventFilter>;
  /** Filter by the object’s `eventByOrderLastUpdatedEventId` relation. */
  eventByOrderLastUpdatedEventId?: InputMaybe<EventFilter>;
  /** A related `eventByOrderLastUpdatedEventId` exists. */
  eventByOrderLastUpdatedEventIdExists?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `filledBaseAmount` field. */
  filledBaseAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `filledQuoteAmount` field. */
  filledQuoteAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `liquidityProviderId` field. */
  liquidityProviderId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `lowerTick` field. */
  lowerTick?: InputMaybe<BigFloatFilter>;
  /** Negates the expression. */
  not?: InputMaybe<PoolOrderFilter>;
  /** Filter by the object’s `openPoolOrderId` field. */
  openPoolOrderId?: InputMaybe<IntFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<PoolOrderFilter>>;
  /** Filter by the object’s `orderCreatedEventId` field. */
  orderCreatedEventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `orderCreatedTimestamp` field. */
  orderCreatedTimestamp?: InputMaybe<DatetimeFilter>;
  /** Filter by the object’s `orderId` field. */
  orderId?: InputMaybe<StringFilter>;
  /** Filter by the object’s `orderLastUpdatedEventId` field. */
  orderLastUpdatedEventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `orderLastUpdatedTimestamp` field. */
  orderLastUpdatedTimestamp?: InputMaybe<DatetimeFilter>;
  /** Filter by the object’s `orderType` field. */
  orderType?: InputMaybe<PoolOrderTypeFilter>;
  /** Filter by the object’s `processorOrderCreatedEventId` field. */
  processorOrderCreatedEventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `quoteAmount` field. */
  quoteAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `quoteAsset` field. */
  quoteAsset?: InputMaybe<ChainflipAssetFilter>;
  /** Filter by the object’s `quoteCollectedFees` field. */
  quoteCollectedFees?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `quoteCollectedFeesUsd` field. */
  quoteCollectedFeesUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `status` field. */
  status?: InputMaybe<PoolOrderStatusFilter>;
  /** Filter by the object’s `upperTick` field. */
  upperTick?: InputMaybe<BigFloatFilter>;
};

/** Grouping methods for `PoolOrder` for usage during aggregation. */
export type PoolOrderGroupBy =
  | 'BASE_AMOUNT'
  | 'BASE_ASSET'
  | 'BASE_COLLECTED_FEES'
  | 'BASE_COLLECTED_FEES_USD'
  | 'FILLED_BASE_AMOUNT'
  | 'FILLED_QUOTE_AMOUNT'
  | 'LIQUIDITY_PROVIDER_ID'
  | 'LOWER_TICK'
  | 'OPEN_POOL_ORDER_ID'
  | 'ORDER_CREATED_TIMESTAMP'
  | 'ORDER_CREATED_TIMESTAMP_TRUNCATED_TO_DAY'
  | 'ORDER_CREATED_TIMESTAMP_TRUNCATED_TO_HOUR'
  | 'ORDER_ID'
  | 'ORDER_LAST_UPDATED_EVENT_ID'
  | 'ORDER_LAST_UPDATED_TIMESTAMP'
  | 'ORDER_LAST_UPDATED_TIMESTAMP_TRUNCATED_TO_DAY'
  | 'ORDER_LAST_UPDATED_TIMESTAMP_TRUNCATED_TO_HOUR'
  | 'ORDER_TYPE'
  | 'QUOTE_AMOUNT'
  | 'QUOTE_ASSET'
  | 'QUOTE_COLLECTED_FEES'
  | 'QUOTE_COLLECTED_FEES_USD'
  | 'STATUS'
  | 'UPPER_TICK';

export type PoolOrderHavingAverageInput = {
  baseAmount?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  filledBaseAmount?: InputMaybe<HavingBigfloatFilter>;
  filledQuoteAmount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  lowerTick?: InputMaybe<HavingBigfloatFilter>;
  openPoolOrderId?: InputMaybe<HavingIntFilter>;
  orderCreatedEventId?: InputMaybe<HavingBigintFilter>;
  orderCreatedTimestamp?: InputMaybe<HavingDatetimeFilter>;
  orderLastUpdatedEventId?: InputMaybe<HavingBigintFilter>;
  orderLastUpdatedTimestamp?: InputMaybe<HavingDatetimeFilter>;
  processorOrderCreatedEventId?: InputMaybe<HavingBigintFilter>;
  quoteAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  upperTick?: InputMaybe<HavingBigfloatFilter>;
};

export type PoolOrderHavingDistinctCountInput = {
  baseAmount?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  filledBaseAmount?: InputMaybe<HavingBigfloatFilter>;
  filledQuoteAmount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  lowerTick?: InputMaybe<HavingBigfloatFilter>;
  openPoolOrderId?: InputMaybe<HavingIntFilter>;
  orderCreatedEventId?: InputMaybe<HavingBigintFilter>;
  orderCreatedTimestamp?: InputMaybe<HavingDatetimeFilter>;
  orderLastUpdatedEventId?: InputMaybe<HavingBigintFilter>;
  orderLastUpdatedTimestamp?: InputMaybe<HavingDatetimeFilter>;
  processorOrderCreatedEventId?: InputMaybe<HavingBigintFilter>;
  quoteAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  upperTick?: InputMaybe<HavingBigfloatFilter>;
};

/** Conditions for `PoolOrder` aggregates. */
export type PoolOrderHavingInput = {
  AND?: InputMaybe<Array<PoolOrderHavingInput>>;
  OR?: InputMaybe<Array<PoolOrderHavingInput>>;
  average?: InputMaybe<PoolOrderHavingAverageInput>;
  distinctCount?: InputMaybe<PoolOrderHavingDistinctCountInput>;
  max?: InputMaybe<PoolOrderHavingMaxInput>;
  min?: InputMaybe<PoolOrderHavingMinInput>;
  stddevPopulation?: InputMaybe<PoolOrderHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<PoolOrderHavingStddevSampleInput>;
  sum?: InputMaybe<PoolOrderHavingSumInput>;
  variancePopulation?: InputMaybe<PoolOrderHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<PoolOrderHavingVarianceSampleInput>;
};

export type PoolOrderHavingMaxInput = {
  baseAmount?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  filledBaseAmount?: InputMaybe<HavingBigfloatFilter>;
  filledQuoteAmount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  lowerTick?: InputMaybe<HavingBigfloatFilter>;
  openPoolOrderId?: InputMaybe<HavingIntFilter>;
  orderCreatedEventId?: InputMaybe<HavingBigintFilter>;
  orderCreatedTimestamp?: InputMaybe<HavingDatetimeFilter>;
  orderLastUpdatedEventId?: InputMaybe<HavingBigintFilter>;
  orderLastUpdatedTimestamp?: InputMaybe<HavingDatetimeFilter>;
  processorOrderCreatedEventId?: InputMaybe<HavingBigintFilter>;
  quoteAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  upperTick?: InputMaybe<HavingBigfloatFilter>;
};

export type PoolOrderHavingMinInput = {
  baseAmount?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  filledBaseAmount?: InputMaybe<HavingBigfloatFilter>;
  filledQuoteAmount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  lowerTick?: InputMaybe<HavingBigfloatFilter>;
  openPoolOrderId?: InputMaybe<HavingIntFilter>;
  orderCreatedEventId?: InputMaybe<HavingBigintFilter>;
  orderCreatedTimestamp?: InputMaybe<HavingDatetimeFilter>;
  orderLastUpdatedEventId?: InputMaybe<HavingBigintFilter>;
  orderLastUpdatedTimestamp?: InputMaybe<HavingDatetimeFilter>;
  processorOrderCreatedEventId?: InputMaybe<HavingBigintFilter>;
  quoteAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  upperTick?: InputMaybe<HavingBigfloatFilter>;
};

export type PoolOrderHavingStddevPopulationInput = {
  baseAmount?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  filledBaseAmount?: InputMaybe<HavingBigfloatFilter>;
  filledQuoteAmount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  lowerTick?: InputMaybe<HavingBigfloatFilter>;
  openPoolOrderId?: InputMaybe<HavingIntFilter>;
  orderCreatedEventId?: InputMaybe<HavingBigintFilter>;
  orderCreatedTimestamp?: InputMaybe<HavingDatetimeFilter>;
  orderLastUpdatedEventId?: InputMaybe<HavingBigintFilter>;
  orderLastUpdatedTimestamp?: InputMaybe<HavingDatetimeFilter>;
  processorOrderCreatedEventId?: InputMaybe<HavingBigintFilter>;
  quoteAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  upperTick?: InputMaybe<HavingBigfloatFilter>;
};

export type PoolOrderHavingStddevSampleInput = {
  baseAmount?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  filledBaseAmount?: InputMaybe<HavingBigfloatFilter>;
  filledQuoteAmount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  lowerTick?: InputMaybe<HavingBigfloatFilter>;
  openPoolOrderId?: InputMaybe<HavingIntFilter>;
  orderCreatedEventId?: InputMaybe<HavingBigintFilter>;
  orderCreatedTimestamp?: InputMaybe<HavingDatetimeFilter>;
  orderLastUpdatedEventId?: InputMaybe<HavingBigintFilter>;
  orderLastUpdatedTimestamp?: InputMaybe<HavingDatetimeFilter>;
  processorOrderCreatedEventId?: InputMaybe<HavingBigintFilter>;
  quoteAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  upperTick?: InputMaybe<HavingBigfloatFilter>;
};

export type PoolOrderHavingSumInput = {
  baseAmount?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  filledBaseAmount?: InputMaybe<HavingBigfloatFilter>;
  filledQuoteAmount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  lowerTick?: InputMaybe<HavingBigfloatFilter>;
  openPoolOrderId?: InputMaybe<HavingIntFilter>;
  orderCreatedEventId?: InputMaybe<HavingBigintFilter>;
  orderCreatedTimestamp?: InputMaybe<HavingDatetimeFilter>;
  orderLastUpdatedEventId?: InputMaybe<HavingBigintFilter>;
  orderLastUpdatedTimestamp?: InputMaybe<HavingDatetimeFilter>;
  processorOrderCreatedEventId?: InputMaybe<HavingBigintFilter>;
  quoteAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  upperTick?: InputMaybe<HavingBigfloatFilter>;
};

export type PoolOrderHavingVariancePopulationInput = {
  baseAmount?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  filledBaseAmount?: InputMaybe<HavingBigfloatFilter>;
  filledQuoteAmount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  lowerTick?: InputMaybe<HavingBigfloatFilter>;
  openPoolOrderId?: InputMaybe<HavingIntFilter>;
  orderCreatedEventId?: InputMaybe<HavingBigintFilter>;
  orderCreatedTimestamp?: InputMaybe<HavingDatetimeFilter>;
  orderLastUpdatedEventId?: InputMaybe<HavingBigintFilter>;
  orderLastUpdatedTimestamp?: InputMaybe<HavingDatetimeFilter>;
  processorOrderCreatedEventId?: InputMaybe<HavingBigintFilter>;
  quoteAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  upperTick?: InputMaybe<HavingBigfloatFilter>;
};

export type PoolOrderHavingVarianceSampleInput = {
  baseAmount?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  filledBaseAmount?: InputMaybe<HavingBigfloatFilter>;
  filledQuoteAmount?: InputMaybe<HavingBigfloatFilter>;
  id?: InputMaybe<HavingBigintFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  lowerTick?: InputMaybe<HavingBigfloatFilter>;
  openPoolOrderId?: InputMaybe<HavingIntFilter>;
  orderCreatedEventId?: InputMaybe<HavingBigintFilter>;
  orderCreatedTimestamp?: InputMaybe<HavingDatetimeFilter>;
  orderLastUpdatedEventId?: InputMaybe<HavingBigintFilter>;
  orderLastUpdatedTimestamp?: InputMaybe<HavingDatetimeFilter>;
  processorOrderCreatedEventId?: InputMaybe<HavingBigintFilter>;
  quoteAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFees?: InputMaybe<HavingBigfloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<HavingBigfloatFilter>;
  upperTick?: InputMaybe<HavingBigfloatFilter>;
};

export type PoolOrderMaxAggregateFilter = {
  baseAmount?: InputMaybe<BigFloatFilter>;
  baseCollectedFees?: InputMaybe<BigFloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<BigFloatFilter>;
  filledBaseAmount?: InputMaybe<BigFloatFilter>;
  filledQuoteAmount?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigIntFilter>;
  liquidityProviderId?: InputMaybe<IntFilter>;
  lowerTick?: InputMaybe<BigFloatFilter>;
  openPoolOrderId?: InputMaybe<IntFilter>;
  orderCreatedEventId?: InputMaybe<BigIntFilter>;
  orderLastUpdatedEventId?: InputMaybe<BigIntFilter>;
  processorOrderCreatedEventId?: InputMaybe<BigIntFilter>;
  quoteAmount?: InputMaybe<BigFloatFilter>;
  quoteCollectedFees?: InputMaybe<BigFloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<BigFloatFilter>;
  upperTick?: InputMaybe<BigFloatFilter>;
};

export type PoolOrderMaxAggregates = {
  __typename?: 'PoolOrderMaxAggregates';
  /** Maximum of baseAmount across the matching connection */
  baseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of baseCollectedFees across the matching connection */
  baseCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of baseCollectedFeesUsd across the matching connection */
  baseCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of filledBaseAmount across the matching connection */
  filledBaseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of filledQuoteAmount across the matching connection */
  filledQuoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of lowerTick across the matching connection */
  lowerTick?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of openPoolOrderId across the matching connection */
  openPoolOrderId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of orderCreatedEventId across the matching connection */
  orderCreatedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of orderLastUpdatedEventId across the matching connection */
  orderLastUpdatedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of processorOrderCreatedEventId across the matching connection */
  processorOrderCreatedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of quoteAmount across the matching connection */
  quoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of quoteCollectedFees across the matching connection */
  quoteCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of quoteCollectedFeesUsd across the matching connection */
  quoteCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of upperTick across the matching connection */
  upperTick?: Maybe<Scalars['BigFloat']['output']>;
};

export type PoolOrderMinAggregateFilter = {
  baseAmount?: InputMaybe<BigFloatFilter>;
  baseCollectedFees?: InputMaybe<BigFloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<BigFloatFilter>;
  filledBaseAmount?: InputMaybe<BigFloatFilter>;
  filledQuoteAmount?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigIntFilter>;
  liquidityProviderId?: InputMaybe<IntFilter>;
  lowerTick?: InputMaybe<BigFloatFilter>;
  openPoolOrderId?: InputMaybe<IntFilter>;
  orderCreatedEventId?: InputMaybe<BigIntFilter>;
  orderLastUpdatedEventId?: InputMaybe<BigIntFilter>;
  processorOrderCreatedEventId?: InputMaybe<BigIntFilter>;
  quoteAmount?: InputMaybe<BigFloatFilter>;
  quoteCollectedFees?: InputMaybe<BigFloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<BigFloatFilter>;
  upperTick?: InputMaybe<BigFloatFilter>;
};

export type PoolOrderMinAggregates = {
  __typename?: 'PoolOrderMinAggregates';
  /** Minimum of baseAmount across the matching connection */
  baseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of baseCollectedFees across the matching connection */
  baseCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of baseCollectedFeesUsd across the matching connection */
  baseCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of filledBaseAmount across the matching connection */
  filledBaseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of filledQuoteAmount across the matching connection */
  filledQuoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of lowerTick across the matching connection */
  lowerTick?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of openPoolOrderId across the matching connection */
  openPoolOrderId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of orderCreatedEventId across the matching connection */
  orderCreatedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of orderLastUpdatedEventId across the matching connection */
  orderLastUpdatedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of processorOrderCreatedEventId across the matching connection */
  processorOrderCreatedEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of quoteAmount across the matching connection */
  quoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of quoteCollectedFees across the matching connection */
  quoteCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of quoteCollectedFeesUsd across the matching connection */
  quoteCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of upperTick across the matching connection */
  upperTick?: Maybe<Scalars['BigFloat']['output']>;
};

export type PoolOrderStatus =
  | 'CLOSED'
  | 'OPEN';

/** A filter to be used against PoolOrderStatus fields. All fields are combined with a logical ‘and.’ */
export type PoolOrderStatusFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<PoolOrderStatus>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<PoolOrderStatus>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<PoolOrderStatus>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<PoolOrderStatus>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<PoolOrderStatus>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<PoolOrderStatus>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<PoolOrderStatus>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<PoolOrderStatus>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<PoolOrderStatus>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<PoolOrderStatus>>;
};

export type PoolOrderStddevPopulationAggregateFilter = {
  baseAmount?: InputMaybe<BigFloatFilter>;
  baseCollectedFees?: InputMaybe<BigFloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<BigFloatFilter>;
  filledBaseAmount?: InputMaybe<BigFloatFilter>;
  filledQuoteAmount?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
  lowerTick?: InputMaybe<BigFloatFilter>;
  openPoolOrderId?: InputMaybe<BigFloatFilter>;
  orderCreatedEventId?: InputMaybe<BigFloatFilter>;
  orderLastUpdatedEventId?: InputMaybe<BigFloatFilter>;
  processorOrderCreatedEventId?: InputMaybe<BigFloatFilter>;
  quoteAmount?: InputMaybe<BigFloatFilter>;
  quoteCollectedFees?: InputMaybe<BigFloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<BigFloatFilter>;
  upperTick?: InputMaybe<BigFloatFilter>;
};

export type PoolOrderStddevPopulationAggregates = {
  __typename?: 'PoolOrderStddevPopulationAggregates';
  /** Population standard deviation of baseAmount across the matching connection */
  baseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of baseCollectedFees across the matching connection */
  baseCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of baseCollectedFeesUsd across the matching connection */
  baseCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of filledBaseAmount across the matching connection */
  filledBaseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of filledQuoteAmount across the matching connection */
  filledQuoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of lowerTick across the matching connection */
  lowerTick?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of openPoolOrderId across the matching connection */
  openPoolOrderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of orderCreatedEventId across the matching connection */
  orderCreatedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of orderLastUpdatedEventId across the matching connection */
  orderLastUpdatedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of processorOrderCreatedEventId across the matching connection */
  processorOrderCreatedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of quoteAmount across the matching connection */
  quoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of quoteCollectedFees across the matching connection */
  quoteCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of quoteCollectedFeesUsd across the matching connection */
  quoteCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of upperTick across the matching connection */
  upperTick?: Maybe<Scalars['BigFloat']['output']>;
};

export type PoolOrderStddevSampleAggregateFilter = {
  baseAmount?: InputMaybe<BigFloatFilter>;
  baseCollectedFees?: InputMaybe<BigFloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<BigFloatFilter>;
  filledBaseAmount?: InputMaybe<BigFloatFilter>;
  filledQuoteAmount?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
  lowerTick?: InputMaybe<BigFloatFilter>;
  openPoolOrderId?: InputMaybe<BigFloatFilter>;
  orderCreatedEventId?: InputMaybe<BigFloatFilter>;
  orderLastUpdatedEventId?: InputMaybe<BigFloatFilter>;
  processorOrderCreatedEventId?: InputMaybe<BigFloatFilter>;
  quoteAmount?: InputMaybe<BigFloatFilter>;
  quoteCollectedFees?: InputMaybe<BigFloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<BigFloatFilter>;
  upperTick?: InputMaybe<BigFloatFilter>;
};

export type PoolOrderStddevSampleAggregates = {
  __typename?: 'PoolOrderStddevSampleAggregates';
  /** Sample standard deviation of baseAmount across the matching connection */
  baseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of baseCollectedFees across the matching connection */
  baseCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of baseCollectedFeesUsd across the matching connection */
  baseCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of filledBaseAmount across the matching connection */
  filledBaseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of filledQuoteAmount across the matching connection */
  filledQuoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of lowerTick across the matching connection */
  lowerTick?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of openPoolOrderId across the matching connection */
  openPoolOrderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of orderCreatedEventId across the matching connection */
  orderCreatedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of orderLastUpdatedEventId across the matching connection */
  orderLastUpdatedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of processorOrderCreatedEventId across the matching connection */
  processorOrderCreatedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of quoteAmount across the matching connection */
  quoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of quoteCollectedFees across the matching connection */
  quoteCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of quoteCollectedFeesUsd across the matching connection */
  quoteCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of upperTick across the matching connection */
  upperTick?: Maybe<Scalars['BigFloat']['output']>;
};

export type PoolOrderSumAggregateFilter = {
  baseAmount?: InputMaybe<BigFloatFilter>;
  baseCollectedFees?: InputMaybe<BigFloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<BigFloatFilter>;
  filledBaseAmount?: InputMaybe<BigFloatFilter>;
  filledQuoteAmount?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigIntFilter>;
  lowerTick?: InputMaybe<BigFloatFilter>;
  openPoolOrderId?: InputMaybe<BigIntFilter>;
  orderCreatedEventId?: InputMaybe<BigFloatFilter>;
  orderLastUpdatedEventId?: InputMaybe<BigFloatFilter>;
  processorOrderCreatedEventId?: InputMaybe<BigFloatFilter>;
  quoteAmount?: InputMaybe<BigFloatFilter>;
  quoteCollectedFees?: InputMaybe<BigFloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<BigFloatFilter>;
  upperTick?: InputMaybe<BigFloatFilter>;
};

export type PoolOrderSumAggregates = {
  __typename?: 'PoolOrderSumAggregates';
  /** Sum of baseAmount across the matching connection */
  baseAmount: Scalars['BigFloat']['output'];
  /** Sum of baseCollectedFees across the matching connection */
  baseCollectedFees: Scalars['BigFloat']['output'];
  /** Sum of baseCollectedFeesUsd across the matching connection */
  baseCollectedFeesUsd: Scalars['BigFloat']['output'];
  /** Sum of filledBaseAmount across the matching connection */
  filledBaseAmount: Scalars['BigFloat']['output'];
  /** Sum of filledQuoteAmount across the matching connection */
  filledQuoteAmount: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigFloat']['output'];
  /** Sum of liquidityProviderId across the matching connection */
  liquidityProviderId: Scalars['BigInt']['output'];
  /** Sum of lowerTick across the matching connection */
  lowerTick: Scalars['BigFloat']['output'];
  /** Sum of openPoolOrderId across the matching connection */
  openPoolOrderId: Scalars['BigInt']['output'];
  /** Sum of orderCreatedEventId across the matching connection */
  orderCreatedEventId: Scalars['BigFloat']['output'];
  /** Sum of orderLastUpdatedEventId across the matching connection */
  orderLastUpdatedEventId: Scalars['BigFloat']['output'];
  /** Sum of processorOrderCreatedEventId across the matching connection */
  processorOrderCreatedEventId: Scalars['BigFloat']['output'];
  /** Sum of quoteAmount across the matching connection */
  quoteAmount: Scalars['BigFloat']['output'];
  /** Sum of quoteCollectedFees across the matching connection */
  quoteCollectedFees: Scalars['BigFloat']['output'];
  /** Sum of quoteCollectedFeesUsd across the matching connection */
  quoteCollectedFeesUsd: Scalars['BigFloat']['output'];
  /** Sum of upperTick across the matching connection */
  upperTick: Scalars['BigFloat']['output'];
};

export type PoolOrderType =
  | 'LIMIT'
  | 'RANGE';

/** A filter to be used against PoolOrderType fields. All fields are combined with a logical ‘and.’ */
export type PoolOrderTypeFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<PoolOrderType>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<PoolOrderType>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<PoolOrderType>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<PoolOrderType>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<PoolOrderType>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<PoolOrderType>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<PoolOrderType>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<PoolOrderType>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<PoolOrderType>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<PoolOrderType>>;
};

export type PoolOrderVariancePopulationAggregateFilter = {
  baseAmount?: InputMaybe<BigFloatFilter>;
  baseCollectedFees?: InputMaybe<BigFloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<BigFloatFilter>;
  filledBaseAmount?: InputMaybe<BigFloatFilter>;
  filledQuoteAmount?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
  lowerTick?: InputMaybe<BigFloatFilter>;
  openPoolOrderId?: InputMaybe<BigFloatFilter>;
  orderCreatedEventId?: InputMaybe<BigFloatFilter>;
  orderLastUpdatedEventId?: InputMaybe<BigFloatFilter>;
  processorOrderCreatedEventId?: InputMaybe<BigFloatFilter>;
  quoteAmount?: InputMaybe<BigFloatFilter>;
  quoteCollectedFees?: InputMaybe<BigFloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<BigFloatFilter>;
  upperTick?: InputMaybe<BigFloatFilter>;
};

export type PoolOrderVariancePopulationAggregates = {
  __typename?: 'PoolOrderVariancePopulationAggregates';
  /** Population variance of baseAmount across the matching connection */
  baseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of baseCollectedFees across the matching connection */
  baseCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of baseCollectedFeesUsd across the matching connection */
  baseCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of filledBaseAmount across the matching connection */
  filledBaseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of filledQuoteAmount across the matching connection */
  filledQuoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of lowerTick across the matching connection */
  lowerTick?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of openPoolOrderId across the matching connection */
  openPoolOrderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of orderCreatedEventId across the matching connection */
  orderCreatedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of orderLastUpdatedEventId across the matching connection */
  orderLastUpdatedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of processorOrderCreatedEventId across the matching connection */
  processorOrderCreatedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of quoteAmount across the matching connection */
  quoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of quoteCollectedFees across the matching connection */
  quoteCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of quoteCollectedFeesUsd across the matching connection */
  quoteCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of upperTick across the matching connection */
  upperTick?: Maybe<Scalars['BigFloat']['output']>;
};

export type PoolOrderVarianceSampleAggregateFilter = {
  baseAmount?: InputMaybe<BigFloatFilter>;
  baseCollectedFees?: InputMaybe<BigFloatFilter>;
  baseCollectedFeesUsd?: InputMaybe<BigFloatFilter>;
  filledBaseAmount?: InputMaybe<BigFloatFilter>;
  filledQuoteAmount?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
  lowerTick?: InputMaybe<BigFloatFilter>;
  openPoolOrderId?: InputMaybe<BigFloatFilter>;
  orderCreatedEventId?: InputMaybe<BigFloatFilter>;
  orderLastUpdatedEventId?: InputMaybe<BigFloatFilter>;
  processorOrderCreatedEventId?: InputMaybe<BigFloatFilter>;
  quoteAmount?: InputMaybe<BigFloatFilter>;
  quoteCollectedFees?: InputMaybe<BigFloatFilter>;
  quoteCollectedFeesUsd?: InputMaybe<BigFloatFilter>;
  upperTick?: InputMaybe<BigFloatFilter>;
};

export type PoolOrderVarianceSampleAggregates = {
  __typename?: 'PoolOrderVarianceSampleAggregates';
  /** Sample variance of baseAmount across the matching connection */
  baseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of baseCollectedFees across the matching connection */
  baseCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of baseCollectedFeesUsd across the matching connection */
  baseCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of filledBaseAmount across the matching connection */
  filledBaseAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of filledQuoteAmount across the matching connection */
  filledQuoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of lowerTick across the matching connection */
  lowerTick?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of openPoolOrderId across the matching connection */
  openPoolOrderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of orderCreatedEventId across the matching connection */
  orderCreatedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of orderLastUpdatedEventId across the matching connection */
  orderLastUpdatedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of processorOrderCreatedEventId across the matching connection */
  processorOrderCreatedEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of quoteAmount across the matching connection */
  quoteAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of quoteCollectedFees across the matching connection */
  quoteCollectedFees?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of quoteCollectedFeesUsd across the matching connection */
  quoteCollectedFeesUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of upperTick across the matching connection */
  upperTick?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `PoolOrder` values. */
export type PoolOrdersConnection = {
  __typename?: 'PoolOrdersConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<PoolOrderAggregates>;
  /** A list of edges which contains the `PoolOrder` and cursor to aid in pagination. */
  edges: Array<PoolOrdersEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<PoolOrderAggregates>>;
  /** A list of `PoolOrder` objects. */
  nodes: Array<PoolOrder>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `PoolOrder` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `PoolOrder` values. */
export type PoolOrdersConnectionGroupedAggregatesArgs = {
  groupBy: Array<PoolOrderGroupBy>;
  having?: InputMaybe<PoolOrderHavingInput>;
};

/** A `PoolOrder` edge in the connection. */
export type PoolOrdersEdge = {
  __typename?: 'PoolOrdersEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `PoolOrder` at the end of the edge. */
  node: PoolOrder;
};

/** Methods to use when ordering `PoolOrder`. */
export type PoolOrdersOrderBy =
  | 'BASE_AMOUNT_ASC'
  | 'BASE_AMOUNT_DESC'
  | 'BASE_ASSET_ASC'
  | 'BASE_ASSET_DESC'
  | 'BASE_COLLECTED_FEES_ASC'
  | 'BASE_COLLECTED_FEES_DESC'
  | 'BASE_COLLECTED_FEES_USD_ASC'
  | 'BASE_COLLECTED_FEES_USD_DESC'
  | 'FILLED_BASE_AMOUNT_ASC'
  | 'FILLED_BASE_AMOUNT_DESC'
  | 'FILLED_QUOTE_AMOUNT_ASC'
  | 'FILLED_QUOTE_AMOUNT_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_ID_DESC'
  | 'LOWER_TICK_ASC'
  | 'LOWER_TICK_DESC'
  | 'NATURAL'
  | 'OPEN_POOL_ORDER_ID_ASC'
  | 'OPEN_POOL_ORDER_ID_DESC'
  | 'ORDER_CREATED_EVENT_ID_ASC'
  | 'ORDER_CREATED_EVENT_ID_DESC'
  | 'ORDER_CREATED_TIMESTAMP_ASC'
  | 'ORDER_CREATED_TIMESTAMP_DESC'
  | 'ORDER_ID_ASC'
  | 'ORDER_ID_DESC'
  | 'ORDER_LAST_UPDATED_EVENT_ID_ASC'
  | 'ORDER_LAST_UPDATED_EVENT_ID_DESC'
  | 'ORDER_LAST_UPDATED_TIMESTAMP_ASC'
  | 'ORDER_LAST_UPDATED_TIMESTAMP_DESC'
  | 'ORDER_TYPE_ASC'
  | 'ORDER_TYPE_DESC'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'PROCESSOR_ORDER_CREATED_EVENT_ID_ASC'
  | 'PROCESSOR_ORDER_CREATED_EVENT_ID_DESC'
  | 'QUOTE_AMOUNT_ASC'
  | 'QUOTE_AMOUNT_DESC'
  | 'QUOTE_ASSET_ASC'
  | 'QUOTE_ASSET_DESC'
  | 'QUOTE_COLLECTED_FEES_ASC'
  | 'QUOTE_COLLECTED_FEES_DESC'
  | 'QUOTE_COLLECTED_FEES_USD_ASC'
  | 'QUOTE_COLLECTED_FEES_USD_DESC'
  | 'STATUS_ASC'
  | 'STATUS_DESC'
  | 'UPPER_TICK_ASC'
  | 'UPPER_TICK_DESC';

/** The root query type which gives access points into the data universe. */
export type Query = Node & {
  __typename?: 'Query';
  /** Reads a single `_PrismaMigration` using its globally unique `ID`. */
  _prismaMigration?: Maybe<_PrismaMigration>;
  _prismaMigrationById?: Maybe<_PrismaMigration>;
  /** Reads a single `Account` using its globally unique `ID`. */
  account?: Maybe<Account>;
  accountById?: Maybe<Account>;
  accountByIdSs58?: Maybe<Account>;
  /** Reads and enables pagination through a set of `Account`. */
  allAccounts?: Maybe<AccountsConnection>;
  /** Reads and enables pagination through a set of `BoostLiquidityBalanceChange`. */
  allBoostLiquidityBalanceChanges?: Maybe<BoostLiquidityBalanceChangesConnection>;
  /** Reads and enables pagination through a set of `BoostPoolApy`. */
  allBoostPoolApies?: Maybe<BoostPoolApiesConnection>;
  /** Reads and enables pagination through a set of `BoostPoolBoostShare`. */
  allBoostPoolBoostShares?: Maybe<BoostPoolBoostSharesConnection>;
  /** Reads and enables pagination through a set of `BoostPoolLiquidity`. */
  allBoostPoolLiquidities?: Maybe<BoostPoolLiquiditiesConnection>;
  /** Reads and enables pagination through a set of `BoostPool`. */
  allBoostPools?: Maybe<BoostPoolsConnection>;
  /** Reads and enables pagination through a set of `BoostShare`. */
  allBoostShares?: Maybe<BoostSharesConnection>;
  /** Reads and enables pagination through a set of `Boost`. */
  allBoosts?: Maybe<BoostsConnection>;
  /** Reads and enables pagination through a set of `DepositChannel`. */
  allDepositChannels?: Maybe<DepositChannelsConnection>;
  /** Reads and enables pagination through a set of `Event`. */
  allEvents?: Maybe<EventsConnection>;
  /** Reads and enables pagination through a set of `LastBlock`. */
  allLastBlocks?: Maybe<LastBlocksConnection>;
  /** Reads and enables pagination through a set of `LimitOrderFill`. */
  allLimitOrderFills?: Maybe<LimitOrderFillsConnection>;
  /** Reads and enables pagination through a set of `LiquidityProviderBoostPoolSummary`. */
  allLiquidityProviderBoostPoolSummaries?: Maybe<LiquidityProviderBoostPoolSummariesConnection>;
  /** Reads and enables pagination through a set of `LiquiditySnapshot`. */
  allLiquiditySnapshots?: Maybe<LiquiditySnapshotsConnection>;
  /** Reads and enables pagination through a set of `PendingBoostLiquidityWithdrawal`. */
  allPendingBoostLiquidityWithdrawals?: Maybe<PendingBoostLiquidityWithdrawalsConnection>;
  /** Reads and enables pagination through a set of `PoolOrder`. */
  allPoolOrders?: Maybe<PoolOrdersConnection>;
  /** Reads and enables pagination through a set of `_PrismaMigration`. */
  allPrismaMigrations?: Maybe<_PrismaMigrationsConnection>;
  /** Reads and enables pagination through a set of `RangeOrderFill`. */
  allRangeOrderFills?: Maybe<RangeOrderFillsConnection>;
  /** Reads and enables pagination through a set of `TradingStrategy`. */
  allTradingStrategies?: Maybe<TradingStrategiesConnection>;
  /** Reads and enables pagination through a set of `TradingStrategyBalanceChangeEvent`. */
  allTradingStrategyBalanceChangeEvents?: Maybe<TradingStrategyBalanceChangeEventsConnection>;
  /** Reads a single `Boost` using its globally unique `ID`. */
  boost?: Maybe<Boost>;
  boostById?: Maybe<Boost>;
  boostByPrewitnessedDepositIdAndChain?: Maybe<Boost>;
  /** Reads a single `BoostLiquidityBalanceChange` using its globally unique `ID`. */
  boostLiquidityBalanceChange?: Maybe<BoostLiquidityBalanceChange>;
  boostLiquidityBalanceChangeById?: Maybe<BoostLiquidityBalanceChange>;
  /** Reads a single `BoostPool` using its globally unique `ID`. */
  boostPool?: Maybe<BoostPool>;
  /** Reads a single `BoostPoolApy` using its globally unique `ID`. */
  boostPoolApy?: Maybe<BoostPoolApy>;
  boostPoolApyByBoostPoolIdAndBlock?: Maybe<BoostPoolApy>;
  boostPoolApyById?: Maybe<BoostPoolApy>;
  /** Reads a single `BoostPoolBoostShare` using its globally unique `ID`. */
  boostPoolBoostShare?: Maybe<BoostPoolBoostShare>;
  boostPoolBoostShareByBoostIdAndBoostPoolId?: Maybe<BoostPoolBoostShare>;
  boostPoolBoostShareById?: Maybe<BoostPoolBoostShare>;
  boostPoolByAssetAndFeeTierPips?: Maybe<BoostPool>;
  boostPoolById?: Maybe<BoostPool>;
  /** Reads a single `BoostPoolLiquidity` using its globally unique `ID`. */
  boostPoolLiquidity?: Maybe<BoostPoolLiquidity>;
  boostPoolLiquidityByBoostPoolIdAndBlock?: Maybe<BoostPoolLiquidity>;
  boostPoolLiquidityById?: Maybe<BoostPoolLiquidity>;
  /** Reads a single `BoostShare` using its globally unique `ID`. */
  boostShare?: Maybe<BoostShare>;
  boostShareById?: Maybe<BoostShare>;
  boostShareByLiquidityProviderIdAndBoostIdAndBoostPoolId?: Maybe<BoostShare>;
  /** Reads a single `DepositChannel` using its globally unique `ID`. */
  depositChannel?: Maybe<DepositChannel>;
  depositChannelById?: Maybe<DepositChannel>;
  depositChannelByIssuedBlockIdAndChainAndChannelId?: Maybe<DepositChannel>;
  /** Reads a single `Event` using its globally unique `ID`. */
  event?: Maybe<Event>;
  eventByBlockAndIndexInBlock?: Maybe<Event>;
  eventById?: Maybe<Event>;
  /** Reads a single `LastBlock` using its globally unique `ID`. */
  lastBlock?: Maybe<LastBlock>;
  lastBlockById?: Maybe<LastBlock>;
  /** Reads a single `LimitOrderFill` using its globally unique `ID`. */
  limitOrderFill?: Maybe<LimitOrderFill>;
  limitOrderFillByBlockAndLiquidityProviderIdAndOrderIdAndBaseAssetAndType?: Maybe<LimitOrderFill>;
  limitOrderFillById?: Maybe<LimitOrderFill>;
  liquidityProviderBoostPoolSummaryByLiquidityProviderIdAndBoostPoolId?: Maybe<LiquidityProviderBoostPoolSummary>;
  /** Reads a single `LiquiditySnapshot` using its globally unique `ID`. */
  liquiditySnapshot?: Maybe<LiquiditySnapshot>;
  liquiditySnapshotById?: Maybe<LiquiditySnapshot>;
  liquiditySnapshotByLiquidityProviderIdAndBlock?: Maybe<LiquiditySnapshot>;
  /** Fetches an object given its globally unique `ID`. */
  node?: Maybe<Node>;
  /** The root query type must be a `Node` to work well with Relay 1 mutations. This just resolves to `query`. */
  nodeId: Scalars['ID']['output'];
  /** Reads a single `PendingBoostLiquidityWithdrawal` using its globally unique `ID`. */
  pendingBoostLiquidityWithdrawal?: Maybe<PendingBoostLiquidityWithdrawal>;
  pendingBoostLiquidityWithdrawalById?: Maybe<PendingBoostLiquidityWithdrawal>;
  /** Reads a single `PoolOrder` using its globally unique `ID`. */
  poolOrder?: Maybe<PoolOrder>;
  poolOrderById?: Maybe<PoolOrder>;
  /**
   * Exposes the root query type nested one level down. This is helpful for Relay 1
   * which can only query top level fields if they are in a particular form.
   */
  query: Query;
  /** Reads a single `RangeOrderFill` using its globally unique `ID`. */
  rangeOrderFill?: Maybe<RangeOrderFill>;
  rangeOrderFillByBlockAndLiquidityProviderIdAndOrderIdAndBaseAsset?: Maybe<RangeOrderFill>;
  rangeOrderFillById?: Maybe<RangeOrderFill>;
  /** Reads a single `TradingStrategy` using its globally unique `ID`. */
  tradingStrategy?: Maybe<TradingStrategy>;
  /** Reads a single `TradingStrategyBalanceChangeEvent` using its globally unique `ID`. */
  tradingStrategyBalanceChangeEvent?: Maybe<TradingStrategyBalanceChangeEvent>;
  tradingStrategyBalanceChangeEventById?: Maybe<TradingStrategyBalanceChangeEvent>;
  tradingStrategyById?: Maybe<TradingStrategy>;
};


/** The root query type which gives access points into the data universe. */
export type Query_PrismaMigrationArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type Query_PrismaMigrationByIdArgs = {
  id: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryAccountArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryAccountByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryAccountByIdSs58Args = {
  idSs58: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryAllAccountsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<AccountCondition>;
  filter?: InputMaybe<AccountFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<AccountsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllBoostLiquidityBalanceChangesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BoostLiquidityBalanceChangeCondition>;
  filter?: InputMaybe<BoostLiquidityBalanceChangeFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BoostLiquidityBalanceChangesOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllBoostPoolApiesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BoostPoolApyCondition>;
  filter?: InputMaybe<BoostPoolApyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BoostPoolApiesOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllBoostPoolBoostSharesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BoostPoolBoostShareCondition>;
  filter?: InputMaybe<BoostPoolBoostShareFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BoostPoolBoostSharesOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllBoostPoolLiquiditiesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BoostPoolLiquidityCondition>;
  filter?: InputMaybe<BoostPoolLiquidityFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BoostPoolLiquiditiesOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllBoostPoolsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BoostPoolCondition>;
  filter?: InputMaybe<BoostPoolFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BoostPoolsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllBoostSharesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BoostShareCondition>;
  filter?: InputMaybe<BoostShareFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BoostSharesOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllBoostsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<BoostCondition>;
  filter?: InputMaybe<BoostFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<BoostsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllDepositChannelsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<DepositChannelCondition>;
  filter?: InputMaybe<DepositChannelFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<DepositChannelsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllEventsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<EventCondition>;
  filter?: InputMaybe<EventFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<EventsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllLastBlocksArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<LastBlockCondition>;
  filter?: InputMaybe<LastBlockFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LastBlocksOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllLimitOrderFillsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<LimitOrderFillCondition>;
  filter?: InputMaybe<LimitOrderFillFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LimitOrderFillsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllLiquidityProviderBoostPoolSummariesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<LiquidityProviderBoostPoolSummaryCondition>;
  filter?: InputMaybe<LiquidityProviderBoostPoolSummaryFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LiquidityProviderBoostPoolSummariesOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllLiquiditySnapshotsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<LiquiditySnapshotCondition>;
  filter?: InputMaybe<LiquiditySnapshotFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<LiquiditySnapshotsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllPendingBoostLiquidityWithdrawalsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<PendingBoostLiquidityWithdrawalCondition>;
  filter?: InputMaybe<PendingBoostLiquidityWithdrawalFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PendingBoostLiquidityWithdrawalsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllPoolOrdersArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<PoolOrderCondition>;
  filter?: InputMaybe<PoolOrderFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<PoolOrdersOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllPrismaMigrationsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<_PrismaMigrationCondition>;
  filter?: InputMaybe<_PrismaMigrationFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<_PrismaMigrationsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllRangeOrderFillsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<RangeOrderFillCondition>;
  filter?: InputMaybe<RangeOrderFillFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<RangeOrderFillsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllTradingStrategiesArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<TradingStrategyCondition>;
  filter?: InputMaybe<TradingStrategyFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TradingStrategiesOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryAllTradingStrategyBalanceChangeEventsArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<TradingStrategyBalanceChangeEventCondition>;
  filter?: InputMaybe<TradingStrategyBalanceChangeEventFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TradingStrategyBalanceChangeEventsOrderBy>>;
};


/** The root query type which gives access points into the data universe. */
export type QueryBoostArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBoostByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBoostByPrewitnessedDepositIdAndChainArgs = {
  chain: ChainflipChain;
  prewitnessedDepositId: Scalars['BigInt']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBoostLiquidityBalanceChangeArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBoostLiquidityBalanceChangeByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBoostPoolArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBoostPoolApyArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBoostPoolApyByBoostPoolIdAndBlockArgs = {
  block: Scalars['Int']['input'];
  boostPoolId: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBoostPoolApyByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBoostPoolBoostShareArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBoostPoolBoostShareByBoostIdAndBoostPoolIdArgs = {
  boostId: Scalars['Int']['input'];
  boostPoolId: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBoostPoolBoostShareByIdArgs = {
  id: Scalars['BigInt']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBoostPoolByAssetAndFeeTierPipsArgs = {
  asset: ChainflipAsset;
  feeTierPips: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBoostPoolByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBoostPoolLiquidityArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBoostPoolLiquidityByBoostPoolIdAndBlockArgs = {
  block: Scalars['Int']['input'];
  boostPoolId: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBoostPoolLiquidityByIdArgs = {
  id: Scalars['BigInt']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBoostShareArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBoostShareByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryBoostShareByLiquidityProviderIdAndBoostIdAndBoostPoolIdArgs = {
  boostId: Scalars['Int']['input'];
  boostPoolId: Scalars['Int']['input'];
  liquidityProviderId: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryDepositChannelArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryDepositChannelByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryDepositChannelByIssuedBlockIdAndChainAndChannelIdArgs = {
  chain: ChainflipChain;
  channelId: Scalars['BigInt']['input'];
  issuedBlockId: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryEventArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryEventByBlockAndIndexInBlockArgs = {
  block: Scalars['Int']['input'];
  indexInBlock: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryEventByIdArgs = {
  id: Scalars['BigInt']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryLastBlockArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryLastBlockByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryLimitOrderFillArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryLimitOrderFillByBlockAndLiquidityProviderIdAndOrderIdAndBaseAssetAndTypeArgs = {
  baseAsset: ChainflipAsset;
  block: Scalars['Int']['input'];
  liquidityProviderId: Scalars['Int']['input'];
  orderId: Scalars['String']['input'];
  type: LimitOrderType;
};


/** The root query type which gives access points into the data universe. */
export type QueryLimitOrderFillByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryLiquidityProviderBoostPoolSummaryByLiquidityProviderIdAndBoostPoolIdArgs = {
  boostPoolId: Scalars['Int']['input'];
  liquidityProviderId: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryLiquiditySnapshotArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryLiquiditySnapshotByIdArgs = {
  id: Scalars['BigInt']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryLiquiditySnapshotByLiquidityProviderIdAndBlockArgs = {
  block: Scalars['Int']['input'];
  liquidityProviderId: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryNodeArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryPendingBoostLiquidityWithdrawalArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryPendingBoostLiquidityWithdrawalByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryPoolOrderArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryPoolOrderByIdArgs = {
  id: Scalars['BigInt']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryRangeOrderFillArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryRangeOrderFillByBlockAndLiquidityProviderIdAndOrderIdAndBaseAssetArgs = {
  baseAsset: ChainflipAsset;
  block: Scalars['Int']['input'];
  liquidityProviderId: Scalars['Int']['input'];
  orderId: Scalars['String']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryRangeOrderFillByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryTradingStrategyArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryTradingStrategyBalanceChangeEventArgs = {
  nodeId: Scalars['ID']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryTradingStrategyBalanceChangeEventByIdArgs = {
  id: Scalars['Int']['input'];
};


/** The root query type which gives access points into the data universe. */
export type QueryTradingStrategyByIdArgs = {
  id: Scalars['Int']['input'];
};

export type RangeOrderFill = Node & {
  __typename?: 'RangeOrderFill';
  /** Reads a single `Account` that is related to this `RangeOrderFill`. */
  accountByLiquidityProviderId: Account;
  baseAsset: ChainflipAsset;
  baseFeesEarned: Scalars['BigFloat']['output'];
  baseFeesEarnedValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  baseFilledAmount: Scalars['BigFloat']['output'];
  baseFilledAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  block: Scalars['Int']['output'];
  blockTimestamp?: Maybe<Scalars['Datetime']['output']>;
  id: Scalars['Int']['output'];
  liquidity: Scalars['BigFloat']['output'];
  liquidityProviderId: Scalars['Int']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  orderId: Scalars['String']['output'];
  quoteFeesEarned: Scalars['BigFloat']['output'];
  quoteFeesEarnedValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  quoteFilledAmount: Scalars['BigFloat']['output'];
  quoteFilledAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  rangeEndTick: Scalars['Int']['output'];
  rangeStartTick: Scalars['Int']['output'];
};

export type RangeOrderFillAggregates = {
  __typename?: 'RangeOrderFillAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<RangeOrderFillAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<RangeOrderFillDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<RangeOrderFillMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<RangeOrderFillMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<RangeOrderFillStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<RangeOrderFillStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<RangeOrderFillSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<RangeOrderFillVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<RangeOrderFillVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `RangeOrderFill` object types. */
export type RangeOrderFillAggregatesFilter = {
  /** Mean average aggregate over matching `RangeOrderFill` objects. */
  average?: InputMaybe<RangeOrderFillAverageAggregateFilter>;
  /** Distinct count aggregate over matching `RangeOrderFill` objects. */
  distinctCount?: InputMaybe<RangeOrderFillDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `RangeOrderFill` object to be included within the aggregate. */
  filter?: InputMaybe<RangeOrderFillFilter>;
  /** Maximum aggregate over matching `RangeOrderFill` objects. */
  max?: InputMaybe<RangeOrderFillMaxAggregateFilter>;
  /** Minimum aggregate over matching `RangeOrderFill` objects. */
  min?: InputMaybe<RangeOrderFillMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `RangeOrderFill` objects. */
  stddevPopulation?: InputMaybe<RangeOrderFillStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `RangeOrderFill` objects. */
  stddevSample?: InputMaybe<RangeOrderFillStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `RangeOrderFill` objects. */
  sum?: InputMaybe<RangeOrderFillSumAggregateFilter>;
  /** Population variance aggregate over matching `RangeOrderFill` objects. */
  variancePopulation?: InputMaybe<RangeOrderFillVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `RangeOrderFill` objects. */
  varianceSample?: InputMaybe<RangeOrderFillVarianceSampleAggregateFilter>;
};

export type RangeOrderFillAverageAggregateFilter = {
  baseFeesEarned?: InputMaybe<BigFloatFilter>;
  baseFeesEarnedValueUsd?: InputMaybe<BigFloatFilter>;
  baseFilledAmount?: InputMaybe<BigFloatFilter>;
  baseFilledAmountValueUsd?: InputMaybe<BigFloatFilter>;
  block?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidity?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
  quoteFeesEarned?: InputMaybe<BigFloatFilter>;
  quoteFeesEarnedValueUsd?: InputMaybe<BigFloatFilter>;
  quoteFilledAmount?: InputMaybe<BigFloatFilter>;
  quoteFilledAmountValueUsd?: InputMaybe<BigFloatFilter>;
  rangeEndTick?: InputMaybe<BigFloatFilter>;
  rangeStartTick?: InputMaybe<BigFloatFilter>;
};

export type RangeOrderFillAverageAggregates = {
  __typename?: 'RangeOrderFillAverageAggregates';
  /** Mean average of baseFeesEarned across the matching connection */
  baseFeesEarned?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of baseFeesEarnedValueUsd across the matching connection */
  baseFeesEarnedValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of baseFilledAmount across the matching connection */
  baseFilledAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of baseFilledAmountValueUsd across the matching connection */
  baseFilledAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of block across the matching connection */
  block?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of liquidity across the matching connection */
  liquidity?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of quoteFeesEarned across the matching connection */
  quoteFeesEarned?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of quoteFeesEarnedValueUsd across the matching connection */
  quoteFeesEarnedValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of quoteFilledAmount across the matching connection */
  quoteFilledAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of quoteFilledAmountValueUsd across the matching connection */
  quoteFilledAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of rangeEndTick across the matching connection */
  rangeEndTick?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of rangeStartTick across the matching connection */
  rangeStartTick?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `RangeOrderFill` object types. All fields are
 * tested for equality and combined with a logical ‘and.’
 */
export type RangeOrderFillCondition = {
  /** Checks for equality with the object’s `baseAsset` field. */
  baseAsset?: InputMaybe<ChainflipAsset>;
  /** Checks for equality with the object’s `baseFeesEarned` field. */
  baseFeesEarned?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `baseFeesEarnedValueUsd` field. */
  baseFeesEarnedValueUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `baseFilledAmount` field. */
  baseFilledAmount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `baseFilledAmountValueUsd` field. */
  baseFilledAmountValueUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `block` field. */
  block?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `blockTimestamp` field. */
  blockTimestamp?: InputMaybe<Scalars['Datetime']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `liquidity` field. */
  liquidity?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `liquidityProviderId` field. */
  liquidityProviderId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `orderId` field. */
  orderId?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `quoteFeesEarned` field. */
  quoteFeesEarned?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `quoteFeesEarnedValueUsd` field. */
  quoteFeesEarnedValueUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `quoteFilledAmount` field. */
  quoteFilledAmount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `quoteFilledAmountValueUsd` field. */
  quoteFilledAmountValueUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `rangeEndTick` field. */
  rangeEndTick?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `rangeStartTick` field. */
  rangeStartTick?: InputMaybe<Scalars['Int']['input']>;
};

export type RangeOrderFillDistinctCountAggregateFilter = {
  baseAsset?: InputMaybe<BigIntFilter>;
  baseFeesEarned?: InputMaybe<BigIntFilter>;
  baseFeesEarnedValueUsd?: InputMaybe<BigIntFilter>;
  baseFilledAmount?: InputMaybe<BigIntFilter>;
  baseFilledAmountValueUsd?: InputMaybe<BigIntFilter>;
  block?: InputMaybe<BigIntFilter>;
  blockTimestamp?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  liquidity?: InputMaybe<BigIntFilter>;
  liquidityProviderId?: InputMaybe<BigIntFilter>;
  orderId?: InputMaybe<BigIntFilter>;
  quoteFeesEarned?: InputMaybe<BigIntFilter>;
  quoteFeesEarnedValueUsd?: InputMaybe<BigIntFilter>;
  quoteFilledAmount?: InputMaybe<BigIntFilter>;
  quoteFilledAmountValueUsd?: InputMaybe<BigIntFilter>;
  rangeEndTick?: InputMaybe<BigIntFilter>;
  rangeStartTick?: InputMaybe<BigIntFilter>;
};

export type RangeOrderFillDistinctCountAggregates = {
  __typename?: 'RangeOrderFillDistinctCountAggregates';
  /** Distinct count of baseAsset across the matching connection */
  baseAsset?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of baseFeesEarned across the matching connection */
  baseFeesEarned?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of baseFeesEarnedValueUsd across the matching connection */
  baseFeesEarnedValueUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of baseFilledAmount across the matching connection */
  baseFilledAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of baseFilledAmountValueUsd across the matching connection */
  baseFilledAmountValueUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of block across the matching connection */
  block?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of blockTimestamp across the matching connection */
  blockTimestamp?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of liquidity across the matching connection */
  liquidity?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of orderId across the matching connection */
  orderId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of quoteFeesEarned across the matching connection */
  quoteFeesEarned?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of quoteFeesEarnedValueUsd across the matching connection */
  quoteFeesEarnedValueUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of quoteFilledAmount across the matching connection */
  quoteFilledAmount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of quoteFilledAmountValueUsd across the matching connection */
  quoteFilledAmountValueUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of rangeEndTick across the matching connection */
  rangeEndTick?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of rangeStartTick across the matching connection */
  rangeStartTick?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `RangeOrderFill` object types. All fields are combined with a logical ‘and.’ */
export type RangeOrderFillFilter = {
  /** Filter by the object’s `accountByLiquidityProviderId` relation. */
  accountByLiquidityProviderId?: InputMaybe<AccountFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<RangeOrderFillFilter>>;
  /** Filter by the object’s `baseAsset` field. */
  baseAsset?: InputMaybe<ChainflipAssetFilter>;
  /** Filter by the object’s `baseFeesEarned` field. */
  baseFeesEarned?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `baseFeesEarnedValueUsd` field. */
  baseFeesEarnedValueUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `baseFilledAmount` field. */
  baseFilledAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `baseFilledAmountValueUsd` field. */
  baseFilledAmountValueUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `block` field. */
  block?: InputMaybe<IntFilter>;
  /** Filter by the object’s `blockTimestamp` field. */
  blockTimestamp?: InputMaybe<DatetimeFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Filter by the object’s `liquidity` field. */
  liquidity?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `liquidityProviderId` field. */
  liquidityProviderId?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<RangeOrderFillFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<RangeOrderFillFilter>>;
  /** Filter by the object’s `orderId` field. */
  orderId?: InputMaybe<StringFilter>;
  /** Filter by the object’s `quoteFeesEarned` field. */
  quoteFeesEarned?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `quoteFeesEarnedValueUsd` field. */
  quoteFeesEarnedValueUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `quoteFilledAmount` field. */
  quoteFilledAmount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `quoteFilledAmountValueUsd` field. */
  quoteFilledAmountValueUsd?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `rangeEndTick` field. */
  rangeEndTick?: InputMaybe<IntFilter>;
  /** Filter by the object’s `rangeStartTick` field. */
  rangeStartTick?: InputMaybe<IntFilter>;
};

/** Grouping methods for `RangeOrderFill` for usage during aggregation. */
export type RangeOrderFillGroupBy =
  | 'BASE_ASSET'
  | 'BASE_FEES_EARNED'
  | 'BASE_FEES_EARNED_VALUE_USD'
  | 'BASE_FILLED_AMOUNT'
  | 'BASE_FILLED_AMOUNT_VALUE_USD'
  | 'BLOCK'
  | 'BLOCK_TIMESTAMP'
  | 'BLOCK_TIMESTAMP_TRUNCATED_TO_DAY'
  | 'BLOCK_TIMESTAMP_TRUNCATED_TO_HOUR'
  | 'LIQUIDITY'
  | 'LIQUIDITY_PROVIDER_ID'
  | 'ORDER_ID'
  | 'QUOTE_FEES_EARNED'
  | 'QUOTE_FEES_EARNED_VALUE_USD'
  | 'QUOTE_FILLED_AMOUNT'
  | 'QUOTE_FILLED_AMOUNT_VALUE_USD'
  | 'RANGE_END_TICK'
  | 'RANGE_START_TICK';

export type RangeOrderFillHavingAverageInput = {
  baseFeesEarned?: InputMaybe<HavingBigfloatFilter>;
  baseFeesEarnedValueUsd?: InputMaybe<HavingBigfloatFilter>;
  baseFilledAmount?: InputMaybe<HavingBigfloatFilter>;
  baseFilledAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  block?: InputMaybe<HavingIntFilter>;
  blockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidity?: InputMaybe<HavingBigfloatFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  quoteFeesEarned?: InputMaybe<HavingBigfloatFilter>;
  quoteFeesEarnedValueUsd?: InputMaybe<HavingBigfloatFilter>;
  quoteFilledAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteFilledAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  rangeEndTick?: InputMaybe<HavingIntFilter>;
  rangeStartTick?: InputMaybe<HavingIntFilter>;
};

export type RangeOrderFillHavingDistinctCountInput = {
  baseFeesEarned?: InputMaybe<HavingBigfloatFilter>;
  baseFeesEarnedValueUsd?: InputMaybe<HavingBigfloatFilter>;
  baseFilledAmount?: InputMaybe<HavingBigfloatFilter>;
  baseFilledAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  block?: InputMaybe<HavingIntFilter>;
  blockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidity?: InputMaybe<HavingBigfloatFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  quoteFeesEarned?: InputMaybe<HavingBigfloatFilter>;
  quoteFeesEarnedValueUsd?: InputMaybe<HavingBigfloatFilter>;
  quoteFilledAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteFilledAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  rangeEndTick?: InputMaybe<HavingIntFilter>;
  rangeStartTick?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `RangeOrderFill` aggregates. */
export type RangeOrderFillHavingInput = {
  AND?: InputMaybe<Array<RangeOrderFillHavingInput>>;
  OR?: InputMaybe<Array<RangeOrderFillHavingInput>>;
  average?: InputMaybe<RangeOrderFillHavingAverageInput>;
  distinctCount?: InputMaybe<RangeOrderFillHavingDistinctCountInput>;
  max?: InputMaybe<RangeOrderFillHavingMaxInput>;
  min?: InputMaybe<RangeOrderFillHavingMinInput>;
  stddevPopulation?: InputMaybe<RangeOrderFillHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<RangeOrderFillHavingStddevSampleInput>;
  sum?: InputMaybe<RangeOrderFillHavingSumInput>;
  variancePopulation?: InputMaybe<RangeOrderFillHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<RangeOrderFillHavingVarianceSampleInput>;
};

export type RangeOrderFillHavingMaxInput = {
  baseFeesEarned?: InputMaybe<HavingBigfloatFilter>;
  baseFeesEarnedValueUsd?: InputMaybe<HavingBigfloatFilter>;
  baseFilledAmount?: InputMaybe<HavingBigfloatFilter>;
  baseFilledAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  block?: InputMaybe<HavingIntFilter>;
  blockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidity?: InputMaybe<HavingBigfloatFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  quoteFeesEarned?: InputMaybe<HavingBigfloatFilter>;
  quoteFeesEarnedValueUsd?: InputMaybe<HavingBigfloatFilter>;
  quoteFilledAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteFilledAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  rangeEndTick?: InputMaybe<HavingIntFilter>;
  rangeStartTick?: InputMaybe<HavingIntFilter>;
};

export type RangeOrderFillHavingMinInput = {
  baseFeesEarned?: InputMaybe<HavingBigfloatFilter>;
  baseFeesEarnedValueUsd?: InputMaybe<HavingBigfloatFilter>;
  baseFilledAmount?: InputMaybe<HavingBigfloatFilter>;
  baseFilledAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  block?: InputMaybe<HavingIntFilter>;
  blockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidity?: InputMaybe<HavingBigfloatFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  quoteFeesEarned?: InputMaybe<HavingBigfloatFilter>;
  quoteFeesEarnedValueUsd?: InputMaybe<HavingBigfloatFilter>;
  quoteFilledAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteFilledAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  rangeEndTick?: InputMaybe<HavingIntFilter>;
  rangeStartTick?: InputMaybe<HavingIntFilter>;
};

export type RangeOrderFillHavingStddevPopulationInput = {
  baseFeesEarned?: InputMaybe<HavingBigfloatFilter>;
  baseFeesEarnedValueUsd?: InputMaybe<HavingBigfloatFilter>;
  baseFilledAmount?: InputMaybe<HavingBigfloatFilter>;
  baseFilledAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  block?: InputMaybe<HavingIntFilter>;
  blockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidity?: InputMaybe<HavingBigfloatFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  quoteFeesEarned?: InputMaybe<HavingBigfloatFilter>;
  quoteFeesEarnedValueUsd?: InputMaybe<HavingBigfloatFilter>;
  quoteFilledAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteFilledAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  rangeEndTick?: InputMaybe<HavingIntFilter>;
  rangeStartTick?: InputMaybe<HavingIntFilter>;
};

export type RangeOrderFillHavingStddevSampleInput = {
  baseFeesEarned?: InputMaybe<HavingBigfloatFilter>;
  baseFeesEarnedValueUsd?: InputMaybe<HavingBigfloatFilter>;
  baseFilledAmount?: InputMaybe<HavingBigfloatFilter>;
  baseFilledAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  block?: InputMaybe<HavingIntFilter>;
  blockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidity?: InputMaybe<HavingBigfloatFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  quoteFeesEarned?: InputMaybe<HavingBigfloatFilter>;
  quoteFeesEarnedValueUsd?: InputMaybe<HavingBigfloatFilter>;
  quoteFilledAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteFilledAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  rangeEndTick?: InputMaybe<HavingIntFilter>;
  rangeStartTick?: InputMaybe<HavingIntFilter>;
};

export type RangeOrderFillHavingSumInput = {
  baseFeesEarned?: InputMaybe<HavingBigfloatFilter>;
  baseFeesEarnedValueUsd?: InputMaybe<HavingBigfloatFilter>;
  baseFilledAmount?: InputMaybe<HavingBigfloatFilter>;
  baseFilledAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  block?: InputMaybe<HavingIntFilter>;
  blockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidity?: InputMaybe<HavingBigfloatFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  quoteFeesEarned?: InputMaybe<HavingBigfloatFilter>;
  quoteFeesEarnedValueUsd?: InputMaybe<HavingBigfloatFilter>;
  quoteFilledAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteFilledAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  rangeEndTick?: InputMaybe<HavingIntFilter>;
  rangeStartTick?: InputMaybe<HavingIntFilter>;
};

export type RangeOrderFillHavingVariancePopulationInput = {
  baseFeesEarned?: InputMaybe<HavingBigfloatFilter>;
  baseFeesEarnedValueUsd?: InputMaybe<HavingBigfloatFilter>;
  baseFilledAmount?: InputMaybe<HavingBigfloatFilter>;
  baseFilledAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  block?: InputMaybe<HavingIntFilter>;
  blockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidity?: InputMaybe<HavingBigfloatFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  quoteFeesEarned?: InputMaybe<HavingBigfloatFilter>;
  quoteFeesEarnedValueUsd?: InputMaybe<HavingBigfloatFilter>;
  quoteFilledAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteFilledAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  rangeEndTick?: InputMaybe<HavingIntFilter>;
  rangeStartTick?: InputMaybe<HavingIntFilter>;
};

export type RangeOrderFillHavingVarianceSampleInput = {
  baseFeesEarned?: InputMaybe<HavingBigfloatFilter>;
  baseFeesEarnedValueUsd?: InputMaybe<HavingBigfloatFilter>;
  baseFilledAmount?: InputMaybe<HavingBigfloatFilter>;
  baseFilledAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  block?: InputMaybe<HavingIntFilter>;
  blockTimestamp?: InputMaybe<HavingDatetimeFilter>;
  id?: InputMaybe<HavingIntFilter>;
  liquidity?: InputMaybe<HavingBigfloatFilter>;
  liquidityProviderId?: InputMaybe<HavingIntFilter>;
  quoteFeesEarned?: InputMaybe<HavingBigfloatFilter>;
  quoteFeesEarnedValueUsd?: InputMaybe<HavingBigfloatFilter>;
  quoteFilledAmount?: InputMaybe<HavingBigfloatFilter>;
  quoteFilledAmountValueUsd?: InputMaybe<HavingBigfloatFilter>;
  rangeEndTick?: InputMaybe<HavingIntFilter>;
  rangeStartTick?: InputMaybe<HavingIntFilter>;
};

export type RangeOrderFillMaxAggregateFilter = {
  baseFeesEarned?: InputMaybe<BigFloatFilter>;
  baseFeesEarnedValueUsd?: InputMaybe<BigFloatFilter>;
  baseFilledAmount?: InputMaybe<BigFloatFilter>;
  baseFilledAmountValueUsd?: InputMaybe<BigFloatFilter>;
  block?: InputMaybe<IntFilter>;
  id?: InputMaybe<IntFilter>;
  liquidity?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<IntFilter>;
  quoteFeesEarned?: InputMaybe<BigFloatFilter>;
  quoteFeesEarnedValueUsd?: InputMaybe<BigFloatFilter>;
  quoteFilledAmount?: InputMaybe<BigFloatFilter>;
  quoteFilledAmountValueUsd?: InputMaybe<BigFloatFilter>;
  rangeEndTick?: InputMaybe<IntFilter>;
  rangeStartTick?: InputMaybe<IntFilter>;
};

export type RangeOrderFillMaxAggregates = {
  __typename?: 'RangeOrderFillMaxAggregates';
  /** Maximum of baseFeesEarned across the matching connection */
  baseFeesEarned?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of baseFeesEarnedValueUsd across the matching connection */
  baseFeesEarnedValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of baseFilledAmount across the matching connection */
  baseFilledAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of baseFilledAmountValueUsd across the matching connection */
  baseFilledAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of block across the matching connection */
  block?: Maybe<Scalars['Int']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of liquidity across the matching connection */
  liquidity?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of quoteFeesEarned across the matching connection */
  quoteFeesEarned?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of quoteFeesEarnedValueUsd across the matching connection */
  quoteFeesEarnedValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of quoteFilledAmount across the matching connection */
  quoteFilledAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of quoteFilledAmountValueUsd across the matching connection */
  quoteFilledAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of rangeEndTick across the matching connection */
  rangeEndTick?: Maybe<Scalars['Int']['output']>;
  /** Maximum of rangeStartTick across the matching connection */
  rangeStartTick?: Maybe<Scalars['Int']['output']>;
};

export type RangeOrderFillMinAggregateFilter = {
  baseFeesEarned?: InputMaybe<BigFloatFilter>;
  baseFeesEarnedValueUsd?: InputMaybe<BigFloatFilter>;
  baseFilledAmount?: InputMaybe<BigFloatFilter>;
  baseFilledAmountValueUsd?: InputMaybe<BigFloatFilter>;
  block?: InputMaybe<IntFilter>;
  id?: InputMaybe<IntFilter>;
  liquidity?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<IntFilter>;
  quoteFeesEarned?: InputMaybe<BigFloatFilter>;
  quoteFeesEarnedValueUsd?: InputMaybe<BigFloatFilter>;
  quoteFilledAmount?: InputMaybe<BigFloatFilter>;
  quoteFilledAmountValueUsd?: InputMaybe<BigFloatFilter>;
  rangeEndTick?: InputMaybe<IntFilter>;
  rangeStartTick?: InputMaybe<IntFilter>;
};

export type RangeOrderFillMinAggregates = {
  __typename?: 'RangeOrderFillMinAggregates';
  /** Minimum of baseFeesEarned across the matching connection */
  baseFeesEarned?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of baseFeesEarnedValueUsd across the matching connection */
  baseFeesEarnedValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of baseFilledAmount across the matching connection */
  baseFilledAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of baseFilledAmountValueUsd across the matching connection */
  baseFilledAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of block across the matching connection */
  block?: Maybe<Scalars['Int']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of liquidity across the matching connection */
  liquidity?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of quoteFeesEarned across the matching connection */
  quoteFeesEarned?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of quoteFeesEarnedValueUsd across the matching connection */
  quoteFeesEarnedValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of quoteFilledAmount across the matching connection */
  quoteFilledAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of quoteFilledAmountValueUsd across the matching connection */
  quoteFilledAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of rangeEndTick across the matching connection */
  rangeEndTick?: Maybe<Scalars['Int']['output']>;
  /** Minimum of rangeStartTick across the matching connection */
  rangeStartTick?: Maybe<Scalars['Int']['output']>;
};

export type RangeOrderFillStddevPopulationAggregateFilter = {
  baseFeesEarned?: InputMaybe<BigFloatFilter>;
  baseFeesEarnedValueUsd?: InputMaybe<BigFloatFilter>;
  baseFilledAmount?: InputMaybe<BigFloatFilter>;
  baseFilledAmountValueUsd?: InputMaybe<BigFloatFilter>;
  block?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidity?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
  quoteFeesEarned?: InputMaybe<BigFloatFilter>;
  quoteFeesEarnedValueUsd?: InputMaybe<BigFloatFilter>;
  quoteFilledAmount?: InputMaybe<BigFloatFilter>;
  quoteFilledAmountValueUsd?: InputMaybe<BigFloatFilter>;
  rangeEndTick?: InputMaybe<BigFloatFilter>;
  rangeStartTick?: InputMaybe<BigFloatFilter>;
};

export type RangeOrderFillStddevPopulationAggregates = {
  __typename?: 'RangeOrderFillStddevPopulationAggregates';
  /** Population standard deviation of baseFeesEarned across the matching connection */
  baseFeesEarned?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of baseFeesEarnedValueUsd across the matching connection */
  baseFeesEarnedValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of baseFilledAmount across the matching connection */
  baseFilledAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of baseFilledAmountValueUsd across the matching connection */
  baseFilledAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of block across the matching connection */
  block?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of liquidity across the matching connection */
  liquidity?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of quoteFeesEarned across the matching connection */
  quoteFeesEarned?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of quoteFeesEarnedValueUsd across the matching connection */
  quoteFeesEarnedValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of quoteFilledAmount across the matching connection */
  quoteFilledAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of quoteFilledAmountValueUsd across the matching connection */
  quoteFilledAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of rangeEndTick across the matching connection */
  rangeEndTick?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of rangeStartTick across the matching connection */
  rangeStartTick?: Maybe<Scalars['BigFloat']['output']>;
};

export type RangeOrderFillStddevSampleAggregateFilter = {
  baseFeesEarned?: InputMaybe<BigFloatFilter>;
  baseFeesEarnedValueUsd?: InputMaybe<BigFloatFilter>;
  baseFilledAmount?: InputMaybe<BigFloatFilter>;
  baseFilledAmountValueUsd?: InputMaybe<BigFloatFilter>;
  block?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidity?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
  quoteFeesEarned?: InputMaybe<BigFloatFilter>;
  quoteFeesEarnedValueUsd?: InputMaybe<BigFloatFilter>;
  quoteFilledAmount?: InputMaybe<BigFloatFilter>;
  quoteFilledAmountValueUsd?: InputMaybe<BigFloatFilter>;
  rangeEndTick?: InputMaybe<BigFloatFilter>;
  rangeStartTick?: InputMaybe<BigFloatFilter>;
};

export type RangeOrderFillStddevSampleAggregates = {
  __typename?: 'RangeOrderFillStddevSampleAggregates';
  /** Sample standard deviation of baseFeesEarned across the matching connection */
  baseFeesEarned?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of baseFeesEarnedValueUsd across the matching connection */
  baseFeesEarnedValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of baseFilledAmount across the matching connection */
  baseFilledAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of baseFilledAmountValueUsd across the matching connection */
  baseFilledAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of block across the matching connection */
  block?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of liquidity across the matching connection */
  liquidity?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of quoteFeesEarned across the matching connection */
  quoteFeesEarned?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of quoteFeesEarnedValueUsd across the matching connection */
  quoteFeesEarnedValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of quoteFilledAmount across the matching connection */
  quoteFilledAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of quoteFilledAmountValueUsd across the matching connection */
  quoteFilledAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of rangeEndTick across the matching connection */
  rangeEndTick?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of rangeStartTick across the matching connection */
  rangeStartTick?: Maybe<Scalars['BigFloat']['output']>;
};

export type RangeOrderFillSumAggregateFilter = {
  baseFeesEarned?: InputMaybe<BigFloatFilter>;
  baseFeesEarnedValueUsd?: InputMaybe<BigFloatFilter>;
  baseFilledAmount?: InputMaybe<BigFloatFilter>;
  baseFilledAmountValueUsd?: InputMaybe<BigFloatFilter>;
  block?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  liquidity?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigIntFilter>;
  quoteFeesEarned?: InputMaybe<BigFloatFilter>;
  quoteFeesEarnedValueUsd?: InputMaybe<BigFloatFilter>;
  quoteFilledAmount?: InputMaybe<BigFloatFilter>;
  quoteFilledAmountValueUsd?: InputMaybe<BigFloatFilter>;
  rangeEndTick?: InputMaybe<BigIntFilter>;
  rangeStartTick?: InputMaybe<BigIntFilter>;
};

export type RangeOrderFillSumAggregates = {
  __typename?: 'RangeOrderFillSumAggregates';
  /** Sum of baseFeesEarned across the matching connection */
  baseFeesEarned: Scalars['BigFloat']['output'];
  /** Sum of baseFeesEarnedValueUsd across the matching connection */
  baseFeesEarnedValueUsd: Scalars['BigFloat']['output'];
  /** Sum of baseFilledAmount across the matching connection */
  baseFilledAmount: Scalars['BigFloat']['output'];
  /** Sum of baseFilledAmountValueUsd across the matching connection */
  baseFilledAmountValueUsd: Scalars['BigFloat']['output'];
  /** Sum of block across the matching connection */
  block: Scalars['BigInt']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of liquidity across the matching connection */
  liquidity: Scalars['BigFloat']['output'];
  /** Sum of liquidityProviderId across the matching connection */
  liquidityProviderId: Scalars['BigInt']['output'];
  /** Sum of quoteFeesEarned across the matching connection */
  quoteFeesEarned: Scalars['BigFloat']['output'];
  /** Sum of quoteFeesEarnedValueUsd across the matching connection */
  quoteFeesEarnedValueUsd: Scalars['BigFloat']['output'];
  /** Sum of quoteFilledAmount across the matching connection */
  quoteFilledAmount: Scalars['BigFloat']['output'];
  /** Sum of quoteFilledAmountValueUsd across the matching connection */
  quoteFilledAmountValueUsd: Scalars['BigFloat']['output'];
  /** Sum of rangeEndTick across the matching connection */
  rangeEndTick: Scalars['BigInt']['output'];
  /** Sum of rangeStartTick across the matching connection */
  rangeStartTick: Scalars['BigInt']['output'];
};

export type RangeOrderFillVariancePopulationAggregateFilter = {
  baseFeesEarned?: InputMaybe<BigFloatFilter>;
  baseFeesEarnedValueUsd?: InputMaybe<BigFloatFilter>;
  baseFilledAmount?: InputMaybe<BigFloatFilter>;
  baseFilledAmountValueUsd?: InputMaybe<BigFloatFilter>;
  block?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidity?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
  quoteFeesEarned?: InputMaybe<BigFloatFilter>;
  quoteFeesEarnedValueUsd?: InputMaybe<BigFloatFilter>;
  quoteFilledAmount?: InputMaybe<BigFloatFilter>;
  quoteFilledAmountValueUsd?: InputMaybe<BigFloatFilter>;
  rangeEndTick?: InputMaybe<BigFloatFilter>;
  rangeStartTick?: InputMaybe<BigFloatFilter>;
};

export type RangeOrderFillVariancePopulationAggregates = {
  __typename?: 'RangeOrderFillVariancePopulationAggregates';
  /** Population variance of baseFeesEarned across the matching connection */
  baseFeesEarned?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of baseFeesEarnedValueUsd across the matching connection */
  baseFeesEarnedValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of baseFilledAmount across the matching connection */
  baseFilledAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of baseFilledAmountValueUsd across the matching connection */
  baseFilledAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of block across the matching connection */
  block?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of liquidity across the matching connection */
  liquidity?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of quoteFeesEarned across the matching connection */
  quoteFeesEarned?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of quoteFeesEarnedValueUsd across the matching connection */
  quoteFeesEarnedValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of quoteFilledAmount across the matching connection */
  quoteFilledAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of quoteFilledAmountValueUsd across the matching connection */
  quoteFilledAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of rangeEndTick across the matching connection */
  rangeEndTick?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of rangeStartTick across the matching connection */
  rangeStartTick?: Maybe<Scalars['BigFloat']['output']>;
};

export type RangeOrderFillVarianceSampleAggregateFilter = {
  baseFeesEarned?: InputMaybe<BigFloatFilter>;
  baseFeesEarnedValueUsd?: InputMaybe<BigFloatFilter>;
  baseFilledAmount?: InputMaybe<BigFloatFilter>;
  baseFilledAmountValueUsd?: InputMaybe<BigFloatFilter>;
  block?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  liquidity?: InputMaybe<BigFloatFilter>;
  liquidityProviderId?: InputMaybe<BigFloatFilter>;
  quoteFeesEarned?: InputMaybe<BigFloatFilter>;
  quoteFeesEarnedValueUsd?: InputMaybe<BigFloatFilter>;
  quoteFilledAmount?: InputMaybe<BigFloatFilter>;
  quoteFilledAmountValueUsd?: InputMaybe<BigFloatFilter>;
  rangeEndTick?: InputMaybe<BigFloatFilter>;
  rangeStartTick?: InputMaybe<BigFloatFilter>;
};

export type RangeOrderFillVarianceSampleAggregates = {
  __typename?: 'RangeOrderFillVarianceSampleAggregates';
  /** Sample variance of baseFeesEarned across the matching connection */
  baseFeesEarned?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of baseFeesEarnedValueUsd across the matching connection */
  baseFeesEarnedValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of baseFilledAmount across the matching connection */
  baseFilledAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of baseFilledAmountValueUsd across the matching connection */
  baseFilledAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of block across the matching connection */
  block?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of liquidity across the matching connection */
  liquidity?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of liquidityProviderId across the matching connection */
  liquidityProviderId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of quoteFeesEarned across the matching connection */
  quoteFeesEarned?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of quoteFeesEarnedValueUsd across the matching connection */
  quoteFeesEarnedValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of quoteFilledAmount across the matching connection */
  quoteFilledAmount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of quoteFilledAmountValueUsd across the matching connection */
  quoteFilledAmountValueUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of rangeEndTick across the matching connection */
  rangeEndTick?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of rangeStartTick across the matching connection */
  rangeStartTick?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `RangeOrderFill` values. */
export type RangeOrderFillsConnection = {
  __typename?: 'RangeOrderFillsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<RangeOrderFillAggregates>;
  /** A list of edges which contains the `RangeOrderFill` and cursor to aid in pagination. */
  edges: Array<RangeOrderFillsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<RangeOrderFillAggregates>>;
  /** A list of `RangeOrderFill` objects. */
  nodes: Array<RangeOrderFill>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `RangeOrderFill` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `RangeOrderFill` values. */
export type RangeOrderFillsConnectionGroupedAggregatesArgs = {
  groupBy: Array<RangeOrderFillGroupBy>;
  having?: InputMaybe<RangeOrderFillHavingInput>;
};

/** A `RangeOrderFill` edge in the connection. */
export type RangeOrderFillsEdge = {
  __typename?: 'RangeOrderFillsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `RangeOrderFill` at the end of the edge. */
  node: RangeOrderFill;
};

/** Methods to use when ordering `RangeOrderFill`. */
export type RangeOrderFillsOrderBy =
  | 'BASE_ASSET_ASC'
  | 'BASE_ASSET_DESC'
  | 'BASE_FEES_EARNED_ASC'
  | 'BASE_FEES_EARNED_DESC'
  | 'BASE_FEES_EARNED_VALUE_USD_ASC'
  | 'BASE_FEES_EARNED_VALUE_USD_DESC'
  | 'BASE_FILLED_AMOUNT_ASC'
  | 'BASE_FILLED_AMOUNT_DESC'
  | 'BASE_FILLED_AMOUNT_VALUE_USD_ASC'
  | 'BASE_FILLED_AMOUNT_VALUE_USD_DESC'
  | 'BLOCK_ASC'
  | 'BLOCK_DESC'
  | 'BLOCK_TIMESTAMP_ASC'
  | 'BLOCK_TIMESTAMP_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'LIQUIDITY_ASC'
  | 'LIQUIDITY_DESC'
  | 'LIQUIDITY_PROVIDER_ID_ASC'
  | 'LIQUIDITY_PROVIDER_ID_DESC'
  | 'NATURAL'
  | 'ORDER_ID_ASC'
  | 'ORDER_ID_DESC'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'QUOTE_FEES_EARNED_ASC'
  | 'QUOTE_FEES_EARNED_DESC'
  | 'QUOTE_FEES_EARNED_VALUE_USD_ASC'
  | 'QUOTE_FEES_EARNED_VALUE_USD_DESC'
  | 'QUOTE_FILLED_AMOUNT_ASC'
  | 'QUOTE_FILLED_AMOUNT_DESC'
  | 'QUOTE_FILLED_AMOUNT_VALUE_USD_ASC'
  | 'QUOTE_FILLED_AMOUNT_VALUE_USD_DESC'
  | 'RANGE_END_TICK_ASC'
  | 'RANGE_END_TICK_DESC'
  | 'RANGE_START_TICK_ASC'
  | 'RANGE_START_TICK_DESC';

/** A filter to be used against String fields. All fields are combined with a logical ‘and.’ */
export type StringFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<Scalars['String']['input']>;
  /** Not equal to the specified value, treating null like an ordinary value (case-insensitive). */
  distinctFromInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Ends with the specified string (case-sensitive). */
  endsWith?: InputMaybe<Scalars['String']['input']>;
  /** Ends with the specified string (case-insensitive). */
  endsWithInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<Scalars['String']['input']>;
  /** Equal to the specified value (case-insensitive). */
  equalToInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<Scalars['String']['input']>;
  /** Greater than the specified value (case-insensitive). */
  greaterThanInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<Scalars['String']['input']>;
  /** Greater than or equal to the specified value (case-insensitive). */
  greaterThanOrEqualToInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<Scalars['String']['input']>>;
  /** Included in the specified list (case-insensitive). */
  inInsensitive?: InputMaybe<Array<Scalars['String']['input']>>;
  /** Contains the specified string (case-sensitive). */
  includes?: InputMaybe<Scalars['String']['input']>;
  /** Contains the specified string (case-insensitive). */
  includesInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<Scalars['String']['input']>;
  /** Less than the specified value (case-insensitive). */
  lessThanInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<Scalars['String']['input']>;
  /** Less than or equal to the specified value (case-insensitive). */
  lessThanOrEqualToInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Matches the specified pattern (case-sensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters. */
  like?: InputMaybe<Scalars['String']['input']>;
  /** Matches the specified pattern (case-insensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters. */
  likeInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<Scalars['String']['input']>;
  /** Equal to the specified value, treating null like an ordinary value (case-insensitive). */
  notDistinctFromInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Does not end with the specified string (case-sensitive). */
  notEndsWith?: InputMaybe<Scalars['String']['input']>;
  /** Does not end with the specified string (case-insensitive). */
  notEndsWithInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<Scalars['String']['input']>;
  /** Not equal to the specified value (case-insensitive). */
  notEqualToInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<Scalars['String']['input']>>;
  /** Not included in the specified list (case-insensitive). */
  notInInsensitive?: InputMaybe<Array<Scalars['String']['input']>>;
  /** Does not contain the specified string (case-sensitive). */
  notIncludes?: InputMaybe<Scalars['String']['input']>;
  /** Does not contain the specified string (case-insensitive). */
  notIncludesInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Does not match the specified pattern (case-sensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters. */
  notLike?: InputMaybe<Scalars['String']['input']>;
  /** Does not match the specified pattern (case-insensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters. */
  notLikeInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Does not start with the specified string (case-sensitive). */
  notStartsWith?: InputMaybe<Scalars['String']['input']>;
  /** Does not start with the specified string (case-insensitive). */
  notStartsWithInsensitive?: InputMaybe<Scalars['String']['input']>;
  /** Starts with the specified string (case-sensitive). */
  startsWith?: InputMaybe<Scalars['String']['input']>;
  /** Starts with the specified string (case-insensitive). */
  startsWithInsensitive?: InputMaybe<Scalars['String']['input']>;
};

/** A connection to a list of `TradingStrategy` values. */
export type TradingStrategiesConnection = {
  __typename?: 'TradingStrategiesConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<TradingStrategyAggregates>;
  /** A list of edges which contains the `TradingStrategy` and cursor to aid in pagination. */
  edges: Array<TradingStrategiesEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<TradingStrategyAggregates>>;
  /** A list of `TradingStrategy` objects. */
  nodes: Array<TradingStrategy>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `TradingStrategy` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `TradingStrategy` values. */
export type TradingStrategiesConnectionGroupedAggregatesArgs = {
  groupBy: Array<TradingStrategyGroupBy>;
  having?: InputMaybe<TradingStrategyHavingInput>;
};

/** A `TradingStrategy` edge in the connection. */
export type TradingStrategiesEdge = {
  __typename?: 'TradingStrategiesEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `TradingStrategy` at the end of the edge. */
  node: TradingStrategy;
};

/** Methods to use when ordering `TradingStrategy`. */
export type TradingStrategiesOrderBy =
  | 'BASE_ASSET_ASC'
  | 'BASE_ASSET_DESC'
  | 'BUY_TICK_ASC'
  | 'BUY_TICK_DESC'
  | 'CLOSED_AT_EVENT_ID_ASC'
  | 'CLOSED_AT_EVENT_ID_DESC'
  | 'CREATED_AT_EVENT_ID_ASC'
  | 'CREATED_AT_EVENT_ID_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'NATURAL'
  | 'OWNER_ACCOUNT_ID_ASC'
  | 'OWNER_ACCOUNT_ID_DESC'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'QUOTE_ASSET_ASC'
  | 'QUOTE_ASSET_DESC'
  | 'SELL_TICK_ASC'
  | 'SELL_TICK_DESC'
  | 'STRATEGY_ACCOUNT_ID_ASC'
  | 'STRATEGY_ACCOUNT_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_AVERAGE_AMOUNT_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_AVERAGE_AMOUNT_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_AVERAGE_AMOUNT_USD_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_AVERAGE_AMOUNT_USD_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_AVERAGE_ASSET_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_AVERAGE_ASSET_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_AVERAGE_EVENT_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_AVERAGE_EVENT_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_AVERAGE_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_AVERAGE_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_AVERAGE_TRADING_STRATEGY_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_AVERAGE_TRADING_STRATEGY_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_AVERAGE_TYPE_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_AVERAGE_TYPE_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_COUNT_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_COUNT_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_DISTINCT_COUNT_AMOUNT_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_DISTINCT_COUNT_AMOUNT_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_DISTINCT_COUNT_AMOUNT_USD_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_DISTINCT_COUNT_AMOUNT_USD_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_DISTINCT_COUNT_ASSET_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_DISTINCT_COUNT_ASSET_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_DISTINCT_COUNT_EVENT_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_DISTINCT_COUNT_EVENT_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_DISTINCT_COUNT_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_DISTINCT_COUNT_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_DISTINCT_COUNT_TRADING_STRATEGY_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_DISTINCT_COUNT_TRADING_STRATEGY_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_DISTINCT_COUNT_TYPE_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_DISTINCT_COUNT_TYPE_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_MAX_AMOUNT_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_MAX_AMOUNT_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_MAX_AMOUNT_USD_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_MAX_AMOUNT_USD_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_MAX_ASSET_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_MAX_ASSET_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_MAX_EVENT_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_MAX_EVENT_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_MAX_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_MAX_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_MAX_TRADING_STRATEGY_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_MAX_TRADING_STRATEGY_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_MAX_TYPE_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_MAX_TYPE_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_MIN_AMOUNT_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_MIN_AMOUNT_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_MIN_AMOUNT_USD_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_MIN_AMOUNT_USD_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_MIN_ASSET_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_MIN_ASSET_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_MIN_EVENT_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_MIN_EVENT_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_MIN_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_MIN_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_MIN_TRADING_STRATEGY_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_MIN_TRADING_STRATEGY_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_MIN_TYPE_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_MIN_TYPE_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_STDDEV_POPULATION_AMOUNT_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_STDDEV_POPULATION_AMOUNT_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_STDDEV_POPULATION_AMOUNT_USD_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_STDDEV_POPULATION_AMOUNT_USD_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_STDDEV_POPULATION_ASSET_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_STDDEV_POPULATION_ASSET_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_STDDEV_POPULATION_EVENT_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_STDDEV_POPULATION_EVENT_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_STDDEV_POPULATION_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_STDDEV_POPULATION_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_STDDEV_POPULATION_TRADING_STRATEGY_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_STDDEV_POPULATION_TRADING_STRATEGY_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_STDDEV_POPULATION_TYPE_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_STDDEV_POPULATION_TYPE_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_STDDEV_SAMPLE_AMOUNT_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_STDDEV_SAMPLE_AMOUNT_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_STDDEV_SAMPLE_AMOUNT_USD_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_STDDEV_SAMPLE_AMOUNT_USD_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_STDDEV_SAMPLE_ASSET_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_STDDEV_SAMPLE_ASSET_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_STDDEV_SAMPLE_EVENT_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_STDDEV_SAMPLE_EVENT_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_STDDEV_SAMPLE_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_STDDEV_SAMPLE_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_STDDEV_SAMPLE_TRADING_STRATEGY_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_STDDEV_SAMPLE_TRADING_STRATEGY_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_STDDEV_SAMPLE_TYPE_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_STDDEV_SAMPLE_TYPE_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_SUM_AMOUNT_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_SUM_AMOUNT_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_SUM_AMOUNT_USD_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_SUM_AMOUNT_USD_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_SUM_ASSET_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_SUM_ASSET_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_SUM_EVENT_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_SUM_EVENT_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_SUM_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_SUM_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_SUM_TRADING_STRATEGY_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_SUM_TRADING_STRATEGY_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_SUM_TYPE_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_SUM_TYPE_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_VARIANCE_POPULATION_AMOUNT_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_VARIANCE_POPULATION_AMOUNT_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_VARIANCE_POPULATION_AMOUNT_USD_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_VARIANCE_POPULATION_AMOUNT_USD_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_VARIANCE_POPULATION_ASSET_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_VARIANCE_POPULATION_ASSET_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_VARIANCE_POPULATION_EVENT_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_VARIANCE_POPULATION_EVENT_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_VARIANCE_POPULATION_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_VARIANCE_POPULATION_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_VARIANCE_POPULATION_TRADING_STRATEGY_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_VARIANCE_POPULATION_TRADING_STRATEGY_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_VARIANCE_POPULATION_TYPE_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_VARIANCE_POPULATION_TYPE_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_VARIANCE_SAMPLE_AMOUNT_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_VARIANCE_SAMPLE_AMOUNT_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_VARIANCE_SAMPLE_AMOUNT_USD_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_VARIANCE_SAMPLE_AMOUNT_USD_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_VARIANCE_SAMPLE_ASSET_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_VARIANCE_SAMPLE_ASSET_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_VARIANCE_SAMPLE_EVENT_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_VARIANCE_SAMPLE_EVENT_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_VARIANCE_SAMPLE_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_VARIANCE_SAMPLE_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_VARIANCE_SAMPLE_TRADING_STRATEGY_ID_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_VARIANCE_SAMPLE_TRADING_STRATEGY_ID_DESC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_VARIANCE_SAMPLE_TYPE_ASC'
  | 'TRADING_STRATEGY_BALANCE_CHANGE_EVENTS_BY_TRADING_STRATEGY_ID_VARIANCE_SAMPLE_TYPE_DESC';

export type TradingStrategy = Node & {
  __typename?: 'TradingStrategy';
  /** Reads a single `Account` that is related to this `TradingStrategy`. */
  accountByOwnerAccountId: Account;
  /** Reads a single `Account` that is related to this `TradingStrategy`. */
  accountByStrategyAccountId: Account;
  baseAsset: ChainflipAsset;
  buyTick: Scalars['Int']['output'];
  closedAtEventId?: Maybe<Scalars['BigInt']['output']>;
  createdAtEventId: Scalars['BigInt']['output'];
  /** Reads a single `Event` that is related to this `TradingStrategy`. */
  eventByClosedAtEventId?: Maybe<Event>;
  /** Reads a single `Event` that is related to this `TradingStrategy`. */
  eventByCreatedAtEventId: Event;
  id: Scalars['Int']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  ownerAccountId: Scalars['Int']['output'];
  quoteAsset: ChainflipAsset;
  sellTick: Scalars['Int']['output'];
  strategyAccountId: Scalars['Int']['output'];
  /** Reads and enables pagination through a set of `TradingStrategyBalanceChangeEvent`. */
  tradingStrategyBalanceChangeEventsByTradingStrategyId: TradingStrategyBalanceChangeEventsConnection;
};


export type TradingStrategyTradingStrategyBalanceChangeEventsByTradingStrategyIdArgs = {
  after?: InputMaybe<Scalars['Cursor']['input']>;
  before?: InputMaybe<Scalars['Cursor']['input']>;
  condition?: InputMaybe<TradingStrategyBalanceChangeEventCondition>;
  filter?: InputMaybe<TradingStrategyBalanceChangeEventFilter>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Array<TradingStrategyBalanceChangeEventsOrderBy>>;
};

export type TradingStrategyAggregates = {
  __typename?: 'TradingStrategyAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<TradingStrategyAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<TradingStrategyDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<TradingStrategyMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<TradingStrategyMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<TradingStrategyStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<TradingStrategyStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<TradingStrategySumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<TradingStrategyVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<TradingStrategyVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `TradingStrategy` object types. */
export type TradingStrategyAggregatesFilter = {
  /** Mean average aggregate over matching `TradingStrategy` objects. */
  average?: InputMaybe<TradingStrategyAverageAggregateFilter>;
  /** Distinct count aggregate over matching `TradingStrategy` objects. */
  distinctCount?: InputMaybe<TradingStrategyDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `TradingStrategy` object to be included within the aggregate. */
  filter?: InputMaybe<TradingStrategyFilter>;
  /** Maximum aggregate over matching `TradingStrategy` objects. */
  max?: InputMaybe<TradingStrategyMaxAggregateFilter>;
  /** Minimum aggregate over matching `TradingStrategy` objects. */
  min?: InputMaybe<TradingStrategyMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `TradingStrategy` objects. */
  stddevPopulation?: InputMaybe<TradingStrategyStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `TradingStrategy` objects. */
  stddevSample?: InputMaybe<TradingStrategyStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `TradingStrategy` objects. */
  sum?: InputMaybe<TradingStrategySumAggregateFilter>;
  /** Population variance aggregate over matching `TradingStrategy` objects. */
  variancePopulation?: InputMaybe<TradingStrategyVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `TradingStrategy` objects. */
  varianceSample?: InputMaybe<TradingStrategyVarianceSampleAggregateFilter>;
};

export type TradingStrategyAverageAggregateFilter = {
  buyTick?: InputMaybe<BigFloatFilter>;
  closedAtEventId?: InputMaybe<BigFloatFilter>;
  createdAtEventId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  ownerAccountId?: InputMaybe<BigFloatFilter>;
  sellTick?: InputMaybe<BigFloatFilter>;
  strategyAccountId?: InputMaybe<BigFloatFilter>;
};

export type TradingStrategyAverageAggregates = {
  __typename?: 'TradingStrategyAverageAggregates';
  /** Mean average of buyTick across the matching connection */
  buyTick?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of closedAtEventId across the matching connection */
  closedAtEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of createdAtEventId across the matching connection */
  createdAtEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of ownerAccountId across the matching connection */
  ownerAccountId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of sellTick across the matching connection */
  sellTick?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of strategyAccountId across the matching connection */
  strategyAccountId?: Maybe<Scalars['BigFloat']['output']>;
};

export type TradingStrategyBalanceChangeEvent = Node & {
  __typename?: 'TradingStrategyBalanceChangeEvent';
  amount: Scalars['BigFloat']['output'];
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  asset: ChainflipAsset;
  /** Reads a single `Event` that is related to this `TradingStrategyBalanceChangeEvent`. */
  eventByEventId: Event;
  eventId: Scalars['BigInt']['output'];
  id: Scalars['Int']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  /** Reads a single `TradingStrategy` that is related to this `TradingStrategyBalanceChangeEvent`. */
  tradingStrategyByTradingStrategyId: TradingStrategy;
  tradingStrategyId: Scalars['Int']['output'];
  type: TradingStrategyBalanceChangeEventType;
};

export type TradingStrategyBalanceChangeEventAggregates = {
  __typename?: 'TradingStrategyBalanceChangeEventAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<TradingStrategyBalanceChangeEventAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<TradingStrategyBalanceChangeEventDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<TradingStrategyBalanceChangeEventMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<TradingStrategyBalanceChangeEventMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<TradingStrategyBalanceChangeEventStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<TradingStrategyBalanceChangeEventStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<TradingStrategyBalanceChangeEventSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<TradingStrategyBalanceChangeEventVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<TradingStrategyBalanceChangeEventVarianceSampleAggregates>;
};

/** A filter to be used against aggregates of `TradingStrategyBalanceChangeEvent` object types. */
export type TradingStrategyBalanceChangeEventAggregatesFilter = {
  /** Mean average aggregate over matching `TradingStrategyBalanceChangeEvent` objects. */
  average?: InputMaybe<TradingStrategyBalanceChangeEventAverageAggregateFilter>;
  /** Distinct count aggregate over matching `TradingStrategyBalanceChangeEvent` objects. */
  distinctCount?: InputMaybe<TradingStrategyBalanceChangeEventDistinctCountAggregateFilter>;
  /** A filter that must pass for the relevant `TradingStrategyBalanceChangeEvent` object to be included within the aggregate. */
  filter?: InputMaybe<TradingStrategyBalanceChangeEventFilter>;
  /** Maximum aggregate over matching `TradingStrategyBalanceChangeEvent` objects. */
  max?: InputMaybe<TradingStrategyBalanceChangeEventMaxAggregateFilter>;
  /** Minimum aggregate over matching `TradingStrategyBalanceChangeEvent` objects. */
  min?: InputMaybe<TradingStrategyBalanceChangeEventMinAggregateFilter>;
  /** Population standard deviation aggregate over matching `TradingStrategyBalanceChangeEvent` objects. */
  stddevPopulation?: InputMaybe<TradingStrategyBalanceChangeEventStddevPopulationAggregateFilter>;
  /** Sample standard deviation aggregate over matching `TradingStrategyBalanceChangeEvent` objects. */
  stddevSample?: InputMaybe<TradingStrategyBalanceChangeEventStddevSampleAggregateFilter>;
  /** Sum aggregate over matching `TradingStrategyBalanceChangeEvent` objects. */
  sum?: InputMaybe<TradingStrategyBalanceChangeEventSumAggregateFilter>;
  /** Population variance aggregate over matching `TradingStrategyBalanceChangeEvent` objects. */
  variancePopulation?: InputMaybe<TradingStrategyBalanceChangeEventVariancePopulationAggregateFilter>;
  /** Sample variance aggregate over matching `TradingStrategyBalanceChangeEvent` objects. */
  varianceSample?: InputMaybe<TradingStrategyBalanceChangeEventVarianceSampleAggregateFilter>;
};

export type TradingStrategyBalanceChangeEventAverageAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  eventId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  tradingStrategyId?: InputMaybe<BigFloatFilter>;
};

export type TradingStrategyBalanceChangeEventAverageAggregates = {
  __typename?: 'TradingStrategyBalanceChangeEventAverageAggregates';
  /** Mean average of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Mean average of tradingStrategyId across the matching connection */
  tradingStrategyId?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `TradingStrategyBalanceChangeEvent` object types.
 * All fields are tested for equality and combined with a logical ‘and.’
 */
export type TradingStrategyBalanceChangeEventCondition = {
  /** Checks for equality with the object’s `amount` field. */
  amount?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `amountUsd` field. */
  amountUsd?: InputMaybe<Scalars['BigFloat']['input']>;
  /** Checks for equality with the object’s `asset` field. */
  asset?: InputMaybe<ChainflipAsset>;
  /** Checks for equality with the object’s `eventId` field. */
  eventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `tradingStrategyId` field. */
  tradingStrategyId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `type` field. */
  type?: InputMaybe<TradingStrategyBalanceChangeEventType>;
};

export type TradingStrategyBalanceChangeEventDistinctCountAggregateFilter = {
  amount?: InputMaybe<BigIntFilter>;
  amountUsd?: InputMaybe<BigIntFilter>;
  asset?: InputMaybe<BigIntFilter>;
  eventId?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  tradingStrategyId?: InputMaybe<BigIntFilter>;
  type?: InputMaybe<BigIntFilter>;
};

export type TradingStrategyBalanceChangeEventDistinctCountAggregates = {
  __typename?: 'TradingStrategyBalanceChangeEventDistinctCountAggregates';
  /** Distinct count of amount across the matching connection */
  amount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of asset across the matching connection */
  asset?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of tradingStrategyId across the matching connection */
  tradingStrategyId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of type across the matching connection */
  type?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `TradingStrategyBalanceChangeEvent` object types. All fields are combined with a logical ‘and.’ */
export type TradingStrategyBalanceChangeEventFilter = {
  /** Filter by the object’s `amount` field. */
  amount?: InputMaybe<BigFloatFilter>;
  /** Filter by the object’s `amountUsd` field. */
  amountUsd?: InputMaybe<BigFloatFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<TradingStrategyBalanceChangeEventFilter>>;
  /** Filter by the object’s `asset` field. */
  asset?: InputMaybe<ChainflipAssetFilter>;
  /** Filter by the object’s `eventByEventId` relation. */
  eventByEventId?: InputMaybe<EventFilter>;
  /** Filter by the object’s `eventId` field. */
  eventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<TradingStrategyBalanceChangeEventFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<TradingStrategyBalanceChangeEventFilter>>;
  /** Filter by the object’s `tradingStrategyByTradingStrategyId` relation. */
  tradingStrategyByTradingStrategyId?: InputMaybe<TradingStrategyFilter>;
  /** Filter by the object’s `tradingStrategyId` field. */
  tradingStrategyId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `type` field. */
  type?: InputMaybe<TradingStrategyBalanceChangeEventTypeFilter>;
};

/** Grouping methods for `TradingStrategyBalanceChangeEvent` for usage during aggregation. */
export type TradingStrategyBalanceChangeEventGroupBy =
  | 'AMOUNT'
  | 'AMOUNT_USD'
  | 'ASSET'
  | 'EVENT_ID'
  | 'TRADING_STRATEGY_ID'
  | 'TYPE';

export type TradingStrategyBalanceChangeEventHavingAverageInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  tradingStrategyId?: InputMaybe<HavingIntFilter>;
};

export type TradingStrategyBalanceChangeEventHavingDistinctCountInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  tradingStrategyId?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `TradingStrategyBalanceChangeEvent` aggregates. */
export type TradingStrategyBalanceChangeEventHavingInput = {
  AND?: InputMaybe<Array<TradingStrategyBalanceChangeEventHavingInput>>;
  OR?: InputMaybe<Array<TradingStrategyBalanceChangeEventHavingInput>>;
  average?: InputMaybe<TradingStrategyBalanceChangeEventHavingAverageInput>;
  distinctCount?: InputMaybe<TradingStrategyBalanceChangeEventHavingDistinctCountInput>;
  max?: InputMaybe<TradingStrategyBalanceChangeEventHavingMaxInput>;
  min?: InputMaybe<TradingStrategyBalanceChangeEventHavingMinInput>;
  stddevPopulation?: InputMaybe<TradingStrategyBalanceChangeEventHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<TradingStrategyBalanceChangeEventHavingStddevSampleInput>;
  sum?: InputMaybe<TradingStrategyBalanceChangeEventHavingSumInput>;
  variancePopulation?: InputMaybe<TradingStrategyBalanceChangeEventHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<TradingStrategyBalanceChangeEventHavingVarianceSampleInput>;
};

export type TradingStrategyBalanceChangeEventHavingMaxInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  tradingStrategyId?: InputMaybe<HavingIntFilter>;
};

export type TradingStrategyBalanceChangeEventHavingMinInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  tradingStrategyId?: InputMaybe<HavingIntFilter>;
};

export type TradingStrategyBalanceChangeEventHavingStddevPopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  tradingStrategyId?: InputMaybe<HavingIntFilter>;
};

export type TradingStrategyBalanceChangeEventHavingStddevSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  tradingStrategyId?: InputMaybe<HavingIntFilter>;
};

export type TradingStrategyBalanceChangeEventHavingSumInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  tradingStrategyId?: InputMaybe<HavingIntFilter>;
};

export type TradingStrategyBalanceChangeEventHavingVariancePopulationInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  tradingStrategyId?: InputMaybe<HavingIntFilter>;
};

export type TradingStrategyBalanceChangeEventHavingVarianceSampleInput = {
  amount?: InputMaybe<HavingBigfloatFilter>;
  amountUsd?: InputMaybe<HavingBigfloatFilter>;
  eventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  tradingStrategyId?: InputMaybe<HavingIntFilter>;
};

export type TradingStrategyBalanceChangeEventMaxAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  eventId?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<IntFilter>;
  tradingStrategyId?: InputMaybe<IntFilter>;
};

export type TradingStrategyBalanceChangeEventMaxAggregates = {
  __typename?: 'TradingStrategyBalanceChangeEventMaxAggregates';
  /** Maximum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Maximum of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of tradingStrategyId across the matching connection */
  tradingStrategyId?: Maybe<Scalars['Int']['output']>;
};

export type TradingStrategyBalanceChangeEventMinAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  eventId?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<IntFilter>;
  tradingStrategyId?: InputMaybe<IntFilter>;
};

export type TradingStrategyBalanceChangeEventMinAggregates = {
  __typename?: 'TradingStrategyBalanceChangeEventMinAggregates';
  /** Minimum of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Minimum of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of tradingStrategyId across the matching connection */
  tradingStrategyId?: Maybe<Scalars['Int']['output']>;
};

export type TradingStrategyBalanceChangeEventStddevPopulationAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  eventId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  tradingStrategyId?: InputMaybe<BigFloatFilter>;
};

export type TradingStrategyBalanceChangeEventStddevPopulationAggregates = {
  __typename?: 'TradingStrategyBalanceChangeEventStddevPopulationAggregates';
  /** Population standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of tradingStrategyId across the matching connection */
  tradingStrategyId?: Maybe<Scalars['BigFloat']['output']>;
};

export type TradingStrategyBalanceChangeEventStddevSampleAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  eventId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  tradingStrategyId?: InputMaybe<BigFloatFilter>;
};

export type TradingStrategyBalanceChangeEventStddevSampleAggregates = {
  __typename?: 'TradingStrategyBalanceChangeEventStddevSampleAggregates';
  /** Sample standard deviation of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of tradingStrategyId across the matching connection */
  tradingStrategyId?: Maybe<Scalars['BigFloat']['output']>;
};

export type TradingStrategyBalanceChangeEventSumAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  eventId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigIntFilter>;
  tradingStrategyId?: InputMaybe<BigIntFilter>;
};

export type TradingStrategyBalanceChangeEventSumAggregates = {
  __typename?: 'TradingStrategyBalanceChangeEventSumAggregates';
  /** Sum of amount across the matching connection */
  amount: Scalars['BigFloat']['output'];
  /** Sum of amountUsd across the matching connection */
  amountUsd: Scalars['BigFloat']['output'];
  /** Sum of eventId across the matching connection */
  eventId: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of tradingStrategyId across the matching connection */
  tradingStrategyId: Scalars['BigInt']['output'];
};

export type TradingStrategyBalanceChangeEventType =
  | 'FUNDS_ADDED'
  | 'STRATEGY_CLOSED';

/** A filter to be used against TradingStrategyBalanceChangeEventType fields. All fields are combined with a logical ‘and.’ */
export type TradingStrategyBalanceChangeEventTypeFilter = {
  /** Not equal to the specified value, treating null like an ordinary value. */
  distinctFrom?: InputMaybe<TradingStrategyBalanceChangeEventType>;
  /** Equal to the specified value. */
  equalTo?: InputMaybe<TradingStrategyBalanceChangeEventType>;
  /** Greater than the specified value. */
  greaterThan?: InputMaybe<TradingStrategyBalanceChangeEventType>;
  /** Greater than or equal to the specified value. */
  greaterThanOrEqualTo?: InputMaybe<TradingStrategyBalanceChangeEventType>;
  /** Included in the specified list. */
  in?: InputMaybe<Array<TradingStrategyBalanceChangeEventType>>;
  /** Is null (if `true` is specified) or is not null (if `false` is specified). */
  isNull?: InputMaybe<Scalars['Boolean']['input']>;
  /** Less than the specified value. */
  lessThan?: InputMaybe<TradingStrategyBalanceChangeEventType>;
  /** Less than or equal to the specified value. */
  lessThanOrEqualTo?: InputMaybe<TradingStrategyBalanceChangeEventType>;
  /** Equal to the specified value, treating null like an ordinary value. */
  notDistinctFrom?: InputMaybe<TradingStrategyBalanceChangeEventType>;
  /** Not equal to the specified value. */
  notEqualTo?: InputMaybe<TradingStrategyBalanceChangeEventType>;
  /** Not included in the specified list. */
  notIn?: InputMaybe<Array<TradingStrategyBalanceChangeEventType>>;
};

export type TradingStrategyBalanceChangeEventVariancePopulationAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  eventId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  tradingStrategyId?: InputMaybe<BigFloatFilter>;
};

export type TradingStrategyBalanceChangeEventVariancePopulationAggregates = {
  __typename?: 'TradingStrategyBalanceChangeEventVariancePopulationAggregates';
  /** Population variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of tradingStrategyId across the matching connection */
  tradingStrategyId?: Maybe<Scalars['BigFloat']['output']>;
};

export type TradingStrategyBalanceChangeEventVarianceSampleAggregateFilter = {
  amount?: InputMaybe<BigFloatFilter>;
  amountUsd?: InputMaybe<BigFloatFilter>;
  eventId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  tradingStrategyId?: InputMaybe<BigFloatFilter>;
};

export type TradingStrategyBalanceChangeEventVarianceSampleAggregates = {
  __typename?: 'TradingStrategyBalanceChangeEventVarianceSampleAggregates';
  /** Sample variance of amount across the matching connection */
  amount?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of amountUsd across the matching connection */
  amountUsd?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of eventId across the matching connection */
  eventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of tradingStrategyId across the matching connection */
  tradingStrategyId?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `TradingStrategyBalanceChangeEvent` values. */
export type TradingStrategyBalanceChangeEventsConnection = {
  __typename?: 'TradingStrategyBalanceChangeEventsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<TradingStrategyBalanceChangeEventAggregates>;
  /** A list of edges which contains the `TradingStrategyBalanceChangeEvent` and cursor to aid in pagination. */
  edges: Array<TradingStrategyBalanceChangeEventsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<TradingStrategyBalanceChangeEventAggregates>>;
  /** A list of `TradingStrategyBalanceChangeEvent` objects. */
  nodes: Array<TradingStrategyBalanceChangeEvent>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `TradingStrategyBalanceChangeEvent` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `TradingStrategyBalanceChangeEvent` values. */
export type TradingStrategyBalanceChangeEventsConnectionGroupedAggregatesArgs = {
  groupBy: Array<TradingStrategyBalanceChangeEventGroupBy>;
  having?: InputMaybe<TradingStrategyBalanceChangeEventHavingInput>;
};

/** A `TradingStrategyBalanceChangeEvent` edge in the connection. */
export type TradingStrategyBalanceChangeEventsEdge = {
  __typename?: 'TradingStrategyBalanceChangeEventsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `TradingStrategyBalanceChangeEvent` at the end of the edge. */
  node: TradingStrategyBalanceChangeEvent;
};

/** Methods to use when ordering `TradingStrategyBalanceChangeEvent`. */
export type TradingStrategyBalanceChangeEventsOrderBy =
  | 'AMOUNT_ASC'
  | 'AMOUNT_DESC'
  | 'AMOUNT_USD_ASC'
  | 'AMOUNT_USD_DESC'
  | 'ASSET_ASC'
  | 'ASSET_DESC'
  | 'EVENT_ID_ASC'
  | 'EVENT_ID_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'TRADING_STRATEGY_ID_ASC'
  | 'TRADING_STRATEGY_ID_DESC'
  | 'TYPE_ASC'
  | 'TYPE_DESC';

/**
 * A condition to be used against `TradingStrategy` object types. All fields are
 * tested for equality and combined with a logical ‘and.’
 */
export type TradingStrategyCondition = {
  /** Checks for equality with the object’s `baseAsset` field. */
  baseAsset?: InputMaybe<ChainflipAsset>;
  /** Checks for equality with the object’s `buyTick` field. */
  buyTick?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `closedAtEventId` field. */
  closedAtEventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `createdAtEventId` field. */
  createdAtEventId?: InputMaybe<Scalars['BigInt']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `ownerAccountId` field. */
  ownerAccountId?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `quoteAsset` field. */
  quoteAsset?: InputMaybe<ChainflipAsset>;
  /** Checks for equality with the object’s `sellTick` field. */
  sellTick?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `strategyAccountId` field. */
  strategyAccountId?: InputMaybe<Scalars['Int']['input']>;
};

export type TradingStrategyDistinctCountAggregateFilter = {
  baseAsset?: InputMaybe<BigIntFilter>;
  buyTick?: InputMaybe<BigIntFilter>;
  closedAtEventId?: InputMaybe<BigIntFilter>;
  createdAtEventId?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<BigIntFilter>;
  ownerAccountId?: InputMaybe<BigIntFilter>;
  quoteAsset?: InputMaybe<BigIntFilter>;
  sellTick?: InputMaybe<BigIntFilter>;
  strategyAccountId?: InputMaybe<BigIntFilter>;
};

export type TradingStrategyDistinctCountAggregates = {
  __typename?: 'TradingStrategyDistinctCountAggregates';
  /** Distinct count of baseAsset across the matching connection */
  baseAsset?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of buyTick across the matching connection */
  buyTick?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of closedAtEventId across the matching connection */
  closedAtEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of createdAtEventId across the matching connection */
  createdAtEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of ownerAccountId across the matching connection */
  ownerAccountId?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of quoteAsset across the matching connection */
  quoteAsset?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of sellTick across the matching connection */
  sellTick?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of strategyAccountId across the matching connection */
  strategyAccountId?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `TradingStrategy` object types. All fields are combined with a logical ‘and.’ */
export type TradingStrategyFilter = {
  /** Filter by the object’s `accountByOwnerAccountId` relation. */
  accountByOwnerAccountId?: InputMaybe<AccountFilter>;
  /** Filter by the object’s `accountByStrategyAccountId` relation. */
  accountByStrategyAccountId?: InputMaybe<AccountFilter>;
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<TradingStrategyFilter>>;
  /** Filter by the object’s `baseAsset` field. */
  baseAsset?: InputMaybe<ChainflipAssetFilter>;
  /** Filter by the object’s `buyTick` field. */
  buyTick?: InputMaybe<IntFilter>;
  /** Filter by the object’s `closedAtEventId` field. */
  closedAtEventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `createdAtEventId` field. */
  createdAtEventId?: InputMaybe<BigIntFilter>;
  /** Filter by the object’s `eventByClosedAtEventId` relation. */
  eventByClosedAtEventId?: InputMaybe<EventFilter>;
  /** A related `eventByClosedAtEventId` exists. */
  eventByClosedAtEventIdExists?: InputMaybe<Scalars['Boolean']['input']>;
  /** Filter by the object’s `eventByCreatedAtEventId` relation. */
  eventByCreatedAtEventId?: InputMaybe<EventFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<IntFilter>;
  /** Negates the expression. */
  not?: InputMaybe<TradingStrategyFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<TradingStrategyFilter>>;
  /** Filter by the object’s `ownerAccountId` field. */
  ownerAccountId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `quoteAsset` field. */
  quoteAsset?: InputMaybe<ChainflipAssetFilter>;
  /** Filter by the object’s `sellTick` field. */
  sellTick?: InputMaybe<IntFilter>;
  /** Filter by the object’s `strategyAccountId` field. */
  strategyAccountId?: InputMaybe<IntFilter>;
  /** Filter by the object’s `tradingStrategyBalanceChangeEventsByTradingStrategyId` relation. */
  tradingStrategyBalanceChangeEventsByTradingStrategyId?: InputMaybe<TradingStrategyToManyTradingStrategyBalanceChangeEventFilter>;
  /** Some related `tradingStrategyBalanceChangeEventsByTradingStrategyId` exist. */
  tradingStrategyBalanceChangeEventsByTradingStrategyIdExist?: InputMaybe<Scalars['Boolean']['input']>;
};

/** Grouping methods for `TradingStrategy` for usage during aggregation. */
export type TradingStrategyGroupBy =
  | 'BASE_ASSET'
  | 'BUY_TICK'
  | 'CLOSED_AT_EVENT_ID'
  | 'CREATED_AT_EVENT_ID'
  | 'OWNER_ACCOUNT_ID'
  | 'QUOTE_ASSET'
  | 'SELL_TICK';

export type TradingStrategyHavingAverageInput = {
  buyTick?: InputMaybe<HavingIntFilter>;
  closedAtEventId?: InputMaybe<HavingBigintFilter>;
  createdAtEventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  ownerAccountId?: InputMaybe<HavingIntFilter>;
  sellTick?: InputMaybe<HavingIntFilter>;
  strategyAccountId?: InputMaybe<HavingIntFilter>;
};

export type TradingStrategyHavingDistinctCountInput = {
  buyTick?: InputMaybe<HavingIntFilter>;
  closedAtEventId?: InputMaybe<HavingBigintFilter>;
  createdAtEventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  ownerAccountId?: InputMaybe<HavingIntFilter>;
  sellTick?: InputMaybe<HavingIntFilter>;
  strategyAccountId?: InputMaybe<HavingIntFilter>;
};

/** Conditions for `TradingStrategy` aggregates. */
export type TradingStrategyHavingInput = {
  AND?: InputMaybe<Array<TradingStrategyHavingInput>>;
  OR?: InputMaybe<Array<TradingStrategyHavingInput>>;
  average?: InputMaybe<TradingStrategyHavingAverageInput>;
  distinctCount?: InputMaybe<TradingStrategyHavingDistinctCountInput>;
  max?: InputMaybe<TradingStrategyHavingMaxInput>;
  min?: InputMaybe<TradingStrategyHavingMinInput>;
  stddevPopulation?: InputMaybe<TradingStrategyHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<TradingStrategyHavingStddevSampleInput>;
  sum?: InputMaybe<TradingStrategyHavingSumInput>;
  variancePopulation?: InputMaybe<TradingStrategyHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<TradingStrategyHavingVarianceSampleInput>;
};

export type TradingStrategyHavingMaxInput = {
  buyTick?: InputMaybe<HavingIntFilter>;
  closedAtEventId?: InputMaybe<HavingBigintFilter>;
  createdAtEventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  ownerAccountId?: InputMaybe<HavingIntFilter>;
  sellTick?: InputMaybe<HavingIntFilter>;
  strategyAccountId?: InputMaybe<HavingIntFilter>;
};

export type TradingStrategyHavingMinInput = {
  buyTick?: InputMaybe<HavingIntFilter>;
  closedAtEventId?: InputMaybe<HavingBigintFilter>;
  createdAtEventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  ownerAccountId?: InputMaybe<HavingIntFilter>;
  sellTick?: InputMaybe<HavingIntFilter>;
  strategyAccountId?: InputMaybe<HavingIntFilter>;
};

export type TradingStrategyHavingStddevPopulationInput = {
  buyTick?: InputMaybe<HavingIntFilter>;
  closedAtEventId?: InputMaybe<HavingBigintFilter>;
  createdAtEventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  ownerAccountId?: InputMaybe<HavingIntFilter>;
  sellTick?: InputMaybe<HavingIntFilter>;
  strategyAccountId?: InputMaybe<HavingIntFilter>;
};

export type TradingStrategyHavingStddevSampleInput = {
  buyTick?: InputMaybe<HavingIntFilter>;
  closedAtEventId?: InputMaybe<HavingBigintFilter>;
  createdAtEventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  ownerAccountId?: InputMaybe<HavingIntFilter>;
  sellTick?: InputMaybe<HavingIntFilter>;
  strategyAccountId?: InputMaybe<HavingIntFilter>;
};

export type TradingStrategyHavingSumInput = {
  buyTick?: InputMaybe<HavingIntFilter>;
  closedAtEventId?: InputMaybe<HavingBigintFilter>;
  createdAtEventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  ownerAccountId?: InputMaybe<HavingIntFilter>;
  sellTick?: InputMaybe<HavingIntFilter>;
  strategyAccountId?: InputMaybe<HavingIntFilter>;
};

export type TradingStrategyHavingVariancePopulationInput = {
  buyTick?: InputMaybe<HavingIntFilter>;
  closedAtEventId?: InputMaybe<HavingBigintFilter>;
  createdAtEventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  ownerAccountId?: InputMaybe<HavingIntFilter>;
  sellTick?: InputMaybe<HavingIntFilter>;
  strategyAccountId?: InputMaybe<HavingIntFilter>;
};

export type TradingStrategyHavingVarianceSampleInput = {
  buyTick?: InputMaybe<HavingIntFilter>;
  closedAtEventId?: InputMaybe<HavingBigintFilter>;
  createdAtEventId?: InputMaybe<HavingBigintFilter>;
  id?: InputMaybe<HavingIntFilter>;
  ownerAccountId?: InputMaybe<HavingIntFilter>;
  sellTick?: InputMaybe<HavingIntFilter>;
  strategyAccountId?: InputMaybe<HavingIntFilter>;
};

export type TradingStrategyMaxAggregateFilter = {
  buyTick?: InputMaybe<IntFilter>;
  closedAtEventId?: InputMaybe<BigIntFilter>;
  createdAtEventId?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<IntFilter>;
  ownerAccountId?: InputMaybe<IntFilter>;
  sellTick?: InputMaybe<IntFilter>;
  strategyAccountId?: InputMaybe<IntFilter>;
};

export type TradingStrategyMaxAggregates = {
  __typename?: 'TradingStrategyMaxAggregates';
  /** Maximum of buyTick across the matching connection */
  buyTick?: Maybe<Scalars['Int']['output']>;
  /** Maximum of closedAtEventId across the matching connection */
  closedAtEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of createdAtEventId across the matching connection */
  createdAtEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Maximum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Maximum of ownerAccountId across the matching connection */
  ownerAccountId?: Maybe<Scalars['Int']['output']>;
  /** Maximum of sellTick across the matching connection */
  sellTick?: Maybe<Scalars['Int']['output']>;
  /** Maximum of strategyAccountId across the matching connection */
  strategyAccountId?: Maybe<Scalars['Int']['output']>;
};

export type TradingStrategyMinAggregateFilter = {
  buyTick?: InputMaybe<IntFilter>;
  closedAtEventId?: InputMaybe<BigIntFilter>;
  createdAtEventId?: InputMaybe<BigIntFilter>;
  id?: InputMaybe<IntFilter>;
  ownerAccountId?: InputMaybe<IntFilter>;
  sellTick?: InputMaybe<IntFilter>;
  strategyAccountId?: InputMaybe<IntFilter>;
};

export type TradingStrategyMinAggregates = {
  __typename?: 'TradingStrategyMinAggregates';
  /** Minimum of buyTick across the matching connection */
  buyTick?: Maybe<Scalars['Int']['output']>;
  /** Minimum of closedAtEventId across the matching connection */
  closedAtEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of createdAtEventId across the matching connection */
  createdAtEventId?: Maybe<Scalars['BigInt']['output']>;
  /** Minimum of id across the matching connection */
  id?: Maybe<Scalars['Int']['output']>;
  /** Minimum of ownerAccountId across the matching connection */
  ownerAccountId?: Maybe<Scalars['Int']['output']>;
  /** Minimum of sellTick across the matching connection */
  sellTick?: Maybe<Scalars['Int']['output']>;
  /** Minimum of strategyAccountId across the matching connection */
  strategyAccountId?: Maybe<Scalars['Int']['output']>;
};

export type TradingStrategyStddevPopulationAggregateFilter = {
  buyTick?: InputMaybe<BigFloatFilter>;
  closedAtEventId?: InputMaybe<BigFloatFilter>;
  createdAtEventId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  ownerAccountId?: InputMaybe<BigFloatFilter>;
  sellTick?: InputMaybe<BigFloatFilter>;
  strategyAccountId?: InputMaybe<BigFloatFilter>;
};

export type TradingStrategyStddevPopulationAggregates = {
  __typename?: 'TradingStrategyStddevPopulationAggregates';
  /** Population standard deviation of buyTick across the matching connection */
  buyTick?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of closedAtEventId across the matching connection */
  closedAtEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of createdAtEventId across the matching connection */
  createdAtEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of ownerAccountId across the matching connection */
  ownerAccountId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of sellTick across the matching connection */
  sellTick?: Maybe<Scalars['BigFloat']['output']>;
  /** Population standard deviation of strategyAccountId across the matching connection */
  strategyAccountId?: Maybe<Scalars['BigFloat']['output']>;
};

export type TradingStrategyStddevSampleAggregateFilter = {
  buyTick?: InputMaybe<BigFloatFilter>;
  closedAtEventId?: InputMaybe<BigFloatFilter>;
  createdAtEventId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  ownerAccountId?: InputMaybe<BigFloatFilter>;
  sellTick?: InputMaybe<BigFloatFilter>;
  strategyAccountId?: InputMaybe<BigFloatFilter>;
};

export type TradingStrategyStddevSampleAggregates = {
  __typename?: 'TradingStrategyStddevSampleAggregates';
  /** Sample standard deviation of buyTick across the matching connection */
  buyTick?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of closedAtEventId across the matching connection */
  closedAtEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of createdAtEventId across the matching connection */
  createdAtEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of ownerAccountId across the matching connection */
  ownerAccountId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of sellTick across the matching connection */
  sellTick?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample standard deviation of strategyAccountId across the matching connection */
  strategyAccountId?: Maybe<Scalars['BigFloat']['output']>;
};

export type TradingStrategySumAggregateFilter = {
  buyTick?: InputMaybe<BigIntFilter>;
  closedAtEventId?: InputMaybe<BigFloatFilter>;
  createdAtEventId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigIntFilter>;
  ownerAccountId?: InputMaybe<BigIntFilter>;
  sellTick?: InputMaybe<BigIntFilter>;
  strategyAccountId?: InputMaybe<BigIntFilter>;
};

export type TradingStrategySumAggregates = {
  __typename?: 'TradingStrategySumAggregates';
  /** Sum of buyTick across the matching connection */
  buyTick: Scalars['BigInt']['output'];
  /** Sum of closedAtEventId across the matching connection */
  closedAtEventId: Scalars['BigFloat']['output'];
  /** Sum of createdAtEventId across the matching connection */
  createdAtEventId: Scalars['BigFloat']['output'];
  /** Sum of id across the matching connection */
  id: Scalars['BigInt']['output'];
  /** Sum of ownerAccountId across the matching connection */
  ownerAccountId: Scalars['BigInt']['output'];
  /** Sum of sellTick across the matching connection */
  sellTick: Scalars['BigInt']['output'];
  /** Sum of strategyAccountId across the matching connection */
  strategyAccountId: Scalars['BigInt']['output'];
};

/** A filter to be used against many `TradingStrategyBalanceChangeEvent` object types. All fields are combined with a logical ‘and.’ */
export type TradingStrategyToManyTradingStrategyBalanceChangeEventFilter = {
  /** Aggregates across related `TradingStrategyBalanceChangeEvent` match the filter criteria. */
  aggregates?: InputMaybe<TradingStrategyBalanceChangeEventAggregatesFilter>;
  /** Every related `TradingStrategyBalanceChangeEvent` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  every?: InputMaybe<TradingStrategyBalanceChangeEventFilter>;
  /** No related `TradingStrategyBalanceChangeEvent` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  none?: InputMaybe<TradingStrategyBalanceChangeEventFilter>;
  /** Some related `TradingStrategyBalanceChangeEvent` matches the filter criteria. All fields are combined with a logical ‘and.’ */
  some?: InputMaybe<TradingStrategyBalanceChangeEventFilter>;
};

export type TradingStrategyVariancePopulationAggregateFilter = {
  buyTick?: InputMaybe<BigFloatFilter>;
  closedAtEventId?: InputMaybe<BigFloatFilter>;
  createdAtEventId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  ownerAccountId?: InputMaybe<BigFloatFilter>;
  sellTick?: InputMaybe<BigFloatFilter>;
  strategyAccountId?: InputMaybe<BigFloatFilter>;
};

export type TradingStrategyVariancePopulationAggregates = {
  __typename?: 'TradingStrategyVariancePopulationAggregates';
  /** Population variance of buyTick across the matching connection */
  buyTick?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of closedAtEventId across the matching connection */
  closedAtEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of createdAtEventId across the matching connection */
  createdAtEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of ownerAccountId across the matching connection */
  ownerAccountId?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of sellTick across the matching connection */
  sellTick?: Maybe<Scalars['BigFloat']['output']>;
  /** Population variance of strategyAccountId across the matching connection */
  strategyAccountId?: Maybe<Scalars['BigFloat']['output']>;
};

export type TradingStrategyVarianceSampleAggregateFilter = {
  buyTick?: InputMaybe<BigFloatFilter>;
  closedAtEventId?: InputMaybe<BigFloatFilter>;
  createdAtEventId?: InputMaybe<BigFloatFilter>;
  id?: InputMaybe<BigFloatFilter>;
  ownerAccountId?: InputMaybe<BigFloatFilter>;
  sellTick?: InputMaybe<BigFloatFilter>;
  strategyAccountId?: InputMaybe<BigFloatFilter>;
};

export type TradingStrategyVarianceSampleAggregates = {
  __typename?: 'TradingStrategyVarianceSampleAggregates';
  /** Sample variance of buyTick across the matching connection */
  buyTick?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of closedAtEventId across the matching connection */
  closedAtEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of createdAtEventId across the matching connection */
  createdAtEventId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of id across the matching connection */
  id?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of ownerAccountId across the matching connection */
  ownerAccountId?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of sellTick across the matching connection */
  sellTick?: Maybe<Scalars['BigFloat']['output']>;
  /** Sample variance of strategyAccountId across the matching connection */
  strategyAccountId?: Maybe<Scalars['BigFloat']['output']>;
};

export type _PrismaMigration = Node & {
  __typename?: '_PrismaMigration';
  appliedStepsCount: Scalars['Int']['output'];
  checksum: Scalars['String']['output'];
  finishedAt?: Maybe<Scalars['Datetime']['output']>;
  id: Scalars['String']['output'];
  logs?: Maybe<Scalars['String']['output']>;
  migrationName: Scalars['String']['output'];
  /** A globally unique identifier. Can be used in various places throughout the system to identify this single value. */
  nodeId: Scalars['ID']['output'];
  rolledBackAt?: Maybe<Scalars['Datetime']['output']>;
  startedAt: Scalars['Datetime']['output'];
};

export type _PrismaMigrationAggregates = {
  __typename?: '_PrismaMigrationAggregates';
  /** Mean average aggregates across the matching connection (ignoring before/after/first/last/offset) */
  average?: Maybe<_PrismaMigrationAverageAggregates>;
  /** Distinct count aggregates across the matching connection (ignoring before/after/first/last/offset) */
  distinctCount?: Maybe<_PrismaMigrationDistinctCountAggregates>;
  keys?: Maybe<Array<Scalars['String']['output']>>;
  /** Maximum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  max?: Maybe<_PrismaMigrationMaxAggregates>;
  /** Minimum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  min?: Maybe<_PrismaMigrationMinAggregates>;
  /** Population standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevPopulation?: Maybe<_PrismaMigrationStddevPopulationAggregates>;
  /** Sample standard deviation aggregates across the matching connection (ignoring before/after/first/last/offset) */
  stddevSample?: Maybe<_PrismaMigrationStddevSampleAggregates>;
  /** Sum aggregates across the matching connection (ignoring before/after/first/last/offset) */
  sum?: Maybe<_PrismaMigrationSumAggregates>;
  /** Population variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  variancePopulation?: Maybe<_PrismaMigrationVariancePopulationAggregates>;
  /** Sample variance aggregates across the matching connection (ignoring before/after/first/last/offset) */
  varianceSample?: Maybe<_PrismaMigrationVarianceSampleAggregates>;
};

export type _PrismaMigrationAverageAggregates = {
  __typename?: '_PrismaMigrationAverageAggregates';
  /** Mean average of appliedStepsCount across the matching connection */
  appliedStepsCount?: Maybe<Scalars['BigFloat']['output']>;
};

/**
 * A condition to be used against `_PrismaMigration` object types. All fields are
 * tested for equality and combined with a logical ‘and.’
 */
export type _PrismaMigrationCondition = {
  /** Checks for equality with the object’s `appliedStepsCount` field. */
  appliedStepsCount?: InputMaybe<Scalars['Int']['input']>;
  /** Checks for equality with the object’s `checksum` field. */
  checksum?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `finishedAt` field. */
  finishedAt?: InputMaybe<Scalars['Datetime']['input']>;
  /** Checks for equality with the object’s `id` field. */
  id?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `logs` field. */
  logs?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `migrationName` field. */
  migrationName?: InputMaybe<Scalars['String']['input']>;
  /** Checks for equality with the object’s `rolledBackAt` field. */
  rolledBackAt?: InputMaybe<Scalars['Datetime']['input']>;
  /** Checks for equality with the object’s `startedAt` field. */
  startedAt?: InputMaybe<Scalars['Datetime']['input']>;
};

export type _PrismaMigrationDistinctCountAggregates = {
  __typename?: '_PrismaMigrationDistinctCountAggregates';
  /** Distinct count of appliedStepsCount across the matching connection */
  appliedStepsCount?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of checksum across the matching connection */
  checksum?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of finishedAt across the matching connection */
  finishedAt?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of id across the matching connection */
  id?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of logs across the matching connection */
  logs?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of migrationName across the matching connection */
  migrationName?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of rolledBackAt across the matching connection */
  rolledBackAt?: Maybe<Scalars['BigInt']['output']>;
  /** Distinct count of startedAt across the matching connection */
  startedAt?: Maybe<Scalars['BigInt']['output']>;
};

/** A filter to be used against `_PrismaMigration` object types. All fields are combined with a logical ‘and.’ */
export type _PrismaMigrationFilter = {
  /** Checks for all expressions in this list. */
  and?: InputMaybe<Array<_PrismaMigrationFilter>>;
  /** Filter by the object’s `appliedStepsCount` field. */
  appliedStepsCount?: InputMaybe<IntFilter>;
  /** Filter by the object’s `checksum` field. */
  checksum?: InputMaybe<StringFilter>;
  /** Filter by the object’s `finishedAt` field. */
  finishedAt?: InputMaybe<DatetimeFilter>;
  /** Filter by the object’s `id` field. */
  id?: InputMaybe<StringFilter>;
  /** Filter by the object’s `logs` field. */
  logs?: InputMaybe<StringFilter>;
  /** Filter by the object’s `migrationName` field. */
  migrationName?: InputMaybe<StringFilter>;
  /** Negates the expression. */
  not?: InputMaybe<_PrismaMigrationFilter>;
  /** Checks for any expressions in this list. */
  or?: InputMaybe<Array<_PrismaMigrationFilter>>;
  /** Filter by the object’s `rolledBackAt` field. */
  rolledBackAt?: InputMaybe<DatetimeFilter>;
  /** Filter by the object’s `startedAt` field. */
  startedAt?: InputMaybe<DatetimeFilter>;
};

export type _PrismaMigrationMaxAggregates = {
  __typename?: '_PrismaMigrationMaxAggregates';
  /** Maximum of appliedStepsCount across the matching connection */
  appliedStepsCount?: Maybe<Scalars['Int']['output']>;
};

export type _PrismaMigrationMinAggregates = {
  __typename?: '_PrismaMigrationMinAggregates';
  /** Minimum of appliedStepsCount across the matching connection */
  appliedStepsCount?: Maybe<Scalars['Int']['output']>;
};

export type _PrismaMigrationStddevPopulationAggregates = {
  __typename?: '_PrismaMigrationStddevPopulationAggregates';
  /** Population standard deviation of appliedStepsCount across the matching connection */
  appliedStepsCount?: Maybe<Scalars['BigFloat']['output']>;
};

export type _PrismaMigrationStddevSampleAggregates = {
  __typename?: '_PrismaMigrationStddevSampleAggregates';
  /** Sample standard deviation of appliedStepsCount across the matching connection */
  appliedStepsCount?: Maybe<Scalars['BigFloat']['output']>;
};

export type _PrismaMigrationSumAggregates = {
  __typename?: '_PrismaMigrationSumAggregates';
  /** Sum of appliedStepsCount across the matching connection */
  appliedStepsCount: Scalars['BigInt']['output'];
};

export type _PrismaMigrationVariancePopulationAggregates = {
  __typename?: '_PrismaMigrationVariancePopulationAggregates';
  /** Population variance of appliedStepsCount across the matching connection */
  appliedStepsCount?: Maybe<Scalars['BigFloat']['output']>;
};

export type _PrismaMigrationVarianceSampleAggregates = {
  __typename?: '_PrismaMigrationVarianceSampleAggregates';
  /** Sample variance of appliedStepsCount across the matching connection */
  appliedStepsCount?: Maybe<Scalars['BigFloat']['output']>;
};

/** A connection to a list of `_PrismaMigration` values. */
export type _PrismaMigrationsConnection = {
  __typename?: '_PrismaMigrationsConnection';
  /** Aggregates across the matching connection (ignoring before/after/first/last/offset) */
  aggregates?: Maybe<_PrismaMigrationAggregates>;
  /** A list of edges which contains the `_PrismaMigration` and cursor to aid in pagination. */
  edges: Array<_PrismaMigrationsEdge>;
  /** Grouped aggregates across the matching connection (ignoring before/after/first/last/offset) */
  groupedAggregates?: Maybe<Array<_PrismaMigrationAggregates>>;
  /** A list of `_PrismaMigration` objects. */
  nodes: Array<_PrismaMigration>;
  /** Information to aid in pagination. */
  pageInfo: PageInfo;
  /** The count of *all* `_PrismaMigration` you could get from the connection. */
  totalCount: Scalars['Int']['output'];
};


/** A connection to a list of `_PrismaMigration` values. */
export type _PrismaMigrationsConnectionGroupedAggregatesArgs = {
  groupBy: Array<_PrismaMigrationsGroupBy>;
  having?: InputMaybe<_PrismaMigrationsHavingInput>;
};

/** A `_PrismaMigration` edge in the connection. */
export type _PrismaMigrationsEdge = {
  __typename?: '_PrismaMigrationsEdge';
  /** A cursor for use in pagination. */
  cursor?: Maybe<Scalars['Cursor']['output']>;
  /** The `_PrismaMigration` at the end of the edge. */
  node: _PrismaMigration;
};

/** Grouping methods for `_PrismaMigration` for usage during aggregation. */
export type _PrismaMigrationsGroupBy =
  | 'APPLIED_STEPS_COUNT'
  | 'CHECKSUM'
  | 'FINISHED_AT'
  | 'FINISHED_AT_TRUNCATED_TO_DAY'
  | 'FINISHED_AT_TRUNCATED_TO_HOUR'
  | 'LOGS'
  | 'MIGRATION_NAME'
  | 'ROLLED_BACK_AT'
  | 'ROLLED_BACK_AT_TRUNCATED_TO_DAY'
  | 'ROLLED_BACK_AT_TRUNCATED_TO_HOUR'
  | 'STARTED_AT'
  | 'STARTED_AT_TRUNCATED_TO_DAY'
  | 'STARTED_AT_TRUNCATED_TO_HOUR';

export type _PrismaMigrationsHavingAverageInput = {
  appliedStepsCount?: InputMaybe<HavingIntFilter>;
  finishedAt?: InputMaybe<HavingDatetimeFilter>;
  rolledBackAt?: InputMaybe<HavingDatetimeFilter>;
  startedAt?: InputMaybe<HavingDatetimeFilter>;
};

export type _PrismaMigrationsHavingDistinctCountInput = {
  appliedStepsCount?: InputMaybe<HavingIntFilter>;
  finishedAt?: InputMaybe<HavingDatetimeFilter>;
  rolledBackAt?: InputMaybe<HavingDatetimeFilter>;
  startedAt?: InputMaybe<HavingDatetimeFilter>;
};

/** Conditions for `_PrismaMigration` aggregates. */
export type _PrismaMigrationsHavingInput = {
  AND?: InputMaybe<Array<_PrismaMigrationsHavingInput>>;
  OR?: InputMaybe<Array<_PrismaMigrationsHavingInput>>;
  average?: InputMaybe<_PrismaMigrationsHavingAverageInput>;
  distinctCount?: InputMaybe<_PrismaMigrationsHavingDistinctCountInput>;
  max?: InputMaybe<_PrismaMigrationsHavingMaxInput>;
  min?: InputMaybe<_PrismaMigrationsHavingMinInput>;
  stddevPopulation?: InputMaybe<_PrismaMigrationsHavingStddevPopulationInput>;
  stddevSample?: InputMaybe<_PrismaMigrationsHavingStddevSampleInput>;
  sum?: InputMaybe<_PrismaMigrationsHavingSumInput>;
  variancePopulation?: InputMaybe<_PrismaMigrationsHavingVariancePopulationInput>;
  varianceSample?: InputMaybe<_PrismaMigrationsHavingVarianceSampleInput>;
};

export type _PrismaMigrationsHavingMaxInput = {
  appliedStepsCount?: InputMaybe<HavingIntFilter>;
  finishedAt?: InputMaybe<HavingDatetimeFilter>;
  rolledBackAt?: InputMaybe<HavingDatetimeFilter>;
  startedAt?: InputMaybe<HavingDatetimeFilter>;
};

export type _PrismaMigrationsHavingMinInput = {
  appliedStepsCount?: InputMaybe<HavingIntFilter>;
  finishedAt?: InputMaybe<HavingDatetimeFilter>;
  rolledBackAt?: InputMaybe<HavingDatetimeFilter>;
  startedAt?: InputMaybe<HavingDatetimeFilter>;
};

export type _PrismaMigrationsHavingStddevPopulationInput = {
  appliedStepsCount?: InputMaybe<HavingIntFilter>;
  finishedAt?: InputMaybe<HavingDatetimeFilter>;
  rolledBackAt?: InputMaybe<HavingDatetimeFilter>;
  startedAt?: InputMaybe<HavingDatetimeFilter>;
};

export type _PrismaMigrationsHavingStddevSampleInput = {
  appliedStepsCount?: InputMaybe<HavingIntFilter>;
  finishedAt?: InputMaybe<HavingDatetimeFilter>;
  rolledBackAt?: InputMaybe<HavingDatetimeFilter>;
  startedAt?: InputMaybe<HavingDatetimeFilter>;
};

export type _PrismaMigrationsHavingSumInput = {
  appliedStepsCount?: InputMaybe<HavingIntFilter>;
  finishedAt?: InputMaybe<HavingDatetimeFilter>;
  rolledBackAt?: InputMaybe<HavingDatetimeFilter>;
  startedAt?: InputMaybe<HavingDatetimeFilter>;
};

export type _PrismaMigrationsHavingVariancePopulationInput = {
  appliedStepsCount?: InputMaybe<HavingIntFilter>;
  finishedAt?: InputMaybe<HavingDatetimeFilter>;
  rolledBackAt?: InputMaybe<HavingDatetimeFilter>;
  startedAt?: InputMaybe<HavingDatetimeFilter>;
};

export type _PrismaMigrationsHavingVarianceSampleInput = {
  appliedStepsCount?: InputMaybe<HavingIntFilter>;
  finishedAt?: InputMaybe<HavingDatetimeFilter>;
  rolledBackAt?: InputMaybe<HavingDatetimeFilter>;
  startedAt?: InputMaybe<HavingDatetimeFilter>;
};

/** Methods to use when ordering `_PrismaMigration`. */
export type _PrismaMigrationsOrderBy =
  | 'APPLIED_STEPS_COUNT_ASC'
  | 'APPLIED_STEPS_COUNT_DESC'
  | 'CHECKSUM_ASC'
  | 'CHECKSUM_DESC'
  | 'FINISHED_AT_ASC'
  | 'FINISHED_AT_DESC'
  | 'ID_ASC'
  | 'ID_DESC'
  | 'LOGS_ASC'
  | 'LOGS_DESC'
  | 'MIGRATION_NAME_ASC'
  | 'MIGRATION_NAME_DESC'
  | 'NATURAL'
  | 'PRIMARY_KEY_ASC'
  | 'PRIMARY_KEY_DESC'
  | 'ROLLED_BACK_AT_ASC'
  | 'ROLLED_BACK_AT_DESC'
  | 'STARTED_AT_ASC'
  | 'STARTED_AT_DESC';

export type GetLpFeeInfoQueryVariables = Exact<{
  start: Scalars['Datetime']['input'];
  end: Scalars['Datetime']['input'];
}>;


export type GetLpFeeInfoQuery = { __typename?: 'Query', limitOrderFills?: { __typename?: 'LimitOrderFillsConnection', aggregates?: { __typename?: 'LimitOrderFillAggregates', sum?: { __typename?: 'LimitOrderFillSumAggregates', feesEarnedValueUsd: `${number}` } | null } | null } | null, rangeOrderFills?: { __typename?: 'RangeOrderFillsConnection', aggregates?: { __typename?: 'RangeOrderFillAggregates', sum?: { __typename?: 'RangeOrderFillSumAggregates', baseFeesEarnedValueUsd: `${number}`, quoteFeesEarnedValueUsd: `${number}` } | null } | null } | null };

export type GetBoostSummaryQueryVariables = Exact<{
  start: Scalars['Datetime']['input'];
  end: Scalars['Datetime']['input'];
  asset: ChainflipAsset;
}>;


export type GetBoostSummaryQuery = { __typename?: 'Query', boostPools?: { __typename?: 'BoostPoolsConnection', nodes: Array<{ __typename?: 'BoostPool', asset: ChainflipAsset, feeTierPips: number, boostShares: { __typename?: 'BoostSharesConnection', aggregates?: { __typename?: 'BoostShareAggregates', sum?: { __typename?: 'BoostShareSumAggregates', fee: `${number}`, feeUsd: `${number}`, amount: `${number}`, amountUsd: `${number}` } | null } | null }, apys: { __typename?: 'BoostPoolApiesConnection', nodes: Array<{ __typename?: 'BoostPoolApy', projectedApy: `${number}` }> } }> } | null };

export type GetLpFillsQueryVariables = Exact<{
  start: Scalars['Datetime']['input'];
  end: Scalars['Datetime']['input'];
}>;


export type GetLpFillsQuery = { __typename?: 'Query', limitOrders?: { __typename?: 'LimitOrderFillsConnection', groupedAggregates?: Array<{ __typename?: 'LimitOrderFillAggregates', keys?: Array<string> | null, sum?: { __typename?: 'LimitOrderFillSumAggregates', filledAmountValueUsd: `${number}` } | null }> | null } | null, rangeOrders?: { __typename?: 'RangeOrderFillsConnection', groupedAggregates?: Array<{ __typename?: 'RangeOrderFillAggregates', keys?: Array<string> | null, sum?: { __typename?: 'RangeOrderFillSumAggregates', baseFilledAmountValueUsd: `${number}`, quoteFilledAmountValueUsd: `${number}` } | null }> | null } | null };

export type GetAccountQueryVariables = Exact<{
  ids?: InputMaybe<Array<Scalars['Int']['input']> | Scalars['Int']['input']>;
}>;


export type GetAccountQuery = { __typename?: 'Query', accounts?: { __typename?: 'AccountsConnection', nodes: Array<{ __typename?: 'Account', id: number, idSs58: string }> } | null };


export const GetLpFeeInfoDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetLpFeeInfo"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"start"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Datetime"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"end"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Datetime"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"limitOrderFills"},"name":{"kind":"Name","value":"allLimitOrderFills"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"blockTimestamp"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"greaterThanOrEqualTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"start"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"lessThanOrEqualTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"end"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregates"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"feesEarnedValueUsd"}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"rangeOrderFills"},"name":{"kind":"Name","value":"allRangeOrderFills"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"blockTimestamp"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"greaterThanOrEqualTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"start"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"lessThanOrEqualTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"end"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregates"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"baseFeesEarnedValueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"quoteFeesEarnedValueUsd"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetLpFeeInfoQuery, GetLpFeeInfoQueryVariables>;
export const GetBoostSummaryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetBoostSummary"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"start"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Datetime"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"end"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Datetime"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"asset"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ChainflipAsset"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"boostPools"},"name":{"kind":"Name","value":"allBoostPools"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"asset"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"equalTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"asset"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"asset"}},{"kind":"Field","name":{"kind":"Name","value":"feeTierPips"}},{"kind":"Field","alias":{"kind":"Name","value":"boostShares"},"name":{"kind":"Name","value":"boostSharesByBoostPoolId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"executedAtTimestamp"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"greaterThanOrEqualTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"start"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"lessThanOrEqualTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"end"}}}]}},{"kind":"ObjectField","name":{"kind":"Name","value":"lost"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"equalTo"},"value":{"kind":"BooleanValue","value":false}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"aggregates"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"fee"}},{"kind":"Field","name":{"kind":"Name","value":"feeUsd"}},{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"amountUsd"}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"apys"},"name":{"kind":"Name","value":"boostPoolApiesByBoostPoolId"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"EnumValue","value":"BLOCK_DESC"}},{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"projectedApy"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetBoostSummaryQuery, GetBoostSummaryQueryVariables>;
export const GetLpFillsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetLpFills"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"start"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Datetime"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"end"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Datetime"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"limitOrders"},"name":{"kind":"Name","value":"allLimitOrderFills"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"blockTimestamp"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"greaterThanOrEqualTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"start"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"lessThanOrEqualTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"end"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupedAggregates"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"groupBy"},"value":{"kind":"EnumValue","value":"LIQUIDITY_PROVIDER_ID"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"keys"}},{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"filledAmountValueUsd"}}]}}]}}]}},{"kind":"Field","alias":{"kind":"Name","value":"rangeOrders"},"name":{"kind":"Name","value":"allRangeOrderFills"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"blockTimestamp"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"greaterThanOrEqualTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"start"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"lessThanOrEqualTo"},"value":{"kind":"Variable","name":{"kind":"Name","value":"end"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"groupedAggregates"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"groupBy"},"value":{"kind":"EnumValue","value":"LIQUIDITY_PROVIDER_ID"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"keys"}},{"kind":"Field","name":{"kind":"Name","value":"sum"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"baseFilledAmountValueUsd"}},{"kind":"Field","name":{"kind":"Name","value":"quoteFilledAmountValueUsd"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetLpFillsQuery, GetLpFillsQueryVariables>;
export const GetAccountDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetAccount"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"ids"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"accounts"},"name":{"kind":"Name","value":"allAccounts"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filter"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"in"},"value":{"kind":"Variable","name":{"kind":"Name","value":"ids"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"idSs58"}}]}}]}}]}}]} as unknown as DocumentNode<GetAccountQuery, GetAccountQueryVariables>;